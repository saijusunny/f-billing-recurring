#from ast import pattern
from ast import Store, Str
from asyncio.windows_events import NULL
from asyncore import poll3
from calendar import c
from cgitb import enable, text
from ctypes import alignment
from distutils import command
import email
from email import encoders
from email.mime.base import MIMEBase
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
import enum
from glob import glob
from itertools import count
from locale import currency
from pydoc import describe, doc
import re
from secrets import choice
import smtplib
from sqlite3 import enable_callback_tracebacks
import string
from tkinter import *
from tkinter import messagebox
from tkinter import ttk
from tkinter import font
from tkinter import colorchooser
from tkinter.font import BOLD
from turtle import st, width
from urllib.parse import parse_qs
from xml.dom.minidom import Entity
from PIL import ImageTk, Image, ImageFile
from matplotlib.font_manager import json_dump
from matplotlib.pyplot import get
from numpy import choose, empty, place, size
import pandas as pd
from tkinter.messagebox import showinfo
import tkinter.scrolledtext as scrolledtext
from tkinter.filedialog import askopenfilename
import os
import webbrowser
from pip import main
from tkcalendar import Calendar
from tkcalendar import DateEntry
from datetime import date,datetime
import datetime as dt
from dateutil.relativedelta import relativedelta
from tkinter import filedialog
import subprocess
import mysql.connector
import io
from openpyxl.workbook import Workbook
from openpyxl import load_workbook
import shutil
import csv
import json
from pathlib import Path
from tkinter import font as tkFont
from _tkinter import TclError
from reportlab.lib import colors
from reportlab.pdfbase.ttfonts import TTFont
from reportlab.pdfbase import pdfmetrics
from reportlab.lib.styles import ParagraphStyle
from reportlab.platypus import SimpleDocTemplate,Table,TableStyle,Paragraph
from reportlab.lib.pagesizes import letter
import re


import win32api
from textwrap import wrap




fbilldb = mysql.connector.connect(
    host="localhost", user="root", password="", database="fbillingsintgrtd", port="3306"
)
fbcursor = fbilldb.cursor(buffered = True)

ImageFile.LOAD_TRUNCATED_IMAGES = True

def reset():
  global root
  root.destroy()


# root.title("F-Billing Revolution 2022(FREE version) | Company database:fbillingdb | User:Administrator")
def log():
    global user_name1
    user_name1=username1.get()
    passwd1=password1.get()
    if user_name1=="" or passwd1=="":
        Label(text='Plz enter both username and password',fg='red').place(x=85,y=260)
    else:
        sql='SELECT * FROM users WHERE username=%s AND password=%s'
        val=(user_name1,passwd1,)
        fbcursor.execute(sql,val)
        if fbcursor.fetchone()is not None:
            mainpage()
            if user_name1 != "adminstator":
              tab06.destroy()
            else:
              pass
            root.iconify()
        else:
            messagebox.showinfo('Acess denied','Username Or Password Wrong')

  
sql = "select * from users"
fbcursor.execute(sql)
user_log = fbcursor.fetchall()
if not user_log:
  def lo():
    mainpage()
  root=Tk()
  root.geometry("500x250")
  root.resizable(False, False)
  root.eval('tk::PlaceWindow . center')
  Label(text='Wellocome to F-Billing Revolution 2022',font='arial 13 bold').place(x=100,y=40)
  submitbtn1=Button(text='OPEN NOW', width=20,height=2,command=lo,activeforeground="white",activebackground="black",font='arial 8 bold').place(x=165,y=100)             
else:
    root=Tk()
    root.geometry("500x200")
    root.resizable(False, False)
    root.eval('tk::PlaceWindow . center')
    root.title("F-Billing Revolution 2022")
    p1 = PhotoImage(file = 'images/fbicon.png')
    root.iconphoto(False,p1)
    username1=StringVar()
    password1=StringVar()

    Label(text='Login F-Billing Revolution 2022',font='arial 13 bold').place(x=120,y=15)
    
  
    sql = "select username from users"
    fbcursor.execute(sql)
    user_log_name = fbcursor.fetchall()
    uss1=Label(text='Username').place(x=120,y=65)
    ee1 = ttk.Combobox(textvariable=username1)
    ee1.place(x=220,y=65)
    ee1["values"] = user_log_name

    pss1=Label(text='Password').place(x=120,y=105)
    ee2=Entry(textvariable=password1,show='*',width=23).place(x=220,y=105)
    
    submitbtn1=Button(text='Login', width=15,command=log,activeforeground="white",
                   activebackground="black").place(x=250,y=150)
    
  
invoices= PhotoImage(file="images/invoice.png")
orders = PhotoImage(file="images/order.png")
estimates = PhotoImage(file="images/estimate.png")
recurring = PhotoImage(file="images/recurring.png")
purchase = PhotoImage(file="images/purchase.png")
expenses = PhotoImage(file="images/expense.png")
customer = PhotoImage(file="images/customer.png")
product = PhotoImage(file="images/package.png")
reports = PhotoImage(file="images/report.png")
setting = PhotoImage(file="images/setting.png")
tick = PhotoImage(file="images/check.png")
warnin = PhotoImage(file="images/sign_warning.png")
cancel = PhotoImage(file="images/close.png")
saves = PhotoImage(file="images/save.png")
folder = PhotoImage(file="images/folder-black.png")
photo11 = PhotoImage(file = "images/invoice-pvt.png")
customer = PhotoImage(file="images/customer.png")
smslog = PhotoImage(file = "images/smslog.png")
video = PhotoImage(file = "images/video.png")
mark1 = PhotoImage(file="images/mark.png")
mark2 = PhotoImage(file="images/mark2.png")
photo10 = PhotoImage(file = "images/text-message.png")
addnew = PhotoImage(file="images/plus.png")
delete = PhotoImage(file="images/delete_E.png")
recalc = PhotoImage(file="images/recalculate.png")
plus_1 = PhotoImage(file="images/plus_1.png")
minus = PhotoImage(file="images/minus.png")
search_1 = PhotoImage(file="images/search_1.png")
message_1 = PhotoImage(file="images/message_1.png")

selectall = PhotoImage(file="images/table_select_all.png")
cut = PhotoImage(file="images/cut.png")
copy = PhotoImage(file="images/copy.png")
paste = PhotoImage(file="images/paste.png")

undo = PhotoImage(file="images/undo.png")
redo = PhotoImage(file="images/redo.png")
bold = PhotoImage(file="images/bold.png")

italics = PhotoImage(file="images/italics.png")
underline = PhotoImage(file="images/underline.png")
left = PhotoImage(file="images/left.png")
  
right = PhotoImage(file="images/right.png")
center = PhotoImage(file="images/center.png")
hyperlink = PhotoImage(file="images/hyperlink.png")
remove = PhotoImage(file="images/eraser.png")
  
  
photo = PhotoImage(file = "images/plus.png")
photo1 = PhotoImage(file = "images/edit.png")
photo2 = PhotoImage(file = "images/delete_E.png")
photo3 = PhotoImage(file = "images/export-file.png")
photo4 = PhotoImage(file = "images/seo.png")
photo5 = PhotoImage(file = "images/printer.png")
photo6 = PhotoImage(file = "images/gmail.png")
photo7 = PhotoImage(file = "images/priewok.png")
photo8 = PhotoImage(file = "images/refresh_E.png")
photo9 = PhotoImage(file = "images/sum.png")
photo10 = PhotoImage(file = "images/text-message.png")
question = PhotoImage(file = "images/qstn.png")
color = PhotoImage(file = "images/colorpicker.png")
unlock = PhotoImage(file = "images/unlock.png")



def mainpage():
  root.iconify()
  main = Toplevel()
  main.geometry("1920x1080")
  p1 = PhotoImage(file = 'images/fbicon.png')
  main.iconphoto(False, p1)
  main.title("F-Billing Revolution 2022(FREE version) | Company database:fbillingdb | User:Administrator")
  s = ttk.Style()
  s.theme_use('default')
  s.configure('TNotebook.Tab', background="#999999", width=20, padding=10)
  tabControl = ttk.Notebook(main)
  tab1 = ttk.Frame(tabControl)
  tab2 = ttk.Frame(tabControl)
  tab3=  ttk.Frame(tabControl)
  tab4 = ttk.Frame(tabControl)
  tab5 = ttk.Frame(tabControl)
  tab6=  ttk.Frame(tabControl)
  tab7 = ttk.Frame(tabControl)
  tab8 = ttk.Frame(tabControl)
  tab9 =  ttk.Frame(tabControl)
  tab10=  ttk.Frame(tabControl)
  tabControl.add(tab1,image=invoices,compound = LEFT, text ='Invoices',)
  tabControl.add(tab2,image=orders,compound = LEFT, text ='Orders')
  tabControl.add(tab3,image=estimates,compound = LEFT, text ='Estimates')
  tabControl.add(tab4,image=recurring,compound = LEFT, text ='Recurring')
  tabControl.add(tab5,image=purchase,compound = LEFT, text ='Purchase Orders') 
  tabControl.add(tab6,image=expenses,compound = LEFT, text ='Expenses')
  tabControl.add(tab7,image=customer,compound = LEFT, text ='Customers')
  tabControl.add(tab8,image=product,compound = LEFT, text ='Product/Services')
  tabControl.add(tab9,image=reports,compound = LEFT, text ='Report')
  tabControl.add(tab10,image=setting,compound = LEFT, text ='Settings')
  tabControl.pack(expand = 1, fill ="both")
  
  

  def inv_create():
    pop=Toplevel(inv_midFrame)
    pop.title("Invoice")
    pop.geometry("950x690+150+0")
    
    def add_new_invoice():
      invoice_number = inv_number_entry.get()
      invodate = inv_date_entry.get_date()
      if checkvarStatus5.get() == 0:
        duedate = NULL
      else:
        duedate = inv_duedate_entry.get_date()
      term_of_payment = inv_terms_combo.get()
      ref = inv_ref_entry.get()
      status = draft_label.cget("text")
      emailon = never1_label.cget("text")
      printon = never2_label.cget("text")
      # smson = 
      subtotal = sub1.cget("text")
      invoicetot = invoicetot1.cget("text")
      totpaid = total1.cget("text")
      balance = balance1.cget("text")
      extracostname = ex_costn_combo.get()
      extracost = cost1.cget("text")
      template = template_entry.get()
      salesper = sales_per_entry.get()
      discourate = dis_rate_entry.get()
      discount = discount1.cget("text")
      tax1 = tax_1.cget("text")
      category = category_entry.get()
      businessname = inv_combo_e1.get()
      businessaddress = inv_addr_e2.get("1.0",END)
      shipname = inv_shipto_e3.get()
      shipaddress = inv_addr_e4.get("1.0",END)
      cpemail = inv_email_e5.get()
      cpmobileforsms = inv_sms_e6.get()
      if checkrecStatus.get() == 0 :
        next_invoice = NULL
        stop_recurring = NULL
        recurring_period = NULL
        recurring_period_month = NULL
        recurring_check = checkrecStatus.get()
      else:
        next_invoice = recur_nxt_inv_date.get_date()
        stop_recurring = recur_stop_date.get_date()
        recurring_period = recur_period_entry.get()
        recurring_period_month = recur_month_combo.get()
        recurring_check = checkrecStatus.get()
      title_text = title_txt_combo.get()
      header_text = pageh_txt_combo.get()
      footer_text = footer_txt_combo.get()
      tax2 = tax_2.cget("text")
      comments = comment_txt.get("1.0",END)
      privatenotes = private_note_txt.get("1.0",END)
      terms = term_txt.get("1.0",END)
      doc_get = doc_tree.get_children()
      if len(add_newline_tree.get_children()) == 0:
        quantity = 0
      else:
        for qn in add_newline_tree.get_children():
          quantity = add_newline_tree.item(qn)["values"][4]
      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql,)
      comp_data = fbcursor.fetchone()
      for record in add_newline_tree.get_children():
        storingproduct = add_newline_tree.item(record)["values"]
        if not comp_data:
          storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
          storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
          fbcursor.execute(storepro_sql,storepro_val)
          fbilldb.commit()
        elif comp_data[12] == "1":
          storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
          storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
          fbcursor.execute(storepro_sql,storepro_val)
          fbilldb.commit()
        elif comp_data[12] == "2":
          storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
          storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
          fbcursor.execute(storepro_sql,storepro_val)
          fbilldb.commit()
        elif comp_data[12] == "3":
          storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
          storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
          fbcursor.execute(storepro_sql,storepro_val)
          fbilldb.commit()


      for files in doc_get:
        file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
        file_val = (invoice_number,files)
        fbcursor.execute(file_sql,file_val)
        fbilldb.commit()

      
      inv_sql='INSERT INTO Invoice (invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)' #adding values into db
      inv_val=(invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,)
      fbcursor.execute(inv_sql,inv_val)
      fbilldb.commit()
      pop.destroy()
      messagebox.showinfo("F-Billing Revolution","Invoice saved")

      sql = "SELECT * FROM Invoice"
      fbcursor.execute(sql)
      invoice_records = fbcursor.fetchall()

      for record in inv_tree.get_children():
        inv_tree.delete(record)

      count = 0
      for i in invoice_records:
        if comp_data[7] == "before amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
        elif comp_data[7] == "after amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
        elif comp_data[7] == "before amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
        elif comp_data[7] == "after amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
      count += 1
      
      try:
        if showtotsum_btn['text'] == "Hide totals\nSum":
          it = []
          tp = []
          bl = []
          for i in inv_tree.get_children():
            invtot = inv_tree.item(i,'values')[9]
            totpaid = inv_tree.item(i,'values')[10]
            balance = inv_tree.item(i,'values')[11]
            if comp_data[7] == "before amount":
              it.append(invtot.split(str(comp_data[6]))[-1])
              tp.append(totpaid.split(str(comp_data[6]))[-1])
              bl.append(balance.split(str(comp_data[6]))[-1])
            if comp_data[7] == "after amount":
              it.append(invtot.split(str(comp_data[6]))[0])
              tp.append(totpaid.split(str(comp_data[6]))[0])
              bl.append(balance.split(str(comp_data[6]))[0])
            if comp_data[7] == "before amount with space":
              it.append(invtot.split(' ')[-1])
              tp.append(totpaid.split(' ')[-1])
              bl.append(balance.split(' ')[-1])
            if comp_data[7] == "after amount with space":
              it.append(invtot.split(' ')[0])
              tp.append(totpaid.split(' ')[0])
              bl.append(balance.split(' ')[0])

          total_invtot = 0.0
          total_totpaid = 0.0
          total_balance = 0.0
          for a in it:
            total_invtot += float(a)
          for b in tp:
            total_totpaid += float(b)
          for c in bl:
            total_balance += float(c)
          if comp_data[7] == "before amount":
            invtot_label.config(text=comp_data[6] + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + str(round(total_balance,2)))
          elif comp_data[7] == "after amount":
            invtot_label.config(text=str(round(total_invtot,2)) + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + comp_data[6])
          elif comp_data[7] == "before amount  with space":
            invtot_label.config(text=comp_data[6] + " " + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + " " + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + " " + str(round(total_balance,2)))
          elif comp_data[7] == "after amount with space":
            invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + " " + comp_data[6])
        else:
          pass
      except:
        pass


    #select customer
    def inv_sel_customer():
      global customer_selection
      customer_selection=Toplevel()
      customer_selection.title("Select Customer")
      customer_selection.geometry("930x650+240+10")
      customer_selection.resizable(False, False)

      global select_cust_tree

      select_cust_tree=ttk.Treeview(customer_selection, height=27)
      select_cust_tree["columns"]=["1","2","3","4"]
      select_cust_tree.column("#0", width=35)
      select_cust_tree.column("1", width=160)
      select_cust_tree.column("2", width=160)
      select_cust_tree.column("3", width=140)
      select_cust_tree.column("4", width=140)
      select_cust_tree.heading("#0",text="")
      select_cust_tree.heading("1",text="Customer/Ventor ID")
      select_cust_tree.heading("2",text="Customer/Ventor Name")
      select_cust_tree.heading("3",text="Tel.")
      select_cust_tree.heading("4",text="Contact Person")
      select_cust_tree.place(x=5, y=45)

      sql_sel_cust = "SELECT * FROM Customer"
      fbcursor.execute(sql_sel_cust)
      customer_details = fbcursor.fetchall()

      count=0
      for i in customer_details:
        if True:
          select_cust_tree.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
        else:
          pass
      count += 1


      def cust_tree_fetch():
        cust_tree_item = select_cust_tree.item(select_cust_tree.focus())["values"][0]
        sql = "SELECT * FROM Customer WHERE customerno=%s"
        val = (cust_tree_item,)
        fbcursor.execute(sql,val)
        sel_cust_str = fbcursor.fetchone()
        inv_combo_e1.delete(0, END)
        inv_combo_e1.insert(0,sel_cust_str[4])
        inv_addr_e2.delete('1.0',END)
        inv_addr_e2.insert('1.0',sel_cust_str[5])
        inv_shipto_e3.delete(0, END)
        inv_shipto_e3.insert(0, sel_cust_str[6])
        inv_addr_e4.delete('1.0',END)
        inv_addr_e4.insert('1.0',sel_cust_str[7])
        inv_email_e5.delete(0,END)
        inv_email_e5.insert(0,sel_cust_str[9])
        inv_sms_e6.delete(0,END)
        inv_sms_e6.insert(0,sel_cust_str[12])

        customer_selection.destroy()


      #add new customer
      def inv_create_newcustomer():
        def cancel_add_customer():
          vendor.destroy()
        def add_customer():
          customerno = cust_id.get()
          businessname = 	bn.get()
          if customerno == "" or businessname == "":
            messagebox.showerror("Empty Field", "Customer ID field and Business Name field is Required!")
          else:
            businessaddress = bus_address.get('1.0',END)
            contactperson = cn.get()
            cpemail = cem.get()
            cptelno = ct.get()
            cpfax = cf.get()
            cpmobileforsms = cs.get()
            taxexempt = check_taxexempt.get()
            specifictax1 = specf_tax1_entry.get()
            specifictax2 = specf_tax2_entry.get()
            discount = discount_entry.get()
            customertype = custypeVar.get()

            category = cust_cate.get()
            status = check_active.get()
            shipname = sn.get()
            shipaddress = ship_address.get('1.0',END)
            shipcontactperson = scn.get()
            shipcpemail = scem.get()
            shipcptelno = sct.get()
            shipcpfax = scf.get()
            country = countryVar.get()
            city = cityVar.get()
            notes = scroll_notes.get("1.0", END)
            custno_sql = "SELECT customerno FROM customer WHERE customerno=%s"
            custno_val = (customerno,)
            fbcursor.execute(custno_sql,custno_val)
            custno_data = fbcursor.fetchone()

            custname_sql = "SELECT customerno FROM customer WHERE businessname=%s"
            custname_val = (businessname,)
            fbcursor.execute(custname_sql,custname_val)
            custname_data = fbcursor.fetchone()

            if custno_data is None:
              if custname_data is None:
                cust_add_sql = "INSERT INTO customer(customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2)VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" #adding values into db
                cust_add_val = (customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2)
                fbcursor.execute(cust_add_sql,cust_add_val)
                fbilldb.commit()
                for record in select_cust_tree.get_children():
                  select_cust_tree.delete(record)
                all_cust_sql = "SELECT * FROM customer"
                fbcursor.execute(all_cust_sql)
                all_cust_data = fbcursor.fetchall()

                count_cus=0
                for i in all_cust_data:
                  select_cust_tree.insert(parent='', index='end', iid=count_cus, text='', values=(i[24],i[4],i[10],i[8]))
                  count_cus +=1
                
                vendor.destroy()
              else:
                messagebox.showerror("Already Exists", "Business name is already exists. Duplicate value not allowed")
            else:
              messagebox.showerror("Already Exists", "Customer ID value already exists. Duplicate value not allowed")
        def copy_bus_details():
          ship_name.delete(0,END)
          ship_name.insert(0,bus_name.get())
          ship_address.delete('1.0',END)
          ship_address.insert('1.0',bus_address.get('1.0',END))
        def copy_contper_details():
          shipcont_person.delete(0,END)
          shipcont_person.insert(0,cont_person.get())
          shipcont_email.delete(0,END)
          shipcont_email.insert(0,cont_email.get())
          shipcont_tel.delete(0,END)
          shipcont_tel.insert(0,cont_tel.get())
          shipcont_fax.delete(0,END)
          shipcont_fax.insert(0,cont_fax.get())



        vendor=Toplevel(inv_midFrame)
        vendor.title("Add new Customer")
        p2 = PhotoImage(file = "images/fbicon.png")
        vendor.iconphoto(False, p2)
        vendor.geometry("775x580+300+100")

        labelframe1 = LabelFrame(vendor,text="Customer",bg="#f5f3f2",font=("arial",15))
        labelframe1.place(x=10,y=10,width=755,height=530)

        custVar = IntVar()
        customer_id=Label(labelframe1, text="Customer ID:",bg="#f5f3f2",fg="blue").place(x=10 ,y=7)
        cust_id=Entry(labelframe1)
        cust_id.place(x=120,y=7,width=200)

        cust_cate = StringVar()
        category=Label(labelframe1, text="Category:",bg="#f5f3f2").place(x=330 ,y=7)
        cust_category = ttk.Combobox(labelframe1,textvariable=cust_cate,width=35)
        category_sql = 'SELECT DISTINCT category FROM customer'
        fbcursor.execute(category_sql,)
        category_data = fbcursor.fetchall()
        if len(category_data) == 0:
          cust_category['values'] = 'Default'
        else:
          cust_category['values'] = category_data
          cust_category.current(0)
        cust_category.place(x=390 ,y=7,width=220)

        check_active = IntVar()
        status=Label(labelframe1, text="Status:").place(x=620 ,y=7)
        cust_status = Checkbutton(labelframe1,text="Active",variable=check_active,onvalue=1,offvalue=0,bg="#f5f3f2")
        cust_status.select()
        cust_status.place(x=670 ,y=6)
        
        labelframe2 = LabelFrame(labelframe1,text="Invoice to (appears on invoices)",bg="#f5f3f2")
        labelframe2.place(x=10,y=35,width=340,height=125)

        bn = StringVar()
        bname = Label(labelframe2, text="Business name:",bg="#f5f3f2",fg="blue").place(x=10,y=10)
        bus_name = Entry(labelframe2,textvariable=bn)
        bus_name.place(x=110,y=10,width=210)

        badd = StringVar()
        baddress = Label(labelframe2, text="Address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
        bus_address = scrolledtext.ScrolledText(labelframe2,)
        bus_address.place(x=110,y=35,width=210,height=63)
        
        btn_mover1 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_bus_details)
        btn_mover1.place(x=359, y=85,height=20)

        labelframe3 = LabelFrame(labelframe1,text="Ship to (appears on invoices)",bg="#f5f3f2")
        labelframe3.place(x=400,y=35,width=340,height=125)

        sn = StringVar()
        sname = Label(labelframe3, text="Ship to name:",bg="#f5f3f2").place(x=10,y=10)
        ship_name = Entry(labelframe3,width=28,textvariable=sn)
        ship_name.place(x=110,y=10,width=210)
        sadd = StringVar()
        saddress = Label(labelframe3, text="Address:",bg="#f5f3f2").place(x=10,y=35)
        ship_address = scrolledtext.ScrolledText(labelframe3)
        ship_address.place(x=110,y=35,width=210,height=63)
        
        labelframe4 = LabelFrame(labelframe1,text="Contact",bg="#f5f3f2")
        labelframe4.place(x=10,y=170,width=340,height=137)

        cn = StringVar()
        cname = Label(labelframe4, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
        cont_person = Entry(labelframe4,textvariable=cn)
        cont_person.place(x=110,y=10,width=210)

        cem = StringVar()
        cemail = Label(labelframe4, text="E-mail address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
        cont_email = Entry(labelframe4,textvariable=cem)

        def validate_email(value):
          
          """
          Validate the email entry
          :param value
          :return:
          """

          pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
          if re.fullmatch(pattern, value) is None:
            return False
          cont_email.config(fg="black")
          return True

        def on_invalid_email():
          cont_email.config(fg="red")

        valid_cmnd = (labelframe2.register(validate_email), '%P')
        invalid_cmnd = (labelframe2.register(on_invalid_email),)
        cont_email.config(validate='focusout',validatecommand=valid_cmnd,invalidcommand=invalid_cmnd)
        cont_email.place(x=110,y=35,width=210)
        

        ct = StringVar()
        ctel = Label(labelframe4, text="Tel. No:",bg="#f5f3f2").place(x=10,y=60)
        cont_tel = Entry(labelframe4,textvariable=ct)

        def validate_tel(value):
              
          """
          Validat the email entry
          :param value:
          :return:
          """
          pattern = r'^[0-9]\d{9,10}$'
          if re.fullmatch(pattern, value) is None:
            return False
          cont_tel.config(fg="black")
          return True

        def on_invalid_tel():
          cont_tel.config(fg="red")
              
        valid_tel_cmnd = (labelframe2.register(validate_tel), '%P')
        invalid_tel_cmnd = (labelframe2.register(on_invalid_tel),)
        
        
        cont_tel.config(validate='focusout', validatecommand=valid_tel_cmnd, invalidcommand=invalid_tel_cmnd)
        cont_tel.place(x=110,y=60,width=90)

        cf = StringVar()
        cfax = Label(labelframe4, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
        cont_fax = Entry(labelframe4,textvariable=cf)

        def validate_fax(value):
          """
          Validate the email entry
          :param value:
          :return:
          """
          pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
          if re.fullmatch(pattern,value) is None:
            return False
          cont_fax.config(fg="black")
          return True

        def on_invalid_fax():
          cont_fax.config(fg="red")

        valid_fax_cmnd = (labelframe2.register(validate_fax),'%P')
        invalid_fax_cmnd = (labelframe2.register(on_invalid_fax),)
        cont_fax.config(validate='focusout',validatecommand=valid_fax_cmnd,invalidcommand=invalid_fax_cmnd)
        cont_fax.place(x=230,y=60,width=90)


        cs = StringVar()
        csms = Label(labelframe4, text="Mobile number for SMS notifications:",bg="#f5f3f2").place(x=10,y=85)
        cont_mob = Entry(labelframe4,textvariable=cs)

        def validate_sms(value):
          
          """
          Validat the email entry
          :param value:
          :return:
          """
          pattern = r'^[0-9]\d{9}$'
          if re.fullmatch(pattern, value) is None:
            return False
          cont_mob.config(fg="black")
          return True

        def on_invalid_sms():
          cont_mob.config(fg="red")
          
        valid_sms_cmnd = (labelframe2.register(validate_sms), '%P')
        invalid_sms_cmnd = (labelframe2.register(on_invalid_sms),)
        cont_mob.config(validate='focusout', validatecommand=valid_sms_cmnd, invalidcommand=invalid_sms_cmnd)
        cont_mob.place(x=215,y=85,width=105)      

        btn_mover2 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_contper_details)
        btn_mover2.place(x=359, y=220,height=20)

        
        labelframe5 = LabelFrame(labelframe1,text="Ship to contact",bg="#f5f3f2")
        labelframe5.place(x=400,y=170,width=340,height=108)

        scn = StringVar()
        scname = Label(labelframe5, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
        shipcont_person = Entry(labelframe5,textvariable=scn)
        shipcont_person.place(x=110,y=10,width=210)

        scem = StringVar()
        scemail = Label(labelframe5, text="E-mail address:",bg="#f5f3f2").place(x=10,y=35)
        shipcont_email = Entry(labelframe5,textvariable=scem)
        def validate_shipemail(value):
          
          """
          Validat the email entry
          :param value:
          :return:
          """
          pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
          if re.fullmatch(pattern, value) is None:
            return False
          shipcont_email.config(fg="black")
          return True

        def on_invalid_shipemail():
          shipcont_email.config(fg="red")
              
        valid_shipemail_cmnd = (labelframe2.register(validate_shipemail), '%P')
        invalid_shipemail_cmnd = (labelframe2.register(on_invalid_shipemail),)
        shipcont_email.config(validate='focusout', validatecommand=valid_shipemail_cmnd, invalidcommand=invalid_shipemail_cmnd)
        shipcont_email.place(x=110,y=35,width=210)

        sct = StringVar()
        sctel = Label(labelframe5, text="Tel.number:",bg="#f5f3f2").place(x=10,y=60)
        shipcont_tel = Entry(labelframe5,textvariable=sct)
        def validate_shiptel(value):
          
          """
          Validat the email entry
          :param value:
          :return:
          """
          pattern = r'^[0-9]\d{9,10}$'
          if re.fullmatch(pattern, value) is None:
            return False
          shipcont_tel.config(fg="black")
          return True

        def on_invalid_shiptel():
          shipcont_tel.config(fg="red")
              
        valid_shiptel_cmnd = (labelframe2.register(validate_shiptel), '%P')
        invalid_shiptel_cmnd = (labelframe2.register(on_invalid_shiptel),)
        shipcont_tel.config(validate='focusout', validatecommand=valid_shiptel_cmnd, invalidcommand=invalid_shiptel_cmnd)
        shipcont_tel.place(x=110,y=60,width=90)

        scf = StringVar()
        scfax = Label(labelframe5, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
        shipcont_fax = Entry(labelframe5,textvariable=scf)
        def validate_shipfax(value):
          
          """
          Validat the email entry
          :param value:
          :return:
          """
          pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
          if re.fullmatch(pattern, value) is None:
            return False
          shipcont_fax.config(fg="black")
          return True

        def on_invalid_shipfax():
          shipcont_fax.config(fg="red")
              
        valid_shipfax_cmnd = (labelframe2.register(validate_shipfax), '%P')
        invalid_shipfax_cmnd = (labelframe2.register(on_invalid_shipfax),)
        shipcont_fax.config(validate='focusout', validatecommand=valid_shipfax_cmnd, invalidcommand=invalid_shipfax_cmnd)
        shipcont_fax.place(x=230,y=60,width=90)

        labelframe6 = LabelFrame(labelframe1,text="Payment Option",bg="#f5f3f2")
        labelframe6.place(x=10,y=317,width=340,height=80)

        check_taxexempt = StringVar()
        checkbtn_taxexempt = Checkbutton(labelframe6,text="Tax Exempt",variable=check_taxexempt,onvalue=1,offvalue=0,bg="#f5f3f2",font=("arial", 8))
        checkbtn_taxexempt.place(x=10 ,y=6)
        checkbtn_taxexempt.select()

        spfc_tax1 = IntVar() 
        tax_sql = "SELECT taxtype FROM company"
        fbcursor.execute(tax_sql,)
        tax_data = fbcursor.fetchone()
        def tax_t(S,d):
          if d == '1':
            if not S in ['.','0','1','2','3','4','5','6','7','8','9']:
              return False
            return True
            
          if d.isdigit():
            return True
        valid_spfctax1 = (labelframe6.register(tax_t), '%S','%d')
        specf_tax1_entry = Entry(labelframe6, textvariable=spfc_tax1)
        specf_tax2_entry = Entry(labelframe6,width=10)
        if tax_data[0] == '3':
          specf_tax1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=150,y=7)
          specf_tax1_entry = Entry(labelframe6)
          specf_tax1_entry.config(validate='key',validatecommand=valid_spfctax1)
          specf_tax1_entry.place(x=250,y=7,width=70)
          specf_tax2 = Label(labelframe6,text="Specific Tax2%::").place(x=150,y=30)
          specf_tax2_entry.config(validate='key',validatecommand=valid_spfctax1)
          specf_tax2_entry.place(x=250,y=30,width=70)
        elif tax_data[0] == '2':
          specf_tax1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=180,y=5)
          specf_tax1_entry.config(validate='key',validatecommand=valid_spfctax1)
          specf_tax1_entry.place(x=250,y=7,width=70)
        elif tax_data[0] == '1':
          pass

        discVar = IntVar()
        discount = Label(labelframe6, text="Discount%:",bg="#f5f3f2").place(x=10,y=30)
        discount_entry = Entry(labelframe6)
        discount_entry.config(validate='key',validatecommand=(valid_spfctax1))
        discount_entry.place(x=80,y=30,width=70)

        labelframe7 = LabelFrame(labelframe1,text="Additional Info",bg="#f5f3f2")
        labelframe7.place(x=400,y=288,width=340,height=80)

        countryVar = StringVar()
        country = Label(labelframe7, text="country:",bg="#f5f3f2").place(x=10,y=5)
        addi_country = ttk.Combobox(labelframe7,textvariable=countryVar)
        addi_country.place(x=110,y=5,width=210)
        addi_country['values'] = ('India','America')

        cityVar = StringVar()
        city = Label(labelframe7, text="City:",bg="#f5f3f2").place(x=10,y=30)
        addi_city = Entry(labelframe7,textvariable=cityVar)
        addi_city.place(x=110,y=30,width=210)

        labelframe8 = LabelFrame(labelframe1,text="Customer Type",bg="#f5f3f2")
        labelframe8.place(x=10,y=405,width=340,height=90)
        custypeVar = StringVar()
        client_radio = Radiobutton(labelframe8,text=" Client ",variable=custypeVar,value="Client",bg="#f5f3f2")
        client_radio.select()
        client_radio.place(x=5,y=15)
        vendor_radio = Radiobutton(labelframe8,text=" Vendor ",variable=custypeVar,value="Vendor",bg="#f5f3f2")
        vendor_radio.place(x=90,y=15)
        both_radio = Radiobutton(labelframe8,text=" Both(client/vendor)",variable=custypeVar,value="Both(client/vendor)",bg="#f5f3f2")
        both_radio.place(x=180,y=15)
        

        labelframe9 = LabelFrame(labelframe1,text="Notes",bg="#f5f3f2")
        labelframe9.place(x=400,y=380,width=340,height=115)

        scroll_notes = scrolledtext.ScrolledText(labelframe9)
        scroll_notes.place(x=20,y=10,height=70,width=295)

        add_customer_btnok = Button(vendor,width=50,bg="#f5f3f2",compound = LEFT,image=tick ,text="OK",command=add_customer)
        add_customer_btnok.place(x=20, y=545)
        add_customer_btncancel = Button(vendor,width=80,bg="#f5f3f2",compound = LEFT,image=cancel,text="Cancel",command=cancel_add_customer)
        add_customer_btncancel.place(x=665, y=545)


      #edi customer
      def inv_edit_customer():
        try:
          selected_custid = select_cust_tree.item(select_cust_tree.focus())["values"][0]
          sel_cust_sql = "SELECT * FROM customer WHERE customerno=%s"
          sel_cust_val = (selected_custid,)
          fbcursor.execute(sel_cust_sql,sel_cust_val)
          sel_cust_data = fbcursor.fetchone()
          def cancel_edit_customer():
            edit_vendor.destroy()
          def edit_customer():
            customerno = cust_id1.get()
            businessname = 	bn1.get()
            businessaddress = bus_address1.get('1.0',END)
            contactperson = cn1.get()
            cpemail = cem1.get()
            cptelno = ct1.get()
            cpfax = cf1.get()
            cpmobileforsms = cs1.get()
            taxexempt = check_taxexempt1.get()
            specifictax1 = specf_tax1_entry1.get()
            specifictax2 = specf_tax2_entry1.get()
            discount = discount_entry1.get()
            customertype = custypeVar1.get()

            category = cust_cate1.get()
            status = check_active1.get()
            shipname = sn1.get()
            shipaddress = ship_address1.get('1.0',END)
            shipcontactperson = scn1.get()
            shipcpemail = scem1.get()
            shipcptelno = sct1.get()
            shipcpfax = scf1.get()
            country = countryVar1.get()
            city = cityVar1.get()
            notes = scroll_notes1.get("1.0", END)
            custno_sql = "SELECT * FROM customer WHERE customerno=%s"
            custno_val = (customerno,)
            fbcursor.execute(custno_sql,custno_val)
            custno_data = fbcursor.fetchone()

            cust_add_sql = "UPDATE customer SET customerno=%s,category=%s,status=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,contactperson=%s,cpemail=%s,cptelno=%s,cpfax=%s,cpmobileforsms=%s,shipcontactperson=%s,shipcpemail=%s,shipcptelno=%s,shipcpfax=%s,taxexempt=%s,specifictax1=%s,discount=%s,country=%s,city=%s,customertype=%s,notes=%s,specifictax2=%s WHERE customerno=%s" #adding values into db
            cust_add_val = (customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2,customerno)
            fbcursor.execute(cust_add_sql,cust_add_val)
            fbilldb.commit()
            for record in select_cust_tree.get_children():
              select_cust_tree.delete(record)
            all_cust_sql = "SELECT * FROM customer"
            fbcursor.execute(all_cust_sql)
            all_cust_data = fbcursor.fetchall()

            count_cus=0
            for i in all_cust_data:
              select_cust_tree.insert(parent='', index='end', iid=count_cus, text='', values=(i[24],i[4],i[10],i[8]))
              count_cus +=1
            
            edit_vendor.destroy()
          
          def copy_bus_details1():
            ship_name1.delete(0,END)
            ship_name1.insert(0,bus_name1.get())
            ship_address1.delete('1.0',END)
            ship_address1.insert('1.0',bus_address1.get('1.0',END))
          def copy_contper_details1():
            shipcont_person1.delete(0,END)
            shipcont_person1.insert(0,cont_person1.get())
            shipcont_email1.delete(0,END)
            shipcont_email1.insert(0,cont_email1.get())
            shipcont_tel1.delete(0,END)
            shipcont_tel1.insert(0,cont_tel1.get())
            shipcont_fax1.delete(0,END)
            shipcont_fax1.insert(0,cont_fax1.get())
              



          edit_vendor=Toplevel(inv_midFrame)
          edit_vendor.title("Edit Vendor")
          p2 = PhotoImage(file = "images/fbicon.png")
          edit_vendor.iconphoto(False, p2)
          edit_vendor.geometry("775x580+300+100")

          labelframe1 = LabelFrame(edit_vendor,text="Customer",bg="#f5f3f2",font=("arial",15))
          labelframe1.place(x=10,y=10,width=755,height=530)

          custVar1 = IntVar()
          customer_id1=Label(labelframe1, text="Customer ID:",bg="#f5f3f2",fg="blue").place(x=10 ,y=7)
          cust_id1=Entry(labelframe1)
          cust_id1.delete(0,END)
          cust_id1.insert(0,sel_cust_data[24])
          cust_id1.config(state=DISABLED)
          cust_id1.place(x=120,y=7,width=200)

          cust_cate1 = StringVar()
          category1=Label(labelframe1, text="Category:",bg="#f5f3f2").place(x=330 ,y=7)
          cust_category1= ttk.Combobox(labelframe1,textvariable=cust_cate1,width=35)
          category_sql = 'SELECT DISTINCT category FROM customer'
          fbcursor.execute(category_sql,)
          category_data = fbcursor.fetchall()
          if len(category_data) == 0:
            cust_category1['values'] = 'Default'
          else:
            cust_category1['values'] = category_data
            cust_category1.current(0)
          cust_category1.delete(0,END)
          cust_category1.insert(0,sel_cust_data[2])
          cust_category1.place(x=390 ,y=7,width=220)

          check_active1 = IntVar()
          status1=Label(labelframe1, text="Status:").place(x=620 ,y=7)
          cust_status1 = Checkbutton(labelframe1,text="Active",variable=check_active1,onvalue=1,offvalue=0,bg="#f5f3f2")
          if sel_cust_data[3] == "0":
            cust_status1.deselect()
          else:
            cust_status1.select()
          cust_status1.place(x=670 ,y=6)
          
          labelframe2 = LabelFrame(labelframe1,text="Invoice to (appears on invoices)",bg="#f5f3f2")
          labelframe2.place(x=10,y=35,width=340,height=125)

          bn1 = StringVar()
          bname1 = Label(labelframe2, text="Business name:",bg="#f5f3f2",fg="blue").place(x=10,y=10)
          bus_name1 = Entry(labelframe2,textvariable=bn1)
          bus_name1.delete(0,END)
          bus_name1.insert(0,sel_cust_data[4])
          bus_name1.place(x=110,y=10,width=210)

          badd1 = StringVar()
          baddress1 = Label(labelframe2, text="Address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
          bus_address1 = scrolledtext.ScrolledText(labelframe2,)
          bus_address1.delete("1.0",END)
          bus_address1.insert("1.0",sel_cust_data[5])
          bus_address1.place(x=110,y=35,width=210,height=63)
          
          btn_mover11 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_bus_details1)
          btn_mover11.place(x=359, y=85,height=20)

          labelframe3 = LabelFrame(labelframe1,text="Ship to (appears on invoices)",bg="#f5f3f2")
          labelframe3.place(x=400,y=35,width=340,height=125)

          sn1 = StringVar()
          sname1 = Label(labelframe3, text="Ship to name:",bg="#f5f3f2").place(x=10,y=10)
          ship_name1 = Entry(labelframe3,width=28,textvariable=sn1)
          ship_name1.delete(0,END)
          ship_name1.insert(0,sel_cust_data[6])
          ship_name1.place(x=110,y=10,width=210)
          sadd1 = StringVar()
          saddress1 = Label(labelframe3, text="Address:",bg="#f5f3f2").place(x=10,y=35)
          ship_address1 = scrolledtext.ScrolledText(labelframe3)
          ship_address1.delete('1.0',END)
          ship_address1.insert('1.0',sel_cust_data[7])
          ship_address1.place(x=110,y=35,width=210,height=63)
          
          labelframe4 = LabelFrame(labelframe1,text="Contact",bg="#f5f3f2")
          labelframe4.place(x=10,y=170,width=340,height=137)

          cn1 = StringVar()
          cname1 = Label(labelframe4, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
          cont_person1 = Entry(labelframe4,textvariable=cn1)
          cont_person1.delete(0,END)
          cont_person1.insert(0,sel_cust_data[8])
          cont_person1.place(x=110,y=10,width=210)

          cem1 = StringVar()
          cemail1 = Label(labelframe4, text="E-mail address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
          cont_email1 = Entry(labelframe4,textvariable=cem1)
          cont_email1.delete(0,END)
          cont_email1.insert(0,sel_cust_data[9])

          def validate_email1(value):
            
            """
            Validate the email entry
            :param value
            :return:
            """

            pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_email1.config(fg="black")
            return True

          def on_invalid_email1():
            cont_email1.config(fg="red")

          valid_cmnd1 = (labelframe2.register(validate_email1), '%P')
          invalid_cmnd1 = (labelframe2.register(on_invalid_email1),)
          cont_email1.config(validate='focusout',validatecommand=valid_cmnd1,invalidcommand=invalid_cmnd1)
          cont_email1.place(x=110,y=35,width=210)
          

          ct1 = StringVar()
          ctel1 = Label(labelframe4, text="Tel. No:",bg="#f5f3f2").place(x=10,y=60)
          cont_tel1 = Entry(labelframe4,textvariable=ct1)
          cont_tel1.delete(0,END)
          cont_tel1.insert(0,sel_cust_data[10])

          def validate_tel1(value):
                
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9,10}$'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_tel1.config(fg="black")
            return True

          def on_invalid_tel1():
            cont_tel1.config(fg="red")
                
          valid_tel_cmnd1 = (labelframe2.register(validate_tel1), '%P')
          invalid_tel_cmnd1 = (labelframe2.register(on_invalid_tel1),)
          
          
          cont_tel1.config(validate='focusout', validatecommand=valid_tel_cmnd1, invalidcommand=invalid_tel_cmnd1)
          cont_tel1.place(x=110,y=60,width=90)

          cf1 = StringVar()
          cfax1 = Label(labelframe4, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
          cont_fax1 = Entry(labelframe4,textvariable=cf1)
          cont_fax1.delete(0,END)
          cont_fax1.insert(0,sel_cust_data[11])

          def validate_fax1(value):
            """
            Validate the email entry
            :param value:
            :return:
            """
            pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
            if re.fullmatch(pattern,value) is None:
              return False
            cont_fax1.config(fg="black")
            return True

          def on_invalid_fax1():
            cont_fax1.config(fg="red")

          valid_fax_cmnd1 = (labelframe2.register(validate_fax1),'%P')
          invalid_fax_cmnd1 = (labelframe2.register(on_invalid_fax1),)
          cont_fax1.config(validate='focusout',validatecommand=valid_fax_cmnd1,invalidcommand=invalid_fax_cmnd1)
          cont_fax1.place(x=230,y=60,width=90)


          cs1 = StringVar()
          csms1 = Label(labelframe4, text="Mobile number for SMS notifications:",bg="#f5f3f2").place(x=10,y=85)
          cont_mob1 = Entry(labelframe4,textvariable=cs1)
          cont_mob1.delete(0,END)
          cont_mob1.insert(0,sel_cust_data[12])

          def validate_sms1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9}$'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_mob1.config(fg="black")
            return True

          def on_invalid_sms1():
            cont_mob1.config(fg="red")
            
          valid_sms_cmnd1 = (labelframe2.register(validate_sms1), '%P')
          invalid_sms_cmnd1 = (labelframe2.register(on_invalid_sms1),)
          cont_mob1.config(validate='focusout', validatecommand=valid_sms_cmnd1, invalidcommand=invalid_sms_cmnd1)
          cont_mob1.place(x=215,y=85,width=105)      

          btn_mover21 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_contper_details1)
          btn_mover21.place(x=359, y=220,height=20)

          
          labelframe5 = LabelFrame(labelframe1,text="Ship to contact",bg="#f5f3f2")
          labelframe5.place(x=400,y=170,width=340,height=108)

          scn1 = StringVar()
          scname1 = Label(labelframe5, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
          shipcont_person1 = Entry(labelframe5,textvariable=scn1)
          shipcont_person1.delete(0,END)
          shipcont_person1.insert(0,sel_cust_data[13])
          shipcont_person1.place(x=110,y=10,width=210)

          scem1 = StringVar()
          scemail1 = Label(labelframe5, text="E-mail address:",bg="#f5f3f2").place(x=10,y=35)
          shipcont_email1 = Entry(labelframe5,textvariable=scem1)
          shipcont_email1.delete(0,END)
          shipcont_email1.insert(0,sel_cust_data[14])
          def validate_shipemail1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_email1.config(fg="black")
            return True

          def on_invalid_shipemail1():
            shipcont_email1.config(fg="red")
                
          valid_shipemail_cmnd1 = (labelframe2.register(validate_shipemail1), '%P')
          invalid_shipemail_cmnd1 = (labelframe2.register(on_invalid_shipemail1),)
          shipcont_email1.config(validate='focusout', validatecommand=valid_shipemail_cmnd1, invalidcommand=invalid_shipemail_cmnd1)
          shipcont_email1.place(x=110,y=35,width=210)

          sct1 = StringVar()
          sctel1 = Label(labelframe5, text="Tel.number:",bg="#f5f3f2").place(x=10,y=60)
          shipcont_tel1 = Entry(labelframe5,textvariable=sct1)
          shipcont_tel1.delete(0,END)
          shipcont_tel1.insert(0,sel_cust_data[15])
          def validate_shiptel1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9,10}$'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_tel1.config(fg="black")
            return True

          def on_invalid_shiptel1():
            shipcont_tel1.config(fg="red")
                
          valid_shiptel_cmnd1 = (labelframe2.register(validate_shiptel1), '%P')
          invalid_shiptel_cmnd1 = (labelframe2.register(on_invalid_shiptel1),)
          shipcont_tel1.config(validate='focusout', validatecommand=valid_shiptel_cmnd1, invalidcommand=invalid_shiptel_cmnd1)
          shipcont_tel1.place(x=110,y=60,width=90)

          scf1 = StringVar()
          scfax1 = Label(labelframe5, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
          shipcont_fax1 = Entry(labelframe5,textvariable=scf1)
          shipcont_fax1.delete(0,END)
          shipcont_fax1.insert(0,sel_cust_data[16])
          def validate_shipfax1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_fax1.config(fg="black")
            return True

          def on_invalid_shipfax1():
            shipcont_fax1.config(fg="red")
                
          valid_shipfax_cmnd1 = (labelframe2.register(validate_shipfax1), '%P')
          invalid_shipfax_cmnd1 = (labelframe2.register(on_invalid_shipfax1),)
          shipcont_fax1.config(validate='focusout', validatecommand=valid_shipfax_cmnd1, invalidcommand=invalid_shipfax_cmnd1)
          shipcont_fax1.place(x=230,y=60,width=90)

          labelframe6 = LabelFrame(labelframe1,text="Payment Option",bg="#f5f3f2")
          labelframe6.place(x=10,y=317,width=340,height=80)

          check_taxexempt1 = StringVar()
          checkbtn_taxexempt1 = Checkbutton(labelframe6,text="Tax Exempt",variable=check_taxexempt1,onvalue=1,offvalue=0,bg="#f5f3f2",font=("arial", 8))
          checkbtn_taxexempt1.place(x=10 ,y=6)
          if sel_cust_data[17] == "0":
            checkbtn_taxexempt1.deselect()
          else:
            checkbtn_taxexempt1.select()

          spfc_tax11 = IntVar() 
          tax_sql = "SELECT taxtype FROM company"
          fbcursor.execute(tax_sql,)
          tax_data = fbcursor.fetchone()
          def tax_t1(S,d):
            if d == '1':
              if not S in ['.','0','1','2','3','4','5','6','7','8','9']:
                return False
              return True
              
            if d.isdigit():
              return True
          valid_spfctax11 = (labelframe6.register(tax_t1), '%S','%d')
          specf_tax1_entry1 = Entry(labelframe6, textvariable=spfc_tax11)
          specf_tax2_entry1 = Entry(labelframe6,width=10)
          if tax_data[0] == '3':
            specf_tax11 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=150,y=7)
            specf_tax1_entry1 = Entry(labelframe6)
            specf_tax1_entry1.delete(0,END)
            specf_tax1_entry1.insert(0,sel_cust_data[18])
            specf_tax1_entry1.config(validate='key',validatecommand=valid_spfctax11)
            specf_tax1_entry1.place(x=250,y=7,width=70)
            specf_tax21 = Label(labelframe6,text="Specific Tax2%::").place(x=150,y=30)
            specf_tax2_entry1.delete(0,END)
            specf_tax2_entry1.insert(0,sel_cust_data[25])
            specf_tax2_entry1.config(validate='key',validatecommand=valid_spfctax11)
            specf_tax2_entry1.place(x=250,y=30,width=70)
          elif tax_data[0] == '2':
            specf_tax11 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=180,y=5)
            specf_tax1_entry1.delete(0,END)
            specf_tax1_entry1.insert(0,sel_cust_data[18])
            specf_tax1_entry1.config(validate='key',validatecommand=valid_spfctax11)
            specf_tax1_entry1.place(x=250,y=7,width=70)
          elif tax_data[0] == '1':
            pass

          discVar1 = IntVar()
          discount1 = Label(labelframe6, text="Discount%:",bg="#f5f3f2").place(x=10,y=30)
          discount_entry1 = Entry(labelframe6)
          discount_entry1.delete(0,END)
          discount_entry1.insert(0,sel_cust_data[19])
          discount_entry1.config(validate='key',validatecommand=(valid_spfctax11))
          discount_entry1.place(x=80,y=30,width=70)

          labelframe7 = LabelFrame(labelframe1,text="Additional Info",bg="#f5f3f2")
          labelframe7.place(x=400,y=288,width=340,height=80)

          countryVar1 = StringVar()
          country1 = Label(labelframe7, text="country:",bg="#f5f3f2").place(x=10,y=5)
          addi_country1 = ttk.Combobox(labelframe7,textvariable=countryVar1)
          addi_country1.place(x=110,y=5,width=210)
          addi_country1['values'] = ('India','America')
          addi_country1.delete(0,END)
          addi_country1.insert(0,sel_cust_data[20])

          cityVar1 = StringVar()
          city1 = Label(labelframe7, text="City:",bg="#f5f3f2").place(x=10,y=30)
          addi_city1 = Entry(labelframe7,textvariable=cityVar1)
          addi_city1.place(x=110,y=30,width=210)
          addi_city1.delete(0,END)
          addi_city1.insert(0,sel_cust_data[21])

          labelframe8 = LabelFrame(labelframe1,text="Customer Type",bg="#f5f3f2")
          labelframe8.place(x=10,y=405,width=340,height=90)
          custypeVar1 = StringVar()
          client_radio1 = Radiobutton(labelframe8,text=" Client ",variable=custypeVar1,value="Client",bg="#f5f3f2")
          client_radio1.place(x=5,y=15)
          vendor_radio1 = Radiobutton(labelframe8,text=" Vendor ",variable=custypeVar1,value="Vendor",bg="#f5f3f2")
          vendor_radio1.place(x=90,y=15)
          both_radio1 = Radiobutton(labelframe8,text=" Both(client/vendor)",variable=custypeVar1,value="Both(client/vendor)",bg="#f5f3f2")
          both_radio1.place(x=180,y=15)
          if sel_cust_data[22] == "Client":
            client_radio1.select()
          elif sel_cust_data[22] == "Vendor":
            vendor_radio1.select()
          else:
            both_radio1.select()
          

          labelframe9 = LabelFrame(labelframe1,text="Notes",bg="#f5f3f2")
          labelframe9.place(x=400,y=380,width=340,height=115)

          scroll_notes1 = scrolledtext.ScrolledText(labelframe9)
          scroll_notes1.delete('1.0',END)
          scroll_notes1.insert('1.0',sel_cust_data[23])
          scroll_notes1.place(x=20,y=10,height=70,width=295)

          edit_customer_btnok = Button(edit_vendor,width=50,bg="#f5f3f2",compound = LEFT,image=tick ,text="OK",command=edit_customer)
          edit_customer_btnok.place(x=20, y=545)
          edit_customer_btncancel = Button(edit_vendor,width=80,bg="#f5f3f2",compound = LEFT,image=cancel,text="Cancel",command=cancel_edit_customer)
          edit_customer_btncancel.place(x=665, y=545)
        except:
          pass
      

      # filter customers

      def filter_customer():
        if cust_filter_entry.get() == '':
          sql = "SELECT * FROM Customer"
          fbcursor.execute(sql,)
          customer_details = fbcursor.fetchall()
          for record in select_cust_tree.get_children():
            select_cust_tree.delete(record)

          count = 0
          for i in customer_details:
            if True:
              select_cust_tree.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
            else:
              pass
          count += 1
        else:
          filter = cust_filter_entry.get()
          for record in select_cust_tree.get_children():
            select_cust_tree.delete(record)

          sql = "SELECT * FROM Customer WHERE businessname=%s"
          val = (filter, )
          fbcursor.execute(sql, val)
          customer_details = fbcursor.fetchall()

      
          count=0
          for i in customer_details:
            if True:
              select_cust_tree.insert(parent='', index='end', iid=i, text='', values=(i[24],i[4],i[10],i[8]))  
            else:
              pass
          count += 1
    

      cust_filter_label=Label(customer_selection, text="Enter filter text").place(x=5, y=10)
      cust_filter_entry=Entry(customer_selection, width=20)
      cust_filter_entry.place(x=110, y=10)
      cust_filter_button=Button(customer_selection, text='Click Here',command=filter_customer)
      cust_filter_button.place(x=240, y=9,height=20,width=60)


      cust_fil_cat_tree=ttk.Treeview(customer_selection, height=27)
      cust_fil_cat_tree["columns"]=["1"]
      cust_fil_cat_tree.column("#0", width=25, minwidth=20)
      cust_fil_cat_tree.column("1", width=217, minwidth=25, anchor=CENTER)    
      cust_fil_cat_tree.heading("#0",text="", anchor=W)
      cust_fil_cat_tree.heading("1",text="View filter by category", anchor=CENTER)
      cust_fil_cat_tree.place(x=660, y=45)

      #filter customer
      def list_filter_customer(event):
        selected_cust_indices = cust_fil_cat_list.curselection()
        selected_cust_filter = ",".join([cust_fil_cat_list.get(i) for i in selected_cust_indices])

        if selected_cust_filter == "               View all records" or selected_cust_filter == "               View only Client/Vendor" or selected_cust_filter == "               Default":
          cust_all_sql = "SELECT * FROM Customer"
          fbcursor.execute(cust_all_sql)
          cust_all_data = fbcursor.fetchall()
          for record in select_cust_tree.get_children():
            select_cust_tree.delete(record)
          count_all = 0
          for i in cust_all_data:
            select_cust_tree.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
          count_all += 1
        elif selected_cust_filter == "               View only Client type":
          client_sql = "SELECT * FROM Customer WHERE customertype=%s"
          client_val = ('Client',)
          fbcursor.execute(client_sql,client_val)
          client_data = fbcursor.fetchall()
          for record in select_cust_tree.get_children():
            select_cust_tree.delete(record)
          count_c = 0
          for i in client_data:
            select_cust_tree.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
          count_c += 1
        else:
          vendor_sql = "SELECT * FROM Customer WHERE customertype=%s"
          vendor_val = ('Vendor',)
          fbcursor.execute(vendor_sql,vendor_val)
          vendor_data = fbcursor.fetchall()
          for record in select_cust_tree.get_children():
            select_cust_tree.delete(record)
          count_v = 0
          for i in vendor_data:
            select_cust_tree.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
          count_v += 1

      cust_fil_cat_list = Listbox(customer_selection,height=34,width=40,bg="white",activestyle="dotbox",fg="black",highlightbackground="white")
      cust_fil_cat_list.insert(0,"               View all records")
      cust_fil_cat_list.insert(1,"               View only Client/Vendor")
      cust_fil_cat_list.insert(2,"               View only Client type")
      cust_fil_cat_list.insert(3,"               View only Vendor type")
      cust_fil_cat_list.insert(4,"               Default")
      cust_fil_cat_list.place(x=660,y=63)
      cust_fil_cat_list.bind('<<ListboxSelect>>',list_filter_customer)



      scrollbar = Scrollbar(customer_selection)
      scrollbar.place(x=640, y=45, height=560)
      scrollbar.config( command=select_cust_tree.yview )

      cust_ok_btn=Button(customer_selection,compound = LEFT,image=tick ,text="ok", width=60,command=cust_tree_fetch)
      cust_ok_btn.place(x=15, y=610)
      edit_custbtn=Button(customer_selection,compound = LEFT,image=tick,text="Edit selected customer", width=150,command=inv_edit_customer)
      edit_custbtn.place(x=250, y=610)
      add_custbtn=Button(customer_selection,compound = LEFT,image=tick, text="Add new customer", width=150,command=inv_create_newcustomer)
      add_custbtn.place(x=435, y=610)
      cust_cancel_btn=Button(customer_selection,compound = LEFT,image=cancel ,text="Cancel", width=60,command=lambda:customer_selection.destroy())
      cust_cancel_btn.place(x=740, y=610)   



      

    #add new line item
    def inv_newline():
      #fetch new line item
      def product_tree_fetch():
        global sel_pro_str
        product_tree_item = product_sel_tree.item(product_sel_tree.focus())["values"][0]
        sql = "SELECT * FROM Productservice WHERE sku=%s"
        val = (product_tree_item,)
        fbcursor.execute(sql,val)
        sel_pro_str = fbcursor.fetchone()
        comp_sql = "SELECT * FROM company"
        fbcursor.execute(comp_sql,)
        comp_data = fbcursor.fetchone()
        if comp_data[12] == "1":
          add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],sel_pro_str[7]))
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          for i in add_newline_tree.get_children():
            price += float(add_newline_tree.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1.config(text=sub_tot)
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4])
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
          totalprice_view.config(text=round(price,2))
        elif comp_data[12] == "2":
          if sel_pro_str[10] == "1":
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes',sel_pro_str[7]))
          else:
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No',sel_pro_str[7]))
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          tx1 = float(tax1_entry.get())
          for i in add_newline_tree.get_children():
            if add_newline_tree.item(i,'values')[6] == "No":
              p += float(add_newline_tree.item(i,'values')[3])
            else:
              price += float(add_newline_tree.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc 
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1.config(text=sub_tot)
          tax_1.config(text=round(tax1_rate,2))
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4])
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
          totalprice_view.config(text=round((price + p),2))
        elif comp_data[12] == "3":
          if sel_pro_str[10] == "1" and sel_pro_str[19] == "1":
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes','Yes',sel_pro_str[7]))
          elif sel_pro_str[10] == "1" and sel_pro_str[19] == "0":
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes','No',sel_pro_str[7]))
          elif sel_pro_str[10] == "0" and sel_pro_str[19] == "1":
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No','Yes',sel_pro_str[7]))
          else:
            add_newline_tree.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No','No',sel_pro_str[7]))
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry.get())
          tx2 = float(tax2_entry.get())
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          for i in add_newline_tree.get_children():
            if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree.item(i,'values')[3])
            elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree.item(i,'values')[3])
            elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree.item(i,'values')[3])
            else:
              price += float(add_newline_tree.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1.config(text=sub_tot)
          tax_1.config(text=round((tax1_rate + tax2_rate),2))
          tax_2.config(text=round((tax3_rate + tax4_rate),2))
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4])
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
          totalprice_view.config(text=round((price + p1 + p2 + p3),2))
        inv_newline_sel.destroy()
      show_newline = inv_combo_e1.get()
      if show_newline == '':
        messagebox.showinfo('F-Billing Revolution','Customer is required, please select customer before adding line item to invoice')
      else:
        inv_newline_sel=Toplevel()
        inv_newline_sel.title("Product/Services")
        inv_newline_sel.geometry("930x650+240+10")
        inv_newline_sel.resizable(False, False)

        global product_sel_tree

        product_sel_tree=ttk.Treeview(inv_newline_sel, height=27)
        product_sel_tree["columns"]=["1","2","3", "4","5"]
        product_sel_tree.column("#0", width=35)
        product_sel_tree.column("1", width=160)
        product_sel_tree.column("2", width=160)
        product_sel_tree.column("3", width=140)
        product_sel_tree.column("4", width=70)
        product_sel_tree.column("5", width=70)
        product_sel_tree.heading("#0",text="")
        product_sel_tree.heading("1",text="ID/SKU")
        product_sel_tree.heading("2",text="Product/Service Name")
        product_sel_tree.heading("3",text="Unit price")
        product_sel_tree.heading("4",text="Service")
        product_sel_tree.heading("5",text="Stock")
        product_sel_tree.tag_configure('green', foreground='green')
        product_sel_tree.tag_configure('red', foreground='red')
        product_sel_tree.tag_configure('blue', foreground='blue')
        product_sel_tree.place(x=5, y=45)
        
        countp = 0
        sql = 'SELECT * FROM Productservice'
        fbcursor.execute(sql)
        product_details = fbcursor.fetchall()
        for p in product_details:
          if p[12] == '1':
            serv_or_not = '🗹'
          else:
            serv_or_not = ''
          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          if not currency_symb: 
            if p[13] > p[14]:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
              countp += 1              
            elif p[12] == '1':
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
              countp += 1
            else:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
              countp += 1
                  
          elif currency_symb[1] == "before amount":
            if p[13] > p[14]:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
              countp += 1
            elif p[12] == '1':
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
              countp += 1
            else:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
              countp += 1

          elif currency_symb[1] == "before amount with space":
            if p[13] > p[14]:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
              countp += 1
            elif p[12] == '1':
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
              countp += 1
            else:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
              countp += 1

          elif currency_symb[1] == "after amount":
            if p[13] > p[14]:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
              countp += 1
            elif p[12] == '1':
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
              countp += 1
            else:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
              countp += 1

          elif currency_symb[1] == "after amount with space":
            if p[13] > p[14]:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
              countp += 1
            elif p[12] == '1':
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
              countp += 1
            else:
              product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
              countp += 1
      
      #filter product

        def filter_product():
          if product_filter_entry.get() == '':
            for record in product_sel_tree.get_children():
              product_sel_tree.delete(record)

            countp = 0
            sql = 'SELECT * FROM Productservice'
            fbcursor.execute(sql)
            product_details = fbcursor.fetchall()
            for p in product_details:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

          else:
            filter = product_filter_entry.get()
            for record in product_sel_tree.get_children():
              product_sel_tree.delete(record)
      
            countp = 0
            sql = "SELECT * FROM Productservice WHERE name=%s"
            val = (filter, )
            fbcursor.execute(sql, val)
            product_details = fbcursor.fetchall()
            for p in product_details:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree.insert(parent='', index='end', iid=countp, text='hello', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1



        product_filter_label=Label(inv_newline_sel, text="Enter filter text").place(x=5, y=10)
        product_filter_entry=Entry(inv_newline_sel, width=20)
        product_filter_entry.place(x=110, y=10)
        product_filter_button=Button(inv_newline_sel, text='Click Here',command=filter_product)
        product_filter_button.place(x=240, y=9,height=20,width=60)

        


      #add new product
      def new_product():  
        top = Toplevel()  
        top.title("Add a new Product/Service")
        p2 = PhotoImage(file = 'images/fbicon.png')
        top.iconphoto(False, p2)
        top.geometry("600x550+350+15")
        tabControl = ttk.Notebook(top)
        s = ttk.Style()
        s.theme_use('default')
        s.configure('TNotebook.Tab', background="#999999",padding=10,bd=0)
            

        tab1 = ttk.Frame(tabControl)
        tab2 = ttk.Frame(tabControl)
      
        tabControl.add(tab1,compound = LEFT, text ='Product/Service')
        tabControl.add(tab2,compound = LEFT, text ='Product Image')
      
        tabControl.pack(expand = 1, fill ="both")
      
        innerFrame = Frame(tab1,bg="#f5f3f2", relief=GROOVE)
        innerFrame.pack(side="top",fill=BOTH)

        Customerlabelframe = LabelFrame(innerFrame,text="Product/Service",width=580,height=455)
        Customerlabelframe.pack(side="top",fill=BOTH,padx=10,pady=(10,45))

        def service_check():
          if check_service.get() == 1:
            add_pro_price_entry['state'] = DISABLED
            add_pro_stock_entry['state'] = DISABLED
            add_pro_low_entry['state'] = DISABLED
            add_pro_ware_entry['state'] = DISABLED
          else:
            add_pro_price_entry['state'] = NORMAL
            add_pro_stock_entry['state'] = NORMAL
            add_pro_low_entry['state'] = NORMAL
            add_pro_ware_entry['state'] = NORMAL

        def calc_pricecost(event):
          if add_pro_unit_entry.get() == "":
            up = 0
          else:
            up = add_pro_unit_entry.get()
          if add_pro_cost_entry.get() == "":
            cst = 0 
          else:
            cst = add_pro_cost_entry.get()
          price_cost = float(up) - float(cst)
          add_pro_price_entry.config(text=price_cost)

        add_pro_code_label=Label(Customerlabelframe,text="Code or SKU:",fg="blue",pady=10,padx=10)
        add_pro_code_label.place(x=20,y=0)
        add_pro_code_entry = Entry(Customerlabelframe,width=35)
        add_pro_code_entry.place(x=120,y=8)

        checkvarStatus=IntVar()
        add_pro_status=Label(Customerlabelframe,text="Status:")
        add_pro_status.place(x=400,y=8)
        add_pro_checkbtn_active = Checkbutton(Customerlabelframe,
                          variable = checkvarStatus,text="Active",compound="right",
                          onvalue =1 ,
                          offvalue = 0,)

        add_pro_checkbtn_active.place(x=450,y=5)

        add_pro_cat=Label(Customerlabelframe,text="Category:",pady=5,padx=10)
        add_pro_cat.place(x=20,y=40)
        n = StringVar()
        add_pro_category = ttk.Combobox(Customerlabelframe, width = 40, textvariable = n )
        
        add_pro_category['values'] = ('Default',)
        
        add_pro_category.place(x=120,y=45)
        add_pro_category.current(0)


        add_pro_name_label=Label(Customerlabelframe,text="Name :",fg="blue",pady=5,padx=10)
        add_pro_name_label.place(x=20,y=70)
        add_pro_name_entry = Entry(Customerlabelframe,width=70)
        add_pro_name_entry.place(x=120,y=75)

        add_pro_des_label=Label(Customerlabelframe,text="Description :",pady=5,padx=10)
        add_pro_des_label.place(x=20,y=100)
        add_pro_des_entry = Entry(Customerlabelframe,width=70)
        add_pro_des_entry.place(x=120,y=105)

        # uval = IntVar(Customerlabelframe, value=0)
        add_pro_unit_label=Label(Customerlabelframe,text="Unit Price:",fg="blue",pady=5,padx=10)
        add_pro_unit_label.place(x=20,y=130)
        add_pro_unit_entry = Entry(Customerlabelframe,width=20,justify="right")
        add_pro_unit_entry.place(x=120,y=135)
        add_pro_unit_entry.bind("<KeyRelease>",calc_pricecost)

        # pcsval = IntVar(Customerlabelframe, value='$0.00')
        add_pro_pcs_label=Label(Customerlabelframe,text="Pcs/Weight:",fg="blue",pady=5,padx=10)
        add_pro_pcs_label.place(x=330,y=135)
        add_pro_pcs_entry = Entry(Customerlabelframe,width=20)
        add_pro_pcs_entry.place(x=420,y=140)

        # costval = IntVar(Customerlabelframe, value=0)
        add_pro_cost_label=Label(Customerlabelframe,text="Cost:",pady=5,padx=10)
        add_pro_cost_label.place(x=20,y=160)
        add_pro_cost_entry = Entry(Customerlabelframe,width=20,justify="right")
        add_pro_cost_entry.place(x=120,y=165)
        add_pro_cost_entry.bind("<KeyRelease>",calc_pricecost)

        # priceval = IntVar(Customerlabelframe, value='$0.00')
        add_pro_price_label=Label(Customerlabelframe,text="(Price - Cost):",pady=5,padx=10)
        add_pro_price_label.place(x=20,y=190)
        add_pro_price_entry = Label(Customerlabelframe,width=17,bg="white",text="0",anchor="e")
        add_pro_price_entry.place(x=120,y=195)

        checkvar_tax1 =IntVar()
        checkvar_tax2 =IntVar()

        if not comp_data:
          pass
        elif comp_data[12] == "2":
          pass
        elif comp_data[12] == "2":
          add_pro_checkbtn_tax1 = Checkbutton(Customerlabelframe,variable = checkvar_tax1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12) 
          add_pro_checkbtn_tax1.place(x=415,y=170)        
        elif comp_data[12] == "3":
          add_pro_checkbtn_tax1 = Checkbutton(Customerlabelframe,variable = checkvar_tax1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
          add_pro_checkbtn_tax2 = Checkbutton(Customerlabelframe,variable = checkvar_tax2,text="Taxable Tax2rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
          add_pro_checkbtn_tax1.place(x=415,y=170)
          add_pro_checkbtn_tax2.place(x=415,y=200)
        


        check_service=IntVar()
      
        add_pro_checkbtn_no = Checkbutton(Customerlabelframe,variable = check_service,
                          text="This is a service (no stock control)",
                          onvalue =1 ,
                          offvalue = 0,
                          height=3,command=service_check)

        add_pro_checkbtn_no.place(x=40,y=220)


        stockval = IntVar(Customerlabelframe)
        add_pro_stock_label=Label(Customerlabelframe,text="Stock:",pady=5,padx=10)
        add_pro_stock_label.place(x=90,y=260)
        add_pro_stock_entry = Entry(Customerlabelframe,width=15,textvariable=stockval)
        add_pro_stock_entry.place(x=150,y=265)

        lowval = IntVar(Customerlabelframe)
        add_pro_low_label=Label(Customerlabelframe,text="Low Stock Warning Limit:",pady=5,padx=10)
        add_pro_low_label.place(x=270,y=260)
        add_pro_low_entry = Entry(Customerlabelframe,width=10,textvariable=lowval)
        add_pro_low_entry.place(x=432,y=265)

      
        add_pro_ware_label=Label(Customerlabelframe,text="Warehouse:",pady=5,padx=10)
        add_pro_ware_label.place(x=60,y=290)
        add_pro_ware_entry = Entry(Customerlabelframe,width=57)
        add_pro_ware_entry.place(x=150,y=295)

        add_pro_pnote_label=Label(Customerlabelframe,text="Private notes(not appears on invoice):",pady=5,padx=10)
        add_pro_pnote_label.place(x=20,y=330)

        add_pro_pnote_scroll = scrolledtext.ScrolledText(Customerlabelframe, undo=True,width=62,height=4)
        add_pro_pnote_scroll.place(x=32,y=358)

        
        #Add product image
        def add_pro_img():
          global pro_img,add_image
          img_type = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
          pro_img = filedialog.askopenfilename(initialdir="/",filetypes=img_type)
          shutil.copyfile(pro_img, os.getcwd()+'/images/'+pro_img.split('/')[-1])
          open_image = Image.open("images/"+pro_img.split('/')[-1])
          resize_img = open_image.resize((480,320))
          add_img = ImageTk.PhotoImage(resize_img)
          add_image = Label(imageFrame,image=add_img)
          add_image.photo = add_img
          add_image.place(x=60,y=80)
          img_size = add_image_getsize(os.path.getsize(pro_img))
          pro_img_name.config(text=pro_img.split('/')[-1])
          pro_img_size.config(text="(" + "" + img_size + "" + ")")
          

        def add_image_getsize(B):
          BYTE = float(B)
          KB = float(1024)
          MB = float(KB**2)

          if BYTE < KB:
            return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
          elif KB <= BYTE < MB:
            return '{0:.2f} KB'.format(BYTE / KB)
          elif MB <= BYTE:
            return '{0:.2f} MB'.format(BYTE / MB)
        
        # Remove product image
        def remove_pro_img():
          try:
            os.remove("images/"+pro_img.split('/')[-1])
            pro_img_name.config(text="")
            pro_img_size.config(text="")
            add_image.destroy()
          except:
            pass


        def add_new_product():
          sku = add_pro_code_entry.get()
          category = add_pro_category.get()
          name = add_pro_name_entry.get()
          description = add_pro_des_entry.get()
          unitprice = add_pro_unit_entry.get()
          peices = add_pro_pcs_entry.get()
          cost = add_pro_cost_entry.get()
          serviceornot = check_service.get()
          if serviceornot == 1:
            priceminuscost = NULL
            stock = NULL
            stocklimit = NULL
            warehouse = NULL
          else:
            priceminuscost = add_pro_price_entry.cget("text")
            stock = add_pro_stock_entry.get()
            stocklimit = add_pro_low_entry.get()
            warehouse = add_pro_ware_entry.get()
          privatenote = add_pro_pnote_scroll.get("1.0",'end-1c')
          status = checkvarStatus.get()
          taxable1 = checkvar_tax1.get()
          taxable2 = checkvar_tax2.get()
          product_image = pro_img_name.cget("text")
          chk_fields = [sku,name,unitprice,cost]
          chk_data = []
          for i in chk_fields:
            if i == "":
              chk_data.append(i)
          
          if len(chk_data) == 0:
            chk_sql = "SELECT * FROM Productservice WHERE sku=%s or name=%s"
            chk_val = (sku,name)
            fbcursor.execute(chk_sql,chk_val)
            fbcursor.fetchall()
            chk_row_count = fbcursor.rowcount
            if chk_row_count == 0:
              add_pro_sql='INSERT INTO Productservice (sku,category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,image,status,taxable,serviceornot,tax2) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)' #adding values into db
              add_pro_val=(sku,category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,product_image,status,taxable1,serviceornot,taxable2)
              fbcursor.execute(add_pro_sql,add_pro_val)
              fbilldb.commit()
              top.destroy()
            else:
              messagebox.showinfo("Alert","Entry with same name or SKU already exist.\nTry again.")
          else:
            messagebox.showinfo("Alert","Fields (sku,name,unitprice,cost) cannot be empty.\nTry again.")
          

          for record in product_sel_tree.get_children():
            product_sel_tree.delete(record)

          countp = 0
          sql = 'SELECT * FROM Productservice'
          fbcursor.execute(sql)
          product_details = fbcursor.fetchall()
          for p in product_details:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1


        # Cancel add new product
        def cancel_add():
          top.destroy()
      
        add_pro_ok_btn = Button(innerFrame,compound = LEFT,image=tick , text ="Ok",width=60,command=add_new_product)
        add_pro_ok_btn.place(x=10,y=475)

        add_pro_cancel_btn = Button(innerFrame,compound = LEFT,image=cancel ,text="Cancel",width=60,command=cancel_add)
        add_pro_cancel_btn.place(x=519,y=475)

        imageFrame = Frame(tab2, relief=GROOVE,height=580)
        imageFrame.pack(side="top",fill=BOTH)

        pro_img_name = Label(imageFrame,text="")
        pro_img_name.place(x=60,y=450)
        pro_img_size = Label(imageFrame,text="")
        pro_img_size.place(x=180,y=450)

        browseimg=Label(imageFrame,text=" Browse for product image file(recommended image type:JPG,size 480x320 pixels) ",bg='#f5f3f2')
        browseimg.place(x=15,y=35)

        add_browsebutton=Button(imageFrame,text = 'Browse',command=add_pro_img)
        add_browsebutton.place(x=500,y=30)
        
        add_removeButton = Button(imageFrame,compound = LEFT,image=cancel, text ="Remove Product Image",width=150,command=remove_pro_img)
        add_removeButton.place(x=400,y=450)

        #################### Edit product #####################

      def edit_product():
        top_edit = Toplevel()  
        top_edit.title("Edit Product/Service")
        p2 = PhotoImage(file = 'images/fbicon.png')
        top_edit.iconphoto(False, p2)
        top_edit.geometry("600x550+350+15")
        tabControl = ttk.Notebook(top_edit)
        s = ttk.Style()
        s.theme_use('default')
        s.configure('TNotebook.Tab', background="#999999",padding=10,bd=0)
            

        tab1 = ttk.Frame(tabControl)
        tab2 = ttk.Frame(tabControl)
      
        tabControl.add(tab1,compound = LEFT, text ='Product/Service')
        tabControl.add(tab2,compound = LEFT, text ='Product Image')
      
        tabControl.pack(expand = 1, fill ="both")
      
        innerFrame = Frame(tab1,bg="#f5f3f2", relief=GROOVE)
        innerFrame.pack(side="top",fill=BOTH)

        Customerlabelframe = LabelFrame(innerFrame,text="Product/Service",width=580,height=455)
        Customerlabelframe.pack(side="top",fill=BOTH,padx=10,pady=(10,45))

        def edit_service_check():
          if check_edit_service.get() == 1:
            edit_pro_price_entry['state'] = DISABLED
            edit_pro_stock_entry['state'] = DISABLED
            edit_pro_low_entry['state'] = DISABLED
            edit_pro_ware_entry['state'] = DISABLED
          else:
            edit_pro_price_entry['state'] = NORMAL
            edit_pro_stock_entry['state'] = NORMAL
            edit_pro_low_entry['state'] = NORMAL
            edit_pro_ware_entry['state'] = NORMAL

        def edit_calc_pricecost(event):
          if edit_pro_unit_entry.get() == "":
            up = 0
          else:
            up = edit_pro_unit_entry.get()
          if edit_pro_cost_entry.get() == "":
            cst = 0 
          else:
            cst = edit_pro_cost_entry.get()
          price_cost = float(up) - float(cst)
          edit_pro_price_entry.config(text=price_cost)

        edit_pro_code_label=Label(Customerlabelframe,text="Code or SKU:",fg="blue",pady=10,padx=10)
        edit_pro_code_label.place(x=20,y=0)
        edit_pro_code_entry = Entry(Customerlabelframe,width=35)
        edit_pro_code_entry.place(x=120,y=8)

        checkvar_edit_Status=IntVar()
        edit_pro_status=Label(Customerlabelframe,text="Status:")
        edit_pro_status.place(x=400,y=8)
        edit_pro_checkbtn_active = Checkbutton(Customerlabelframe,
                          variable = checkvar_edit_Status,text="Active",compound="right",
                          onvalue =1 ,
                          offvalue = 0,)

        edit_pro_checkbtn_active.place(x=450,y=5)

        edit_pro_cat=Label(Customerlabelframe,text="Category:",pady=5,padx=10)
        edit_pro_cat.place(x=20,y=40)
        n = StringVar()
        edit_pro_category = ttk.Combobox(Customerlabelframe, width = 40, textvariable = n )
        
        edit_pro_category['values'] = ['Default']
        
        edit_pro_category.place(x=120,y=45)


        edit_pro_name_label=Label(Customerlabelframe,text="Name :",fg="blue",pady=5,padx=10)
        edit_pro_name_label.place(x=20,y=70)
        edit_pro_name_entry = Entry(Customerlabelframe,width=70)
        edit_pro_name_entry.place(x=120,y=75)

        edit_pro_des_label=Label(Customerlabelframe,text="Description :",pady=5,padx=10)
        edit_pro_des_label.place(x=20,y=100)
        edit_pro_des_entry = Entry(Customerlabelframe,width=70)
        edit_pro_des_entry.place(x=120,y=105)

        # uval = IntVar(Customerlabelframe, value=0)
        edit_pro_unit_label=Label(Customerlabelframe,text="Unit Price:",fg="blue",pady=5,padx=10)
        edit_pro_unit_label.place(x=20,y=130)
        edit_pro_unit_entry = Entry(Customerlabelframe,width=20,justify="right")
        edit_pro_unit_entry.place(x=120,y=135)
        edit_pro_unit_entry.bind("<KeyRelease>",edit_calc_pricecost)

        # pcsval = IntVar(Customerlabelframe, value='$0.00')
        edit_pro_pcs_label=Label(Customerlabelframe,text="Pcs/Weight:",fg="blue",pady=5,padx=10)
        edit_pro_pcs_label.place(x=330,y=135)
        edit_pro_pcs_entry = Entry(Customerlabelframe,width=20)
        edit_pro_pcs_entry.place(x=420,y=140)

        # costval = IntVar(Customerlabelframe, value=0)
        edit_pro_cost_label=Label(Customerlabelframe,text="Cost:",pady=5,padx=10)
        edit_pro_cost_label.place(x=20,y=160)
        edit_pro_cost_entry = Entry(Customerlabelframe,width=20,justify="right")
        edit_pro_cost_entry.place(x=120,y=165)
        edit_pro_cost_entry.bind("<KeyRelease>",edit_calc_pricecost)

        # priceval = IntVar(Customerlabelframe, value='$0.00')
        edit_pro_price_label=Label(Customerlabelframe,text="(Price - Cost):",pady=5,padx=10)
        edit_pro_price_label.place(x=20,y=190)
        edit_pro_price_entry = Label(Customerlabelframe,width=17,bg="white",text="0",anchor="e")
        edit_pro_price_entry.place(x=120,y=195)

        checkvar_edit_tax1 =IntVar()
        checkvar_edit_tax2 =IntVar()

        if not comp_data:
          pass
        elif comp_data[12] == "2":
          pass
        elif comp_data[12] == "2":
          edit_pro_checkbtn_tax1 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12) 
          edit_pro_checkbtn_tax1.place(x=415,y=170)        
        elif comp_data[12] == "3":
          edit_pro_checkbtn_tax1 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
          edit_pro_checkbtn_tax2 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax2,text="Taxable Tax2rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
          edit_pro_checkbtn_tax1.place(x=415,y=170)
          edit_pro_checkbtn_tax2.place(x=415,y=200)
        


        check_edit_service=IntVar()
      
        edit_pro_checkbtn_no = Checkbutton(Customerlabelframe,variable = check_edit_service,
                          text="This is a service (no stock control)",
                          onvalue =1 ,
                          offvalue = 0,
                          height=3,command=edit_service_check)

        edit_pro_checkbtn_no.place(x=40,y=220)


        stockval = IntVar(Customerlabelframe)
        edit_pro_stock_label=Label(Customerlabelframe,text="Stock:",pady=5,padx=10)
        edit_pro_stock_label.place(x=90,y=260)
        edit_pro_stock_entry = Entry(Customerlabelframe,width=15,textvariable=stockval)
        edit_pro_stock_entry.place(x=150,y=265)

        lowval = IntVar(Customerlabelframe)
        edit_pro_low_label=Label(Customerlabelframe,text="Low Stock Warning Limit:",pady=5,padx=10)
        edit_pro_low_label.place(x=270,y=260)
        edit_pro_low_entry = Entry(Customerlabelframe,width=10,textvariable=lowval)
        edit_pro_low_entry.place(x=432,y=265)

      
        edit_pro_ware_label=Label(Customerlabelframe,text="Warehouse:",pady=5,padx=10)
        edit_pro_ware_label.place(x=60,y=290)
        edit_pro_ware_entry = Entry(Customerlabelframe,width=57)
        edit_pro_ware_entry.place(x=150,y=295)

        edit_pro_pnote_label=Label(Customerlabelframe,text="Private notes(not appears on invoice):",pady=5,padx=10)
        edit_pro_pnote_label.place(x=20,y=330)

        edit_pro_pnote_scroll = scrolledtext.ScrolledText(Customerlabelframe, undo=True,width=62,height=4)
        edit_pro_pnote_scroll.place(x=32,y=358)

        selected_product = product_sel_tree.item(product_sel_tree.focus())["values"][0]

        pro_sql = "SELECT * FROM Productservice WHERE sku=%s"
        pro_val = (selected_product,)
        fbcursor.execute(pro_sql,pro_val)
        pro_data = fbcursor.fetchone()

        edit_pro_code_entry.delete(0,END)
        edit_pro_code_entry.insert(0,pro_data[2])
        if pro_data[6] == "1":
          checkvar_edit_Status.set(1)
        else:
          checkvar_edit_Status.set(0)
        edit_pro_category.delete(0,END)
        edit_pro_category.insert(0,pro_data[3])
        edit_pro_name_entry.delete(0,END)
        edit_pro_name_entry.insert(0,pro_data[4])
        edit_pro_des_entry.delete(0,END)
        edit_pro_des_entry.insert(0,pro_data[5])
        edit_pro_unit_entry.delete(0,END)
        edit_pro_unit_entry.insert(0,pro_data[7])
        edit_pro_pcs_entry.delete(0,END)
        edit_pro_pcs_entry.insert(0,pro_data[8])
        edit_pro_cost_entry.delete(0,END)
        edit_pro_cost_entry.insert(0,pro_data[9])
        edit_pro_price_entry.config(text=pro_data[11])
        if pro_data[10] == "1":
          checkvar_edit_tax1.set(1)
        else:
          checkvar_edit_tax1.set(0)
        if pro_data[19] == "1":
          checkvar_edit_tax2.set(1)
        else:
          checkvar_edit_tax2.set(0)
        if pro_data[12] == "1":
          check_edit_service.set(1)
          edit_pro_price_entry['state'] = DISABLED
          edit_pro_stock_entry['state'] = DISABLED
          edit_pro_low_entry['state'] = DISABLED
          edit_pro_ware_entry['state'] = DISABLED
        else:
          check_edit_service.set(0)
        edit_pro_stock_entry.delete(0,END)
        edit_pro_stock_entry.insert(0,pro_data[13])
        edit_pro_low_entry.delete(0,END)
        edit_pro_low_entry.insert(0,pro_data[14])
        edit_pro_ware_entry.delete(0,END)
        edit_pro_ware_entry.insert(0,pro_data[15])
        edit_pro_pnote_scroll.delete("1.0",'end-1c')
        edit_pro_pnote_scroll.insert("1.0",pro_data[16])
        


        
        #Add product image
        def edit_pro_img():
          global pro_edit_img,edit_image
          img_type = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
          pro_edit_img = filedialog.askopenfilename(initialdir="/",filetypes=img_type)
          shutil.copyfile(pro_edit_img, os.getcwd()+'/images/'+pro_edit_img.split('/')[-1])
          open_image = Image.open("images/"+pro_edit_img.split('/')[-1])
          resize_img = open_image.resize((480,320))
          edit_img = ImageTk.PhotoImage(resize_img)
          edit_image = Label(edit_imageFrame,image=edit_img)
          edit_image.photo = edit_img
          edit_image.place(x=60,y=80)
          img_size = edit_image_getsize(os.path.getsize(pro_edit_img))
          pro_img_name_edit.config(text=pro_edit_img.split('/')[-1])
          pro_img_size_edit.config(text="(" + "" + img_size + "" + ")")
          

        def edit_image_getsize(B):
          BYTE = float(B)
          KB = float(1024)
          MB = float(KB**2)

          if BYTE < KB:
            return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
          elif KB <= BYTE < MB:
            return '{0:.2f} KB'.format(BYTE / KB)
          elif MB <= BYTE:
            return '{0:.2f} MB'.format(BYTE / MB)
        
        # Remove product image
        def remove_edit_img():
          try:
            if pro_data[17] != "":
              pro_img_name_edit.config(text="")
              pro_img_size_edit.config(text="")
              edit_image1.destroy()
            else:
              pro_img_name_edit.config(text="")
              pro_img_size_edit.config(text="")
              edit_image.destroy()
          except:
            pass


        def edit_product():
          sku = edit_pro_code_entry.get()
          category = edit_pro_category.get()
          name = edit_pro_name_entry.get()
          description = edit_pro_des_entry.get()
          unitprice = edit_pro_unit_entry.get()
          peices = edit_pro_pcs_entry.get()
          cost = edit_pro_cost_entry.get()
          serviceornot = check_edit_service.get()
          if serviceornot == 1:
            priceminuscost = NULL
            stock = NULL
            stocklimit = NULL
            warehouse = NULL
          else:
            priceminuscost = edit_pro_price_entry.cget("text")
            stock = edit_pro_stock_entry.get()
            stocklimit = edit_pro_low_entry.get()
            warehouse = edit_pro_ware_entry.get()
          privatenote = edit_pro_pnote_scroll.get("1.0",'end-1c')
          status = checkvar_edit_Status.get()
          taxable1 = checkvar_edit_tax1.get()
          taxable2 = checkvar_edit_tax2.get()
          product_image = pro_img_name_edit.cget("text")
          if product_image == "":
            if pro_data[17] == "":
              pass
            else:
              os.remove("images/"+pro_data[17])
          else:
            if product_image == pro_data[17]:
              pass
            else:
              if pro_data[17] == "":
                pass
              else:
                os.remove("images/"+pro_data[17])

          edit_chk_fields = [sku,name,unitprice,cost]
          edit_chk_data = []
          for i in edit_chk_fields:
            if i == "":
              edit_chk_data.append(i)
          
          if len(edit_chk_data) == 0:
            edit_pro_sql='UPDATE Productservice SET category=%s,name=%s,description=%s,unitprice=%s,peices=%s,cost=%s,priceminuscost=%s,stock=%s,stocklimit=%s,warehouse=%s,privatenote=%s,image=%s,status=%s,taxable=%s,serviceornot=%s,tax2=%s WHERE sku=%s'
            edit_pro_val=(category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,product_image,status,taxable1,serviceornot,taxable2,sku)
            fbcursor.execute(edit_pro_sql,edit_pro_val)
            fbilldb.commit()
            top_edit.destroy()
          else:
            messagebox.showinfo("Alert","Fields (sku,name,unitprice,cost) cannot be empty.\nTry again.")

          for record in product_sel_tree.get_children():
            product_sel_tree.delete(record)

          countp = 0
          sql = 'SELECT * FROM Productservice'
          fbcursor.execute(sql)
          product_details = fbcursor.fetchall()
          for p in product_details:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

        ########### Cancel Edit ###############
        def cancel_edit():
          top_edit.destroy()
        

        edit_pro_ok_btn = Button(innerFrame,compound = LEFT,image=tick , text ="Ok",width=60,command=edit_product)
        edit_pro_ok_btn.place(x=10,y=475)

        edit_pro_cancel_btn = Button(innerFrame,compound = LEFT,image=cancel ,text="Cancel",width=60,command=cancel_edit)
        edit_pro_cancel_btn.place(x=519,y=475)

        edit_imageFrame = Frame(tab2, relief=GROOVE,height=580)
        edit_imageFrame.pack(side="top",fill=BOTH)

        pro_img_name_edit = Label(edit_imageFrame,text="")
        pro_img_name_edit.place(x=60,y=450)
        pro_img_size_edit = Label(edit_imageFrame,text="")
        pro_img_size_edit.place(x=180,y=450)

        try:
          edit_open_image = Image.open("images/"+pro_data[17].split('/')[-1])
          edit_resize_img = edit_open_image.resize((480,320))
          edit_img1 = ImageTk.PhotoImage(edit_resize_img)
          edit_image1 = Label(edit_imageFrame,image=edit_img1)
          edit_image1.photo = edit_img1
          edit_image1.place(x=60,y=80)
          edit_img_size = edit_image_getsize(os.path.getsize("images/"+pro_data[17]))
          pro_img_name_edit.config(text=pro_data[17])
          pro_img_size_edit.config(text="(" + "" + edit_img_size + "" + ")")
        except:
          pass

        browseimg=Label(edit_imageFrame,text=" Browse for product image file(recommended image type:JPG,size 480x320 pixels) ",bg='#f5f3f2')
        browseimg.place(x=15,y=35)

        edit_browsebutton=Button(edit_imageFrame,text = 'Browse',command=edit_pro_img)
        edit_browsebutton.place(x=500,y=30)
        
        edit_removeButton = Button(edit_imageFrame,compound = LEFT,image=cancel, text ="Remove Product Image",width=150,command=remove_edit_img)
        edit_removeButton.place(x=400,y=450)


      pro_fil_cat_tree=ttk.Treeview(inv_newline_sel, height=27)
      pro_fil_cat_tree["columns"]=["1"]
      pro_fil_cat_tree.column("#0", width=35, minwidth=20)
      pro_fil_cat_tree.column("1", width=205, minwidth=25, anchor=CENTER)    
      pro_fil_cat_tree.heading("#0",text="", anchor=W)
      pro_fil_cat_tree.heading("1",text="View filter by category", anchor=CENTER)
      pro_fil_cat_tree.place(x=660, y=45)


      def list_filter_product(evet):
        selected_indices = pro_fil_cat_list.curselection()
        selected_filter = ",".join([pro_fil_cat_list.get(i) for i in selected_indices])

        if selected_filter == "               View all Products/Services":
          for record in product_sel_tree.get_children():
            product_sel_tree.delete(record)
          countp = 0
          pro_ser_sql = "SELECT * FROM Productservice"
          fbcursor.execute(pro_ser_sql)
          pro_ser_data = fbcursor.fetchall()
          for p in pro_ser_data:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1
        elif selected_filter == "               View all Products":
          for record in product_sel_tree.get_children():
            product_sel_tree.delete(record)
          countp = 0
          pro_sql = "SELECT * FROM Productservice WHERE serviceornot=%s"
          pro_val = ('0',)
          fbcursor.execute(pro_sql,pro_val)
          product_data = fbcursor.fetchall()
          for p in product_data:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1
        elif selected_filter == "               View all Services":
          for record in product_sel_tree.get_children():
            product_sel_tree.delete(record)
          countp = 0
          ser_sql = "SELECT * FROM Productservice WHERE serviceornot=%s"
          ser_val = ('1',)
          fbcursor.execute(ser_sql,ser_val)
          ser_data = fbcursor.fetchall()
          for p in ser_data:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1


      pro_fil_cat_list = Listbox(inv_newline_sel,height=34,width=40,bg="white",activestyle="dotbox",fg="black",highlightbackground="white")
      pro_fil_cat_list.insert(0,"               View all Products/Services")
      pro_fil_cat_list.insert(1,"               View all Products")
      pro_fil_cat_list.insert(2,"               View all Services")
      pro_fil_cat_list.place(x=660,y=63)
      pro_fil_cat_list.bind('<<ListboxSelect>>',list_filter_product)

      scrollbar = Scrollbar(inv_newline_sel)
      scrollbar.place(x=640, y=45, height=560)
      scrollbar.config( command=add_newline_tree.yview )
    

      product_ok_btn=Button(inv_newline_sel,compound = LEFT,image=tick ,text="ok", width=60,command=product_tree_fetch)
      product_ok_btn.place(x=15, y=610)
      product_edit_btn=Button(inv_newline_sel,compound = LEFT,image=tick , text="Edit product/Service", width=150,command=edit_product)
      product_edit_btn.place(x=250, y=610)
      product_add_btn=Button(inv_newline_sel,compound = LEFT,image=tick , text="Add product/Service", width=150,command=new_product)
      product_add_btn.place(x=435, y=610)
      product_cancel_btn=Button(inv_newline_sel,compound = LEFT,image=cancel ,text="Cancel", width=60,command=lambda:inv_newline_sel.destroy())
      product_cancel_btn.place(x=740, y=610)



    #preview new line
    def previewline():
      if len(add_newline_tree.get_children()) == 0:
        messagebox.showwarning("F-Billing Revolution","This invoice has no line item(s). \nPlease add line items before printing.")
      else:
        prev_invo = Toplevel()
        prev_invo.title("Preview Invoice")
        p2 = PhotoImage(file = "images/fbicon.png")
        prev_invo.iconphoto(False, p2)
        prev_invo.geometry("1360x730+0+0")
        temp_type = template_entry.get()
        if temp_type == 'Professional 1 (logo on left side)':
          frame = Frame(prev_invo, width=953, height=300)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=5,y=30)
          canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
          
          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          
          canvas.config(width=1315,height=640)
          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
          inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_title_canvas.config(text=title_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 50,window=inv_title_canvas)

          try:
            image = Image.open("images/"+comp_data[13])
            resize_image = image.resize((250, 125))
            logo_img = ImageTk.PhotoImage(resize_image)
            b2 = Label(canvas,image=logo_img, height=125, width=250,)
            b2.photo = logo_img
            canvas.create_window(410, 155,window=b2)
          except:
            pass
          
          canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
          canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
          inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_num_canvas.config(text=inv_number_entry.get(),anchor="w")
          canvas.create_window(548, 250,window=inv_num_canvas)
          canvas.create_text(465, 270, text=inv_date_entry.get_date(), fill="black", font=('Helvetica 11'))
          canvas.create_text(465, 290, text=inv_duedate_entry.get_date(), fill="black", font=('Helvetica 11'))
          inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_terms_canvas.config(text=inv_terms_combo.get(),anchor="w")
          canvas.create_window(548, 310,window=inv_terms_canvas)
          inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_ref_canvas.config(text=inv_ref_entry.get(),anchor="w")
          canvas.create_window(548, 330,window=inv_ref_canvas) 
          
          canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
          comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
          comp_addr_canvas.insert("1.0",comp_data[2])
          comp_addr_canvas.tag_configure("tag_name", justify='right')
          comp_addr_canvas.tag_add("tag_name", "1.0", "end")
          comp_addr_canvas.config(state=DISABLED)
          canvas.create_window(882, 165,window=comp_addr_canvas)
          inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
          inv_stax_canvas.config(text=comp_data[4],anchor="e")
          canvas.create_window(865, 220,window=inv_stax_canvas)
          canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
          canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
          canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
          inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_canv_name.config(text=inv_combo_e1.get(),anchor="w",bg="white")
          canvas.create_window(419, 380,window=inv_canv_name)
          inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_addr_canvas.insert("1.0",inv_addr_e2.get("1.0",END))
          inv_addr_canvas.config(state=DISABLED)
          canvas.create_window(405, 425, window=inv_addr_canvas)
          canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_ship_canv_lbl.config(text=inv_shipto_e3.get(),anchor="w",bg="white")
          canvas.create_window(751, 380, window=inv_ship_canv_lbl)
          inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_ship_addr_canvas.insert("1.0",inv_addr_e4.get("1.0",END))
          inv_ship_addr_canvas.config(state=DISABLED)
          canvas.create_window(736, 425,window=inv_ship_addr_canvas)

          inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_header_canvas.config(text=pageh_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 452,window=inv_header_canvas)
          
          s = ttk.Style()
          s.configure('Treeview.Heading', background='',State='DISABLE')
          inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
          inv_prev_tree["columns"] = ["1","2","3","4","5"]
          inv_prev_tree.column("#0",width=1)
          inv_prev_tree.column("1",width=100,anchor=CENTER)
          inv_prev_tree.column("2",width=343,anchor=CENTER)
          inv_prev_tree.column("3",width=80,anchor=CENTER)
          inv_prev_tree.column("4",width=90,anchor=CENTER)
          inv_prev_tree.column("5",width=80,anchor=CENTER)
          inv_prev_tree.heading("#0",text="")
          inv_prev_tree.heading("1",text="ID/SKU")
          inv_prev_tree.heading("2",text="Product/Service - Description")
          inv_prev_tree.heading("3",text="Quantity")
          inv_prev_tree.heading("4",text="Unit Price")
          inv_prev_tree.heading("5",text="Price")
          window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          
          for record in add_newline_tree.get_children():
            prev_data = list(add_newline_tree.item(record,'values'))
            if not comp_data:
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "1":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "2":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
            elif comp_data[12] == "3":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
          

          if not comp_data:
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "1":
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "2":
            canvas.create_line(980, 723, 980, 898 )
            canvas.create_line(720, 723, 720, 898 )
            canvas.create_line(860, 723, 860, 898 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
          elif comp_data[12] == "3":
            canvas.create_line(980, 723, 980, 923 )
            canvas.create_line(720, 723, 720, 923 )
            canvas.create_line(860, 723, 860, 923 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )
            canvas.create_line(980, 923, 720, 923 )
              
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0]+str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)

          inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
          bg="white",cursor="arrow",bd=0)
          inv_prev_comments.insert("1.0",comment_txt.get("1.0",END))
          inv_prev_comments.config(state=DISABLED)
          canvas.create_window(635, 980,window=inv_prev_comments)
          
          canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(290, 1090, 982, 1090)

          inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
          inv_prev_terms.insert("1.0",term_txt.get("1.0",END))
          inv_prev_terms.tag_configure("tag_name", justify='left')
          inv_prev_terms.tag_add("tag_name", "1.0", "end")
          inv_prev_terms.config(state=DISABLED)
          canvas.create_window(642, 1125,window=inv_prev_terms)
          canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
          inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_prev_salesp.config(text=sales_per_entry.get(),anchor="w",bg="white")
          canvas.create_window(502, 1165, window = inv_prev_salesp)
          inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_footer_canvas.config(text=footer_txt_combo.get(),anchor="w",bg="white")
          canvas.create_window(413, 1185,window=inv_footer_canvas)
      #----------------Professional 2 (logo on right side)------------------
        elif temp_type == 'Professional 2 (logo on right side)':
          frame = Frame(prev_invo, width=953, height=300)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=5,y=30)
          canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
          
          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          
          canvas.config(width=1315,height=640)
          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
          inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_title_canvas.config(text=title_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 50,window=inv_title_canvas)

          try:
            image = Image.open("images/"+comp_data[13])
            resize_image = image.resize((250, 125))
            logo_img = ImageTk.PhotoImage(resize_image)
            b2 = Label(canvas,image=logo_img, height=125, width=250,)
            b2.photo = logo_img
            canvas.create_window(860, 155,window=b2)
          except:
            pass
          
          canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
          canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
          inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_num_canvas.config(text=inv_number_entry.get(),anchor="w")
          canvas.create_window(918, 250,window=inv_num_canvas)
          canvas.create_text(856, 270, text=inv_date_entry.get_date(), fill="black", font=('Helvetica 11'))
          canvas.create_text(856, 290, text=inv_duedate_entry.get_date(), fill="black", font=('Helvetica 11'))
          inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_terms_canvas.config(text=inv_terms_combo.get(),anchor="w")
          canvas.create_window(918, 310,window=inv_terms_canvas)
          inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_ref_canvas.config(text=inv_ref_entry.get(),anchor="w")
          canvas.create_window(918, 330,window=inv_ref_canvas)
          
          canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
          comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
          comp_addr_canvas.insert("1.0",comp_data[2])
          comp_addr_canvas.tag_configure("tag_name", justify='left')
          comp_addr_canvas.tag_add("tag_name", "1.0", "end")
          comp_addr_canvas.config(state=DISABLED)
          canvas.create_window(392, 165,window=comp_addr_canvas)
          inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg='white')
          inv_stax_canvas.config(text=comp_data[4],anchor="w")
          canvas.create_window(405, 220,window=inv_stax_canvas)
          canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
          canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
          canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
          inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_canv_name.config(text=inv_combo_e1.get(),anchor="w",bg="white")
          canvas.create_window(409, 370,window=inv_canv_name)
          inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_addr_canvas.insert("1.0",inv_addr_e2.get("1.0",END))
          inv_addr_canvas.config(state=DISABLED)
          canvas.create_window(395, 415, window=inv_addr_canvas)
          canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_ship_canv_lbl.config(text=inv_shipto_e3.get(),anchor="w",bg="white")
          canvas.create_window(751, 370, window=inv_ship_canv_lbl)
          inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_ship_addr_canvas.insert("1.0",inv_addr_e4.get("1.0",END))
          inv_ship_addr_canvas.config(state=DISABLED)
          canvas.create_window(736, 415,window=inv_ship_addr_canvas)

          inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_header_canvas.config(text=pageh_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 452,window=inv_header_canvas)
          
          s = ttk.Style()
          s.configure('Treeview.Heading', background='',State='DISABLE')
          inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
          inv_prev_tree["columns"] = ["1","2","3","4","5"]
          inv_prev_tree.column("#0",width=1)
          inv_prev_tree.column("1",width=100,anchor=CENTER)
          inv_prev_tree.column("2",width=343,anchor=CENTER)
          inv_prev_tree.column("3",width=80,anchor=CENTER)
          inv_prev_tree.column("4",width=90,anchor=CENTER)
          inv_prev_tree.column("5",width=80,anchor=CENTER)
          inv_prev_tree.heading("#0",text="")
          inv_prev_tree.heading("1",text="ID/SKU")
          inv_prev_tree.heading("2",text="Product/Service - Description")
          inv_prev_tree.heading("3",text="Quantity")
          inv_prev_tree.heading("4",text="Unit Price")
          inv_prev_tree.heading("5",text="Price")
          window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          
          for record in add_newline_tree.get_children():
            prev_data = list(add_newline_tree.item(record,'values'))
            if not comp_data:
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "1":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "2":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
            elif comp_data[12] == "3":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
          

          if not comp_data:
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "1":
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "2":
            canvas.create_line(980, 723, 980, 898 )
            canvas.create_line(720, 723, 720, 898 )
            canvas.create_line(860, 723, 860, 898 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
          elif comp_data[12] == "3":
            canvas.create_line(980, 723, 980, 923 )
            canvas.create_line(720, 723, 720, 923 )
            canvas.create_line(860, 723, 860, 923 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )
            canvas.create_line(980, 923, 720, 923 )
              
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0]+str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)

          inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
          bg="white",cursor="arrow",bd=0)
          inv_prev_comments.insert("1.0",comment_txt.get("1.0",END))
          inv_prev_comments.config(state=DISABLED)
          canvas.create_window(635, 980,window=inv_prev_comments)
          
          canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(290, 1090, 982, 1090)
          
          inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
          inv_prev_terms.insert("1.0",term_txt.get("1.0",END))
          inv_prev_terms.tag_configure("tag_name", justify='left')
          inv_prev_terms.tag_add("tag_name", "1.0", "end")
          inv_prev_terms.config(state=DISABLED)
          canvas.create_window(642, 1125,window=inv_prev_terms)
          canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
          inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_prev_salesp.config(text=sales_per_entry.get(),anchor="w",bg="white")
          canvas.create_window(502, 1165, window = inv_prev_salesp)
          inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_footer_canvas.config(text=footer_txt_combo.get(),anchor="w",bg="white")
          canvas.create_window(413, 1185,window=inv_footer_canvas)
      #----------------Simplified 1 (logo on left side)------------------ 
        elif temp_type == 'Simplified 1 (logo on left side)':
          frame = Frame(prev_invo, width=953, height=300)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=5,y=30)
          canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
          
          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          
          canvas.config(width=1315,height=640)
          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
          inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_title_canvas.config(text=title_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 50,window=inv_title_canvas)

          try:
            image = Image.open("images/"+comp_data[13])
            resize_image = image.resize((250, 125))
            logo_img = ImageTk.PhotoImage(resize_image)
            b2 = Label(canvas,image=logo_img, height=125, width=250,)
            b2.photo = logo_img
            canvas.create_window(410, 155,window=b2)
          except:
            pass
          
          canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
          canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
          inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_num_canvas.config(text=inv_number_entry.get(),anchor="w")
          canvas.create_window(548, 250,window=inv_num_canvas)
          canvas.create_text(465, 270, text=inv_date_entry.get_date(), fill="black", font=('Helvetica 11'))
          canvas.create_text(465, 290, text=inv_duedate_entry.get_date(), fill="black", font=('Helvetica 11'))
          inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_terms_canvas.config(text=inv_terms_combo.get(),anchor="w")
          canvas.create_window(548, 310,window=inv_terms_canvas)
          inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
          inv_ref_canvas.config(text=inv_ref_entry.get(),anchor="w")
          canvas.create_window(548, 330,window=inv_ref_canvas)   
          
          canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
          comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
          comp_addr_canvas.insert("1.0",comp_data[2])
          comp_addr_canvas.tag_configure("tag_name", justify='right')
          comp_addr_canvas.tag_add("tag_name", "1.0", "end")
          comp_addr_canvas.config(state=DISABLED)
          canvas.create_window(882, 165,window=comp_addr_canvas)
          inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
          inv_stax_canvas.config(text=comp_data[4],anchor="e")
          canvas.create_window(865, 220,window=inv_stax_canvas)
          canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
          canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
          canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
          inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_canv_name.config(text=inv_combo_e1.get(),anchor="w",bg="white")
          canvas.create_window(419, 380,window=inv_canv_name)
          inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_addr_canvas.insert("1.0",inv_addr_e2.get("1.0",END))
          inv_addr_canvas.config(state=DISABLED)
          canvas.create_window(405, 425, window=inv_addr_canvas)
          canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_ship_canv_lbl.config(text=inv_shipto_e3.get(),anchor="w",bg="white")
          canvas.create_window(751, 380, window=inv_ship_canv_lbl)
          inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_ship_addr_canvas.insert("1.0",inv_addr_e4.get("1.0",END))
          inv_ship_addr_canvas.config(state=DISABLED)
          canvas.create_window(736, 425,window=inv_ship_addr_canvas)

          inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_header_canvas.config(text=pageh_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 452,window=inv_header_canvas)
          
          s = ttk.Style()
          s.configure('Treeview.Heading', background='',State='DISABLE')
          inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
          inv_prev_tree["columns"] = ["1","2","3"]
          inv_prev_tree.column("#0",width=1)
          inv_prev_tree.column("1",width=394,anchor=CENTER)
          inv_prev_tree.column("2",width=150,anchor=CENTER)
          inv_prev_tree.column("3",width=150,anchor=CENTER)
          inv_prev_tree.heading("#0",text="")
          inv_prev_tree.heading("1",text="Product/Service - Description")
          inv_prev_tree.heading("2",text="Quantity")
          inv_prev_tree.heading("3",text="Price")
          window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          
          for record in add_newline_tree.get_children():
            prev_data = list(add_newline_tree.item(record,'values'))
            if not comp_data:
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
            elif comp_data[12] == "1":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
            elif comp_data[12] == "2":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[7]))
            elif comp_data[12] == "3":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[8]))
          

          if not comp_data:
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "1":
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "2":
            canvas.create_line(980, 723, 980, 898 )
            canvas.create_line(720, 723, 720, 898 )
            canvas.create_line(860, 723, 860, 898 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
          elif comp_data[12] == "3":
            canvas.create_line(980, 723, 980, 923 )
            canvas.create_line(720, 723, 720, 923 )
            canvas.create_line(860, 723, 860, 923 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )
            canvas.create_line(980, 923, 720, 923 )
              
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0]+str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)

          inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
          bg="white",cursor="arrow",bd=0)
          inv_prev_comments.insert("1.0",comment_txt.get("1.0",END))
          inv_prev_comments.config(state=DISABLED)
          canvas.create_window(635, 980,window=inv_prev_comments)
          
          canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(290, 1090, 982, 1090)
          
          inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
          inv_prev_terms.insert("1.0",term_txt.get("1.0",END))
          inv_prev_terms.tag_configure("tag_name", justify='left')
          inv_prev_terms.tag_add("tag_name", "1.0", "end")
          inv_prev_terms.config(state=DISABLED)
          canvas.create_window(642, 1125,window=inv_prev_terms)
          canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
          inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_prev_salesp.config(text=sales_per_entry.get(),anchor="w",bg="white")
          canvas.create_window(502, 1165, window = inv_prev_salesp)
          inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_footer_canvas.config(text=footer_txt_combo.get(),anchor="w",bg="white")
          canvas.create_window(413, 1185,window=inv_footer_canvas)
      #----------------Simplified 2 (logo on right side)------------------ 
        elif temp_type == 'Simplified 2 (logo on right side)':
          frame = Frame(prev_invo, width=953, height=300)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=5,y=30)
          canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
          
          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          
          canvas.config(width=1315,height=640)
          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
          inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_title_canvas.config(text=title_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 50,window=inv_title_canvas)

          try:
            image = Image.open("images/"+comp_data[13])
            resize_image = image.resize((250, 125))
            logo_img = ImageTk.PhotoImage(resize_image)
            b2 = Label(canvas,image=logo_img, height=125, width=250,)
            b2.photo = logo_img
            canvas.create_window(860, 155,window=b2)
          except:
            pass
          
          canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
          canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
          inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_num_canvas.config(text=inv_number_entry.get(),anchor="w")
          canvas.create_window(918, 250,window=inv_num_canvas)
          canvas.create_text(856, 270, text=inv_date_entry.get_date(), fill="black", font=('Helvetica 11'))
          canvas.create_text(856, 290, text=inv_duedate_entry.get_date(), fill="black", font=('Helvetica 11'))
          inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_terms_canvas.config(text=inv_terms_combo.get(),anchor="w")
          canvas.create_window(918, 310,window=inv_terms_canvas)
          inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_ref_canvas.config(text=inv_ref_entry.get(),anchor="w")
          canvas.create_window(918, 330,window=inv_ref_canvas)   
          
          canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
          comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
          comp_addr_canvas.insert("1.0",comp_data[2])
          comp_addr_canvas.tag_configure("tag_name", justify='left')
          comp_addr_canvas.tag_add("tag_name", "1.0", "end")
          comp_addr_canvas.config(state=DISABLED)
          canvas.create_window(392, 165,window=comp_addr_canvas)
          inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
          inv_stax_canvas.config(text=comp_data[4],anchor="w")
          canvas.create_window(405, 220,window=inv_stax_canvas)
          canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
          canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
          canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
          inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_canv_name.config(text=inv_combo_e1.get(),anchor="w",bg="white")
          canvas.create_window(409, 370,window=inv_canv_name)
          inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_addr_canvas.insert("1.0",inv_addr_e2.get("1.0",END))
          inv_addr_canvas.config(state=DISABLED)
          canvas.create_window(395, 415, window=inv_addr_canvas)
          canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_ship_canv_lbl.config(text=inv_shipto_e3.get(),anchor="w",bg="white")
          canvas.create_window(751, 370, window=inv_ship_canv_lbl)
          inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_ship_addr_canvas.insert("1.0",inv_addr_e4.get("1.0",END))
          inv_ship_addr_canvas.config(state=DISABLED)
          canvas.create_window(736, 415,window=inv_ship_addr_canvas)

          inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_header_canvas.config(text=pageh_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(637, 452,window=inv_header_canvas)
          
          s = ttk.Style()
          s.configure('Treeview.Heading', background='',State='DISABLE')
          inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
          inv_prev_tree["columns"] = ["1","2","3"]
          inv_prev_tree.column("#0",width=1)
          inv_prev_tree.column("1",width=394,anchor=CENTER)
          inv_prev_tree.column("2",width=150,anchor=CENTER)
          inv_prev_tree.column("3",width=150,anchor=CENTER)
          inv_prev_tree.heading("#0",text="")
          inv_prev_tree.heading("1",text="Product/Service - Description")
          inv_prev_tree.heading("2",text="Quantity")
          inv_prev_tree.heading("3",text="Price")
          window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          
          for record in add_newline_tree.get_children():
            prev_data = list(add_newline_tree.item(record,'values'))
            if not comp_data:
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
            elif comp_data[12] == "1":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
            elif comp_data[12] == "2":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[7]))
            elif comp_data[12] == "3":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[8]))
          

          if not comp_data:
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "1":
            canvas.create_line(980, 723, 980, 873 )
            canvas.create_line(720, 723, 720, 873 )
            canvas.create_line(860, 723, 860, 873 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,786,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,811,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,836,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,861,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_bal1_canvas)
          elif comp_data[12] == "2":
            canvas.create_line(980, 723, 980, 898 )
            canvas.create_line(720, 723, 720, 898 )
            canvas.create_line(860, 723, 860, 898 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,811,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,836,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,861,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,886,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_bal1_canvas)
          elif comp_data[12] == "3":
            canvas.create_line(980, 723, 980, 923 )
            canvas.create_line(720, 723, 720, 923 )
            canvas.create_line(860, 723, 860, 923 )#1st
            canvas.create_line(980, 723, 720, 723 )
            canvas.create_line(980, 748, 720, 748 )
            canvas.create_line(980, 773, 720, 773 ) 
            canvas.create_line(980, 798, 720, 798 )
            canvas.create_line(980, 823, 720, 823 )
            canvas.create_line(980, 848, 720, 848 )
            canvas.create_line(980, 873, 720, 873 )
            canvas.create_line(980, 898, 720, 898 )
            canvas.create_line(980, 923, 720, 923 )
              
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0]+str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax_2.cget("text")),anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="center")
              canvas.create_window(790,737,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,737,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="center")
              canvas.create_window(790,761,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,761,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="center")
              canvas.create_window(790,786,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,786,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="center")
              canvas.create_window(790,811,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,811,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="center")
              canvas.create_window(790,836,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,836,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="center")
              canvas.create_window(790,861,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,861,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="center")
              canvas.create_window(790,886,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,886,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="center")
              canvas.create_window(790,911,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(925,911,window=inv_bal1_canvas)

          inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
          bg="white",cursor="arrow",bd=0)
          inv_prev_comments.insert("1.0",comment_txt.get("1.0",END))
          inv_prev_comments.config(state=DISABLED)
          canvas.create_window(635, 980,window=inv_prev_comments)
          
          canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(290, 1090, 982, 1090)
          
          inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
          inv_prev_terms.insert("1.0",term_txt.get("1.0",END))
          inv_prev_terms.tag_configure("tag_name", justify='left')
          inv_prev_terms.tag_add("tag_name", "1.0", "end")
          inv_prev_terms.config(state=DISABLED)
          canvas.create_window(642, 1125,window=inv_prev_terms)
          canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
          inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_prev_salesp.config(text=sales_per_entry.get(),anchor="w",bg="white")
          canvas.create_window(502, 1165, window = inv_prev_salesp)
          inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_footer_canvas.config(text=footer_txt_combo.get(),anchor="w",bg="white")
          canvas.create_window(413, 1185,window=inv_footer_canvas)
      #----------------Business Classic------------------ 
        elif temp_type == 'Business Classic':
          frame = Frame(prev_invo, width=953, height=300)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=5,y=30)
          canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
          
          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          
          canvas.config(width=1315,height=640)
          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(235, 25, 1080, 1430 , outline='yellow',fill='white')
          inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_title_canvas.config(text=title_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(657, 50,window=inv_title_canvas)
          canvas.create_line(290, 70, 1025, 70, fill='orange')

          try:
            image = Image.open("images/"+comp_data[13])
            resize_image = image.resize((250, 125))
            logo_img = ImageTk.PhotoImage(resize_image)
            b2 = Label(canvas,image=logo_img, height=125, width=250,)
            b2.photo = logo_img
            canvas.create_window(417, 155,window=b2)
          except:
            pass
          canvas.create_text(629, 110, text=comp_data[1], fill="black", font=('Helvetica 10 bold'))
          comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=21,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
          comp_addr_canvas.insert("1.0",comp_data[2])
          comp_addr_canvas.tag_configure("tag_name", justify='left')
          comp_addr_canvas.tag_add("tag_name", "1.0", "end")
          comp_addr_canvas.config(state=DISABLED)
          canvas.create_window(628, 165,window=comp_addr_canvas)
          inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=21,bg="white")
          inv_stax_canvas.config(text=comp_data[4],anchor="w")
          canvas.create_window(638, 220,window=inv_stax_canvas)
          

          inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_canv_name.config(text=inv_combo_e1.get(),anchor="w",bg="white")
          canvas.create_window(868, 110,window=inv_canv_name)
          inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=3,bd=0,fg= "black",
          bg="white",cursor="arrow")
          inv_addr_canvas.insert("1.0",inv_addr_e2.get("1.0",END))
          inv_addr_canvas.config(state=DISABLED)
          canvas.create_window(853, 157, window=inv_addr_canvas)
          
          canvas.create_text(765, 190, text="Invoice", fill="black", font=('Helvetica 10'))
          canvas.create_text(780, 210, text="Invoice date", fill="black", font=('Helvetica 10'))
          canvas.create_text(772, 230, text="Due date", fill="black", font=('Helvetica 10'))
          canvas.create_text(763, 250, text="Terms", fill="black", font=('Helvetica 10'))
          canvas.create_text(779, 270, text="Invoice ref.#", fill="black", font=('Helvetica 10'))
          inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_num_canvas.config(text=inv_number_entry.get(),anchor="w")
          canvas.create_window(963, 190,window=inv_num_canvas)
          canvas.create_text(900, 210, text=inv_date_entry.get_date(), fill="black", font=('Helvetica 11'))
          canvas.create_text(900, 230, text=inv_duedate_entry.get_date(), fill="black", font=('Helvetica 11'))
          inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_terms_canvas.config(text=inv_terms_combo.get(),anchor="w")
          canvas.create_window(963, 250,window=inv_terms_canvas)
          inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
          inv_ref_canvas.config(text=inv_ref_entry.get(),anchor="w")
          canvas.create_window(963, 270,window=inv_ref_canvas)

          inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_header_canvas.config(text=pageh_txt_combo.get(),anchor="center",bg="white")
          canvas.create_window(657, 290,window=inv_header_canvas)


          s = ttk.Style()
          s.configure('Treeview.Heading', background='',State='DISABLE')
          inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
          inv_prev_tree["columns"] = ["1","2","3","4","5"]
          inv_prev_tree.column("#0",width=1)
          inv_prev_tree.column("1",width=240,anchor=CENTER)
          inv_prev_tree.column("2",width=220,anchor=CENTER)
          inv_prev_tree.column("3",width=90,anchor=CENTER)
          inv_prev_tree.column("4",width=100,anchor=CENTER)
          inv_prev_tree.column("5",width=90,anchor=CENTER)
          inv_prev_tree.heading("#0",text="")
          inv_prev_tree.heading("1",text="Product/Service")
          inv_prev_tree.heading("2",text="Description")
          inv_prev_tree.heading("3",text="Quantity")
          inv_prev_tree.heading("4",text="Unit Price")
          inv_prev_tree.heading("5",text="Price")
          window = canvas.create_window(285, 300, anchor="nw", window=inv_prev_tree)
          
          
          currency_sql = "SELECT currencysign,currsignplace FROM company"
          fbcursor.execute(currency_sql,)
          currency_symb = fbcursor.fetchone()
          
          for record in add_newline_tree.get_children():
            prev_data = list(add_newline_tree.item(record,'values'))
            if not comp_data:
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "1":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
            elif comp_data[12] == "2":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
            elif comp_data[12] == "3":
              inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
          
          if not comp_data:
            canvas.create_line(1027, 560, 1027, 710 )
            canvas.create_line(720, 560, 720, 710 )
            canvas.create_line(1027, 560, 720, 560 )
            canvas.create_line(1027, 585, 720, 585 )
            canvas.create_line(1027, 610, 720, 610 ) 
            canvas.create_line(1027, 635, 720, 635 )
            canvas.create_line(1027, 660, 720, 660 )
            canvas.create_line(1027, 685, 720, 685 )
            canvas.create_line(1027, 710, 720, 710 )
            
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
          elif comp_data[12] == "1":
            canvas.create_line(1027, 560, 1027, 710 )
            canvas.create_line(720, 560, 720, 710 )
            canvas.create_line(1027, 560, 720, 560 )
            canvas.create_line(1027, 585, 720, 585 )
            canvas.create_line(1027, 610, 720, 610 ) 
            canvas.create_line(1027, 635, 720, 635 )
            canvas.create_line(1027, 660, 720, 660 )
            canvas.create_line(1027, 685, 720, 685 )
            canvas.create_line(1027, 710, 720, 710 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,624,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,649,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,674,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,699,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_bal1_canvas)
          elif comp_data[12] == "2":
            canvas.create_line(1027, 560, 1027, 735 )
            canvas.create_line(720, 560, 720, 735 )
            canvas.create_line(1027, 560, 720, 560 )
            canvas.create_line(1027, 585, 720, 585 )
            canvas.create_line(1027, 610, 720, 610 ) 
            canvas.create_line(1027, 635, 720, 635 )
            canvas.create_line(1027, 660, 720, 660 )
            canvas.create_line(1027, 685, 720, 685 )
            canvas.create_line(1027, 710, 720, 710 )
            canvas.create_line(1027, 735, 720, 735 )

            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,649,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,674,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,699,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,724,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,724,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,649,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,674,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,699,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,724,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,724,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,649,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,674,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,699,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,724,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,724,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,649,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,674,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,699,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,724,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,724,window=inv_bal1_canvas)
          elif comp_data[12] == "3":
            canvas.create_line(1027, 560, 1027, 760 )
            canvas.create_line(720, 560, 720, 760 )
            canvas.create_line(1027, 560, 720, 560 )
            canvas.create_line(1027, 585, 720, 585 )
            canvas.create_line(1027, 610, 720, 610 ) 
            canvas.create_line(1027, 635, 720, 635 )
            canvas.create_line(1027, 660, 720, 660 )
            canvas.create_line(1027, 685, 720, 685 )
            canvas.create_line(1027, 710, 720, 710 )
            canvas.create_line(1027, 735, 720, 735 )
            canvas.create_line(1027, 760, 720, 760)
              
            if currency_symb[1] == "before amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0]+str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0]+str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0]+str(tax_1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="w")
              canvas.create_window(784,649,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0]+str(tax_2.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,674,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0]+str(cost1.cget("text")),anchor="e")
              canvas.create_window(971,674,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,699,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,724,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0]+str(total1.cget("text")),anchor="e")
              canvas.create_window(971,724,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,749,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0]+str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,749,window=inv_bal1_canvas)
            elif currency_symb[1] == "before amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1.cget("text")),anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1.cget("text")),anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax_1.cget("text")),anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="w")
              canvas.create_window(784,649,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax_2.cget("text")),anchor="e")
              canvas.create_window(971,649,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,674,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1.cget("text")),anchor="e")
              canvas.create_window(984,674,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,699,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1.cget("text")),anchor="e")
              canvas.create_window(971,699,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,724,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1.cget("text")),anchor="e")
              canvas.create_window(971,724,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,749,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1.cget("text")),anchor="e")
              canvas.create_window(971,749,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="w")
              canvas.create_window(784,649,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,674,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,699,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,724,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,724,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,749,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+currency_symb[0],anchor="e")
              canvas.create_window(971,749,window=inv_bal1_canvas)
            elif currency_symb[1] == "after amount with space":
              inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_dis_canvas.config(text=discount.cget("text"),anchor="w")
              canvas.create_window(784,574,window=inv_dis_canvas)
              inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_dis1_canvas.config(text=str(discount1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,574,window=inv_dis1_canvas)

              inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_sub_canvas.config(text="Subtotal",anchor="w")
              canvas.create_window(784,599,window=inv_sub_canvas)
              inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_sub1_canvas.config(text=str(sub1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,599,window=inv_sub1_canvas)

              inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX1_canvas.config(text="TAX1",anchor="w")
              canvas.create_window(784,624,window=inv_TAX1_canvas)
              inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_1_canvas.config(text=str(tax_1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,624,window=inv_tax_1_canvas)

              inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_TAX2_canvas.config(text="TAX2",anchor="w")
              canvas.create_window(784,649,window=inv_TAX2_canvas)
              inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_tax_2_canvas.config(text=str(tax_2.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,649,window=inv_tax_2_canvas)

              inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
              inv_excname_canvas.config(text=ex_costn_combo.get(),anchor="w")
              canvas.create_window(784,674,window=inv_excname_canvas)
              inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
              inv_excost_canvas.config(text=str(cost1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,674,window=inv_excost_canvas)

              inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_tot_canvas.config(text="Invoice Total",anchor="w")
              canvas.create_window(784,699,window=inv_tot_canvas)
              inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_tot1_canvas.config(text=str(invoicetot1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,699,window=inv_tot1_canvas)

              inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_totp_canvas.config(text="Total Paid",anchor="w")
              canvas.create_window(784,724,window=inv_totp_canvas)
              inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_totp1_canvas.config(text=str(total1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,724,window=inv_totp1_canvas)

              inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
              inv_bal_canvas.config(text="Balance",anchor="w")
              canvas.create_window(784,749,window=inv_bal_canvas)
              inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
              inv_bal1_canvas.config(text=str(balance1.cget("text"))+ " " +currency_symb[0],anchor="e")
              canvas.create_window(971,749,window=inv_bal1_canvas)

          canvas.create_line(290, 810, 1030, 810, fill='orange')
          inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=106,height=6,fg= "black",
          bg="white",cursor="arrow",bd=0)
          inv_prev_comments.insert("1.0",comment_txt.get("1.0",END))
          inv_prev_comments.config(state=DISABLED)
          canvas.create_window(661, 860,window=inv_prev_comments)

          canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(290, 1090, 1030, 1090, fill='orange')
          
          inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=106,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
          inv_prev_terms.insert("1.0",term_txt.get("1.0",END))
          inv_prev_terms.tag_configure("tag_name", justify='left')
          inv_prev_terms.tag_add("tag_name", "1.0", "end")
          inv_prev_terms.config(state=DISABLED)
          canvas.create_window(661, 1125,window=inv_prev_terms)
          canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
          inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
          inv_prev_salesp.config(text=sales_per_entry.get(),anchor="w",bg="white")
          canvas.create_window(502, 1165, window = inv_prev_salesp)
          inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
          inv_footer_canvas.config(text=footer_txt_combo.get(),anchor="w",bg="white")
          canvas.create_window(413, 1185,window=inv_footer_canvas)
        else:
            pass


########################### Print Invoice #######################
    def printinvoice():
      if len(add_newline_tree.get_children()) == 0:
        messagebox.showwarning("F-Billing Revolution 2022","This invoice has no line items.\nPlease add line item(s) before printing.")
      else:
        from reportlab.pdfgen import canvas
        invnumber = inv_number_entry.get().split('/')[0]
        pdf = canvas.Canvas("Invoice Documents/"+invnumber+".pdf", pagesize=letter)
        type_temp = template_entry.get()
        if type_temp == 'Professional 1 (logo on left side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo.get())
          pdf.drawCentredString(302,475,pageh_txt_combo.get())
          pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

          pdf.drawString(30,635,"Invoice#")
          pdf.drawString(30,620,"Invoice date")
          pdf.drawString(30,605,"Due date")
          pdf.drawString(30,590,"Terms")
          pdf.drawString(30,575,"Invoice ref#")

          pdf.drawString(140,635,inv_number_entry.get())
          pdf.drawString(140,620,str(inv_date_entry.get_date()))
          pdf.drawString(140,605,str(inv_duedate_entry.get_date()))
          pdf.drawString(140,590,inv_terms_combo.get())
          pdf.drawString(140,575,inv_ref_entry.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1.get())
          invto_addr = inv_addr_e2.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,40))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3.get())
          shipto_addr = inv_addr_e4.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,40))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass


          pdf.setFont('Helvetica-Bold',12)
          pdf.drawRightString(580,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawAlignedString(582,730,htg[0])
            if vg>1:
              pdf.drawAlignedString(582,715,htg[1])
              if vg>2:
                pdf.drawAlignedString(582,700,htg[2])
                if vg>3:
                  pdf.drawAlignedString(582,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawAlignedString(582,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawAlignedString(582,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawAlignedString(582,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(130,470,130,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(400,470,400,450)
          pdf.line(490,470,490,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(60,455,"ID/SKU")
          pdf.drawString(175,455,"Product/Service")
          pdf.drawString(332,455,"Quantity")
          pdf.drawString(420,455,"Unit Price")
          pdf.drawString(523,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
        elif type_temp == 'Professional 2 (logo on right side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo.get())
          pdf.drawCentredString(302,475,pageh_txt_combo.get())
          pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

          pdf.drawString(340,635,"Invoice#")
          pdf.drawString(340,620,"Invoice date")
          pdf.drawString(340,605,"Due date")
          pdf.drawString(340,590,"Terms")
          pdf.drawString(340,575,"Invoice ref#")

          pdf.drawString(450,635,inv_number_entry.get())
          pdf.drawString(450,620,str(inv_date_entry.get_date()))
          pdf.drawString(450,605,str(inv_duedate_entry.get_date()))
          pdf.drawString(450,590,inv_terms_combo.get())
          pdf.drawString(450,575,inv_ref_entry.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1.get())
          invto_addr = inv_addr_e2.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3.get())
          shipto_addr = inv_addr_e4.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(30,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(30,730,htg[0])
            if vg>1:
              pdf.drawString(30,715,htg[1])
              if vg>2:
                pdf.drawString(30,700,htg[2])
                if vg>3:
                  pdf.drawString(30,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(30,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawString(30,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawString(30,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(130,470,130,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(400,470,400,450)
          pdf.line(490,470,490,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(60,455,"ID/SKU")
          pdf.drawString(175,455,"Product/Service")
          pdf.drawString(332,455,"Quantity")
          pdf.drawString(420,455,"Unit Price")
          pdf.drawString(523,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
        elif type_temp == 'Simplified 1 (logo on left side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo.get())
          pdf.drawCentredString(302,475,pageh_txt_combo.get())
          pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

          pdf.drawString(30,635,"Invoice#")
          pdf.drawString(30,620,"Invoice date")
          pdf.drawString(30,605,"Due date")
          pdf.drawString(30,590,"Terms")
          pdf.drawString(30,575,"Invoice ref#")

          pdf.drawString(140,635,inv_number_entry.get())
          pdf.drawString(140,620,str(inv_date_entry.get_date()))
          pdf.drawString(140,605,str(inv_duedate_entry.get_date()))
          pdf.drawString(140,590,inv_terms_combo.get())
          pdf.drawString(140,575,inv_ref_entry.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1.get())
          invto_addr = inv_addr_e2.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3.get())
          shipto_addr = inv_addr_e4.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass


          pdf.setFont('Helvetica-Bold',12)
          pdf.drawRightString(580,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawAlignedString(582,730,htg[0])
            if vg>1:
              pdf.drawAlignedString(582,715,htg[1])
              if vg>2:
                pdf.drawAlignedString(582,700,htg[2])
                if vg>3:
                  pdf.drawAlignedString(582,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawAlignedString(582,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawAlignedString(582,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawAlignedString(582,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(450,470,450,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(130,455,"Product/Service")
          pdf.drawString(357,455,"Quantity")
          pdf.drawString(505,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
        elif type_temp == 'Simplified 2 (logo on right side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo.get())
          pdf.drawCentredString(302,475,pageh_txt_combo.get())
          pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

          pdf.drawString(340,635,"Invoice#")
          pdf.drawString(340,620,"Invoice date")
          pdf.drawString(340,605,"Due date")
          pdf.drawString(340,590,"Terms")
          pdf.drawString(340,575,"Invoice ref#")

          pdf.drawString(450,635,inv_number_entry.get())
          pdf.drawString(450,620,str(inv_date_entry.get_date()))
          pdf.drawString(450,605,str(inv_duedate_entry.get_date()))
          pdf.drawString(450,590,inv_terms_combo.get())
          pdf.drawString(450,575,inv_ref_entry.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1.get())
          invto_addr = inv_addr_e2.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3.get())
          shipto_addr = inv_addr_e4.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(30,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(30,730,htg[0])
            if vg>1:
              pdf.drawString(30,715,htg[1])
              if vg>2:
                pdf.drawString(30,700,htg[2])
                if vg>3:
                  pdf.drawString(30,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(30,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawString(30,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawString(30,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(450,470,450,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(130,455,"Product/Service")
          pdf.drawString(357,455,"Quantity")
          pdf.drawString(505,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
        elif type_temp == 'Business Classic':
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,762,580,762)
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo.get())
          pdf.drawCentredString(302,585,pageh_txt_combo.get())
          pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(240,735, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(240,720,htg[0])
            if vg>1:
              pdf.drawString(240,705,htg[1])
              if vg>2:
                pdf.drawString(240,690,htg[2])
                if vg>3:
                  pdf.drawString(240,675,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(240,650, comp_data[4])

          pdf.drawString(390,665,"Invoice#")
          pdf.drawString(390,650,"Invoice date")
          pdf.drawString(390,635,"Due date")
          pdf.drawString(390,620,"Terms")
          pdf.drawString(390,605,"Invoice ref#")

          pdf.drawString(480,665,inv_number_entry.get())
          pdf.drawString(480,650,str(inv_date_entry.get_date()))
          pdf.drawString(480,635,str(inv_duedate_entry.get_date()))
          pdf.drawString(480,620,inv_terms_combo.get())
          pdf.drawString(480,605,inv_ref_entry.get())

          pdf.drawString(390,735,inv_combo_e1.get())
          invto_addr = inv_addr_e2.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(390,720,a[0])
            if addr > 1:
              pdf.drawString(390,705,a[1])
              if addr > 2:
                pdf.drawString(390,590,a[2])
                if addr > 3:
                  pdf.drawString(390,575,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setStrokeColorRGB(0,0,0)
          pdf.setLineWidth(.3)
          pdf.line(30,580,30,560)
          pdf.line(580,580,580,560)
          pdf.line(310,580,310,560) #vertical lines
          pdf.line(400,580,400,560)
          pdf.line(490,580,490,560)
          #------------------------#
          pdf.line(30,560,580,560)
          pdf.line(30,580,580,580)


          pdf.drawString(130,565,"Product/Service")
          pdf.drawString(332,565,"Quantity")
          pdf.drawString(420,565,"Unit Price")
          pdf.drawString(523,565,"Price")

          y1 = 540 
          y2 = 540
          v1 = 560
          v2 = 540
          for i in add_newline_tree.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage() 
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.setStrokeColorRGB(255,10,0)
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')

            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.setStrokeColorRGB(255,10,0)
            pdf.line(30,110,580,110)
            term_text = term_txt.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')

            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry.get())
            pdf.drawString(32,15,footer_txt_combo.get())


        pdf.save()
        win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+invnumber+".pdf",None,".",0)

      # def property1():
      #   propert=Toplevel()
      #   propert.title("Microsoft Print To PDF Advanced Document Settings")
      #   propert.geometry("670x500+240+150")

      #   def property2():
      #     propert1=Toplevel()
      #     propert1.title("Microsoft Print To PDF Advanced Document Settings")
      #     propert1.geometry("670x500+240+150")

      #     name=Label(propert1, text="Microsoft Print To PDF Advanced Document Settings").place(x=10, y=5)
      #     paper=Label(propert1, text="Paper/Output").place(x=30, y=35)
      #     size=Label(propert1, text="Paper size").place(x=55, y=65)
      #     n = StringVar()
      #     search = ttk.Combobox(propert1, width = 15, textvariable = n )
      #     search['values'] = ('letter')
      #     search.place(x=150,y=65)
      #     search.current(0)
      #     copy=Label(propert1, text="Copy count:").place(x=55, y=95)

      #     okbtn=Button(propert1,compound = LEFT,image=tick , text="Ok", width=60).place(x=460, y=450)
      #     canbtn=Button(propert1,compound = LEFT,image=cancel, text="Cancel", width=60).place(x=570, y=450)
          
          


      #   style = ttk.Style()
      #   style.theme_use('default')
      #   style.configure('TNotebook.Tab', background="#999999", padding=5)
      #   property_Notebook = ttk.Notebook(propert)
      #   property_Frame = Frame(property_Notebook, height=500, width=670)
      #   property_Notebook.add(property_Frame, text="Layout")
      #   property_Notebook.place(x=0, y=0)

      #   name=Label(property_Frame, text="Orientation:").place(x=10, y=5)
      #   n = StringVar()
      #   search = ttk.Combobox(property_Frame, width = 23, textvariable = n )
      #   search['values'] = ('Portrait')
      #   search.place(x=10,y=25)
      #   search.current(0)

      #   text=Text(property_Frame,width=50).place(x=250, y=5,height=350)

      #   btn=Button(property_Frame, text="Advanced",command=property2).place(x=550, y=380)
      #   btn=Button(property_Frame,compound = LEFT,image=tick  ,text="OK", width=60,).place(x=430, y=420)
      #   btn=Button(property_Frame,compound = LEFT,image=cancel , text="Cancel", width=60,).place(x=550, y=420)     


        
      # if(False):
      #     messagebox.showwarning("FBilling Revelution 2020", "Customer is required, Please select customer for this invoice\nbefore printing")
      # elif(False):
      #     messagebox.showinfo("FBilling Revelution 2020", "Print job has been completed.")
      # else:
      #     print1=Toplevel()
      #     print1.title("Print")
      #     print1.geometry("670x400+240+150")
          
      #     printerframe=LabelFrame(print1, text="Printer", height=80, width=650)
      #     printerframe.place(x=7, y=5)      
      #     name=Label(printerframe, text="Name:").place(x=10, y=5)
      #     e1= ttk.Combobox(printerframe, width=40).place(x=70, y=5)
      #     where=Label(printerframe, text="Where:").place(x=10, y=30)
      #     printocheckvar=IntVar()
      #     printochkbtn=Checkbutton(printerframe,text="Print to file",variable=printocheckvar,onvalue=1,offvalue=0,height=1,width=10)
      #     printochkbtn.place(x=450, y=30)
      #     btn=Button(printerframe, text="Properties", width=10,command=property1).place(x=540, y=5)

      #     pageslblframe=LabelFrame(print1, text="Pages", height=140, width=320)
      #     pageslblframe.place(x=10, y=90)
      #     radvar=IntVar()
      #     radioall=Radiobutton(pageslblframe, text="All", variable=radvar, value="1").place(x=10, y=5)
      #     radiocpage=Radiobutton(pageslblframe, text="Current Page", variable=radvar, value="2").place(x=10, y=25)
      #     radiopages=Radiobutton(pageslblframe, text="Pages: ", variable=radvar, value="3").place(x=10, y=45)
      #     pagecountentry = Entry(pageslblframe, width=23).place(x=80, y=47)
      #     pageinfolabl=Label(pageslblframe, text="Enter page numbers and/or page ranges\nseperated by commas. For example:1,3,5-12")
      #     pageinfolabl.place(x=5, y=75)

      #     copylblframe=LabelFrame(print1, text="Copies", height=140, width=320)
      #     copylblframe.place(x=335, y=90)
      #     nolabl=Label(copylblframe, text="Number of copies").place(x=5, y=5)      
      #     noentry = Entry(copylblframe, width=18).place(x=130, y=5)      
      #     one=Frame(copylblframe, width=30, height=40, bg="black").place(x=20, y=40)     
      #     two=Frame(copylblframe, width=30, height=40, bg="grey").place(x=15, y=45)     
      #     three=Frame(copylblframe, width=30, height=40, bg="white").place(x=10, y=50)      
      #     four=Frame(copylblframe, width=30, height=40, bg="black").place(x=80, y=40)      
      #     fiv=Frame(copylblframe, width=30, height=40, bg="grey").place(x=75, y=45)      
      #     six=Frame(copylblframe, width=30, height=40, bg="white").place(x=70, y=50)      
      #     collatecheckvar=IntVar()
      #     collatechkbtn=Checkbutton(copylblframe,text="Collate",variable=collatecheckvar,onvalue=1,offvalue=0,height=1,width=10)
      #     collatechkbtn.place(x=130, y=70)

      #     othrlblframe=LabelFrame(print1, text="Other", height=120, width=320)
      #     othrlblframe.place(x=10, y=235)
      #     printlb=Label(othrlblframe, text="Print").place(x=5, y=0)
      #     dropprint = ttk.Combobox(othrlblframe, width=23).place(x=80, y=0)
      #     orderlb=Label(othrlblframe, text="Order").place(x=5, y=25)
      #     dropord = ttk.Combobox(othrlblframe, width=23).place(x=80, y=25)
      #     duplexlb=Label(othrlblframe, text="Duplex").place(x=5, y=50)
      #     droplex = ttk.Combobox(othrlblframe, width=23).place(x=80, y=50)

      #     prmodelblframe=LabelFrame(print1, text="Print mode", height=120, width=320)
      #     prmodelblframe.place(x=335, y=235)
      #     dropscal = ttk.Combobox(prmodelblframe, width=30).place(x=5, y=5)
      #     poslb=Label(prmodelblframe, text="Print on sheet").place(x=5, y=35)
      #     droppos = ttk.Combobox(prmodelblframe, width=10).place(x=155, y=35)

      #     okbtn=Button(print1,compound = LEFT,image=tick , text="Ok", width=60).place(x=460, y=370)
      #     canbtn=Button(print1,compound = LEFT,image=cancel, text="Cancel", width=60).place(x=570, y=370)


    
    #sms notification
    def sms1():
      send_SMS=Toplevel()
      send_SMS.geometry("700x480+240+150")
      send_SMS.title("Send SMS notification")

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", padding=5)
      sms_Notebook = ttk.Notebook(send_SMS)
      SMS_Notification = Frame(sms_Notebook, height=470, width=700)
      SMS_Service_Account = Frame(sms_Notebook, height=470, width=700)
      sms_Notebook.add(SMS_Notification, text="SMS Notification")
      sms_Notebook.add(SMS_Service_Account, text="SMS Service Account")
      sms_Notebook.place(x=0, y=0)

      numlbel=Label(SMS_Notification, text="SMS number or comma seperated SMS number list(Please start each SMS number with the country code)")
      numlbel.place(x=10, y=10)
      numentry=Entry(SMS_Notification, width=92).place(x=10, y=30)
      stexbel=Label(SMS_Notification, text="SMS Text").place(x=10, y=60)
      stex=Entry(SMS_Notification, width=40).place(x=10, y=85,height=120)
      
      dclbel=Label(SMS_Notification, text="Double click to insert into text")
      dclbel.place(x=410, y=60)
      dcl=Entry(SMS_Notification, width=30)
      dcl.place(x=400, y=85,height=200)
      
      smstype=LabelFrame(SMS_Notification, text="SMS message type", width=377, height=60)
      smstype.place(x=10, y=223)
      snuvar=IntVar()
      normal_rbtn=Radiobutton(smstype, text="Normal SMS(160 chars)", variable=snuvar, value=1)
      normal_rbtn.place(x=5, y=5)
      unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)", variable=snuvar, value=2)
      unicode_rbtn.place(x=190, y=5)
      tiplbf=LabelFrame(SMS_Notification, text="Tips", width=680, height=120)
      tiplbf.place(x=10, y=290)
      tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="Always start the SMS nymber with the country code. Do not use the + sign at the beginning(example\nUS number:8455807546). Do not use any special characters in your normal SMS text. Please use the\nstndard SMS characters or the English alphabet and numbers only. Otherwise the SMS will be\nunreadable or undeliverable. If you need to enter international characters, accents,email address, or\nspecial characters to the SMS text field then choose the Unicode SMS format.")
      tiplabl.place(x=5, y=5)

      btn1=Button(SMS_Notification, width=20, text="Send SMS notification").place(x=10, y=420)
      btn2=Button(SMS_Notification, width=25, text="Confirm SMS cost before sending").place(x=280, y=420)
      btn3=Button(SMS_Notification, width=15, text="Cancel").place(x=550, y=420)
      

      smstype=LabelFrame(SMS_Service_Account, text="Select the notification service provider", width=670, height=65)
      smstype.place(x=10, y=5)
      snumvar=IntVar()
      normal_rbtn=Radiobutton(smstype,text="BULKSMS(www.bulksms.com)",variable=snumvar,value=1,)
      normal_rbtn.place(x=5, y=5)
      unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)-Recommended", variable=snumvar, value=2)
      unicode_rbtn.place(x=290, y=5)

      sms1type=LabelFrame(SMS_Service_Account, text="Your BULKSMS.COM Account", width=670, height=100)
      sms1type.place(x=10, y=80)
      name=Label(sms1type, text="Username").place(x=10, y=5)
      na=Entry(sms1type, width=20).place(x=100, y=5)
      password=Label(sms1type, text="Password").place(x=10, y=45)
      pas=Entry(sms1type, width=20).place(x=100, y=45)
      combo=Label(sms1type, text="Route").place(x=400, y=5)
      n = StringVar()
      combo1 = ttk.Combobox(sms1type, width = 20, textvariable = n ).place(x=450,y=5)
      btn1=Button(sms1type, width=10, text="Save settings").place(x=550, y=45)

      
      tiplbf=LabelFrame(SMS_Service_Account, text="Terms of service", width=680, height=250)
      tiplbf.place(x=10, y=190)
      tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="The SMS notification service is not free.This service costs you creadit.You must have your own account\nat BULKSMS.COM and you need to have sufficient creadit and an active internet connection to use\nthis feature.Please review all fields in this form for accuracy")
      tiplabl.place(x=0, y=5)
      tiplabl1=Label(tiplbf,justify=LEFT,fg="black",  text="visit www.bulksms.com website to create your own account.please make sure the BULKSMS .COM\n service works well in your country before you busy creadit")
      tiplabl1.place(x=0, y=60)
      tiplabl2=Label(tiplbf,justify=LEFT,fg="black",  text="Our SMS notification tool comes without any warranty.our software only forwards your SMS message\nthe BULKSMS API server .The BULKSMS API server will try to sent SMS message your recipient")
      tiplabl2.place(x=0, y=100)
      tiplabl3=Label(tiplbf,justify=LEFT,fg="red",  text="Please note that you access and use the SMS notification tool your own risk.F-Billing software is not\nresponsible for any type of loss or damage or undelivered SMS massage which you may as a result\nof accessing and using the SMS notification service.")
      tiplabl3.place(x=0, y=140)
      checkvar1=IntVar()
      chkbtn1=Checkbutton(tiplbf,text="I have read and agree to the terms of service above",variable=checkvar1,onvalue=1,offvalue=0).place(x=70, y=200)

    def recalc_dis(event):
      if comp_data[12] == "1":
        price = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          price += float(add_newline_tree.item(i,'values')[6])
        discount_rate = (price*dis_rate)/100
        total_cost += (price - discount_rate) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round((price - discount_rate),2)
        sub1.config(text=sub_tot)
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4])
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "2":
        price = 0.0
        p = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        tx1 = float(tax1_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No":
            p += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[7])
        discount_rate = ((price + p) * dis_rate)/100
        dis_price = (price * dis_rate)/100
        dis_p = (p * dis_rate)/100
        tax1_rate = ((price - dis_price)*tx1)/100
        tx_calc = (price - dis_price) + tax1_rate
        tx_calc1 = p - dis_p
        total_cost += (tx_calc + tx_calc1) + exc 
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round(tax1_rate,2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4])
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "3":
        price = 0.0
        p1 = 0.0
        p2 = 0.0
        p3 = 0.0
        total_cost = 0.0
        tx1 = float(tax1_entry.get())
        tx2 = float(tax2_entry.get())
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
            p1 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
            p2 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
            p3 += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[8])
        discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
        dis_p2 = (p2 * dis_rate)/100
        tax1_rate = ((p2 - dis_p2) * tx1)/100
        dis_price = (price * dis_rate)/100
        tax2_rate = ((price - dis_price) * tx1)/100
        tax3_rate = ((price - dis_price) * tx2)/100
        dis_p3= (p3 * dis_rate)/100
        tax4_rate = ((p3 - dis_p3) * tx2)/100
        dis_p4 = (p1 * dis_rate)/100
        tx_calc1 = (p2 - dis_p2) + tax1_rate
        tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
        tx_calc3 = (p3 - dis_p3) + tax4_rate
        tx_calc4 = (p1 - dis_p4)
        total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round((tax1_rate + tax2_rate),2))
        tax_2.config(text=round((tax3_rate + tax4_rate),2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)

    def recalc_exc(event):
      if comp_data[12] == "1":
        price = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          price += float(add_newline_tree.item(i,'values')[6])
        discount_rate = (price*dis_rate)/100
        total_cost += (price - discount_rate) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round((price - discount_rate),2)
        sub1.config(text=sub_tot)
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "2":
        price = 0.0
        p = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        tx1 = float(tax1_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No":
            p += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[7])
        discount_rate = ((price + p) * dis_rate)/100
        dis_price = (price * dis_rate)/100
        dis_p = (p * dis_rate)/100
        tax1_rate = ((price - dis_price)*tx1)/100
        tx_calc = (price - dis_price) + tax1_rate
        tx_calc1 = p - dis_p
        total_cost += (tx_calc + tx_calc1) + exc 
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round(tax1_rate,2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "3":
        price = 0.0
        p1 = 0.0
        p2 = 0.0
        p3 = 0.0
        total_cost = 0.0
        tx1 = float(tax1_entry.get())
        tx2 = float(tax2_entry.get())
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
            p1 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
            p2 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
            p3 += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[8])
        discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
        dis_p2 = (p2 * dis_rate)/100
        tax1_rate = ((p2 - dis_p2) * tx1)/100
        dis_price = (price * dis_rate)/100
        tax2_rate = ((price - dis_price) * tx1)/100
        tax3_rate = ((price - dis_price) * tx2)/100
        dis_p3= (p3 * dis_rate)/100
        tax4_rate = ((p3 - dis_p3) * tx2)/100
        dis_p4 = (p1 * dis_rate)/100
        tx_calc1 = (p2 - dis_p2) + tax1_rate
        tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
        tx_calc3 = (p3 - dis_p3) + tax4_rate
        tx_calc4 = (p1 - dis_p4)
        total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round((tax1_rate + tax2_rate),2))
        tax_2.config(text=round((tax3_rate + tax4_rate),2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
          

    #mark invoice
    def record_newpay():
      inv_as_paid.destroy()
      newpay_inv=Toplevel()
      newpay_inv.geometry("700x480+240+150")
      newpay_inv.title("Record Payement for Invoice") 

      global get_pay_data,discount_rate,total_cost,dis_rate,exc,tax1_rate

      if comp_data[12] == "1":
        price = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          price += float(add_newline_tree.item(i,'values')[6])
        discount_rate = (price*dis_rate)/100
        total_cost += (price - discount_rate) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round((price - discount_rate),2)
        sub1.config(text=sub_tot)
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4])
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "2":
        price = 0.0
        p = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        tx1 = float(tax1_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No":
            p += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[7])
        discount_rate = ((price + p) * dis_rate)/100
        dis_price = (price * dis_rate)/100
        dis_p = (p * dis_rate)/100
        tax1_rate = ((price - dis_price)*tx1)/100
        tx_calc = (price - dis_price) + tax1_rate
        tx_calc1 = p - dis_p
        total_cost += (tx_calc + tx_calc1) + exc 
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round(tax1_rate,2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
      elif comp_data[12] == "3":
        price = 0.0
        p1 = 0.0
        p2 = 0.0
        p3 = 0.0
        total_cost = 0.0
        tx1 = float(tax1_entry.get())
        tx2 = float(tax2_entry.get())
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
            p1 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
            p2 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
            p3 += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[8])
        discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
        dis_p2 = (p2 * dis_rate)/100
        tax1_rate = ((p2 - dis_p2) * tx1)/100
        dis_price = (price * dis_rate)/100
        tax2_rate = ((price - dis_price) * tx1)/100
        tax3_rate = ((price - dis_price) * tx2)/100
        dis_p3= (p3 * dis_rate)/100
        tax4_rate = ((p3 - dis_p3) * tx2)/100
        dis_p4 = (p1 * dis_rate)/100
        tx_calc1 = (p2 - dis_p2) + tax1_rate
        tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
        tx_calc3 = (p3 - dis_p3) + tax4_rate
        tx_calc4 = (p1 - dis_p4)
        total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round((tax1_rate + tax2_rate),2))
        tax_2.config(text=round((tax3_rate + tax4_rate),2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)         
  
      def add_newline_pay():
        if inv_pby_combo.get() == '':
          messagebox.showinfo("F-Billing Revolution 2022",'Please fill out "Paid by" field!')
        else:
          pay_amnt = inv_amnt_entry.get()
          pay_date = inv_pdate_entry.get_date()
          pay_by = inv_pby_combo.get()
          pay_desc = inv_des_entry.get()
          pay_inv_number = inv_number_entry.get()
          pay_full = checkvar.get()
          pay_recp = checkvar1.get()
          pay_att_up = checkvar2.get()
          pay_sql = "INSERT INTO payments(payment_date,paid_by,description,amount,invoice_number,paid_n_close,payment_reciept,updated_invoice) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
          pay_val = (pay_date,pay_by,pay_desc,pay_amnt,pay_inv_number,pay_full,pay_recp,pay_att_up,)
          fbcursor.execute(pay_sql,pay_val)
          fbilldb.commit()

          pay_get_sql = "SELECT * FROM payments ORDER BY payment_id DESC LIMIT 1"
          fbcursor.execute(pay_get_sql)
          pay_data = fbcursor.fetchone()
          pay_tree.insert(parent='',index='end',iid=pay_data[0],text='',values=(pay_data[0],pay_data[1],pay_data[2],pay_data[3],pay_data[4]))

          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4]) 
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
          newpay_inv.destroy()


          def inv_send_mail(file=None):
            # sender_mail = your_cemail_entry.get()
            sender_mail = "infoxfbilling77@gmail.com"
            # sender_password = your_cpass_entry.get()
            sender_password = "dinkiurlziohgfok"

            server = smtplib.SMTP('smtp.gmail.com', 587)
            print("login successfull")
            server.starttls()
            print("login successfull2")
            server.login(sender_mail,sender_password)
            print("login successfull3")

            carbon_info = email_carbon.get()
            msg = MIMEMultipart()
            msg['Subject'] = email_subject.get()
            mail_content = email_ltr_scroll.get("1.0",'end-1c')
            msg['From'] = email_from.get()
            msg['To'] = email_to.get()

            gettingimg = lstfrm.get()
            lst_data = gettingimg[1:-1].split(',')
            
            msg.attach(MIMEText(mail_content, 'plain'))
            
            for i in lst_data:
              if len(i.strip()[1:-1])>1:
                with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                    # MIME attachment is a binary file for that content type "application/octet-stream" is used
                  part = MIMEBase("application", "octet-stream")
                  part.set_payload(attachment.read())
                # encode into base64 
                  encoders.encode_base64(part) 
            
                  part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

                # attach the instance 'part' to instance 'message' 
                  msg.attach(part)
              # message_body = email_body.get()

            server.sendmail(email_from.get(),email_to.get(),msg.as_string())
            server.sendmail(email_from.get(), carbon_info,msg.as_string())

            date = dt.datetime.now().date()
            never1_label.config(text=date)
            # inv_number = inv_tree.item(inv_tree.focus())["values"][1]
            # for record in inv_tree.get_children():
            #   inv_tree.delete(record)
            # sqlq = "UPDATE invoice SET emailed_on=%s WHERE invoice_number = %s"
            # valq = (date,inv_number,)
            # fbcursor.execute(sqlq, valq,)
            # fbilldb.commit()
            
            # fbcursor.execute('SELECT * FROM invoice')
            # ordertotalinput=0
            # j = 0
            # for i in fbcursor:
            #   inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[20], i[6], i[7], i[8], i[9], i[10], i[11], i[12]))
            #   for line in inv_tree.get_children():
            #     idsave1=inv_tree.item(line)['values'][9]
            #   ordertotalinput += idsave1
            # j += 1
            # invtot_rowcol.config(text=ordertotalinput)

            print("message sent")



          if checkvar1.get() == 1:
            send_precp = Toplevel()
            p2 = PhotoImage(file = "images/fbicon.png")
            send_precp.iconphoto(False, p2)
            send_precp.geometry("1030x490+150+120")
            send_precp.title("Payment reciept E-mail")

            # def my_SMTP():
            #     if True:
            #         em_ser_conbtn.destroy()
            #         mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
            #         mysmtpservercon.place(x=610, y=110)
            #         lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
            #         hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
            #         lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
            #         portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
            #         lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
            #         unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
            #         lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
            #         pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
            #         ssl_chkvar=IntVar()
            #         ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
            #         ssl_chkbtn.place(x=50, y=110)
            #         em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
            #     else:
            #         pass


            def inv_empsfile_image(event):
              global yawn
              for i in  attach_list.curselection():
                print("hloo", attach_list.get(i))
                yawn= attach_list.get(i)        
                edit_window_img = Toplevel()
                edit_window_img.title("View Image")
                edit_window_img.geometry("700x500")
                image = Image.open("images/"+yawn)
                resize_image = image.resize((700, 500))
                image = ImageTk.PhotoImage(resize_image)
                psimage = Label(edit_window_img,image=image)
                psimage.photo = image
                psimage.pack()
            
            def inv_UploadAction(event=None):
              global filenamez

              filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
              shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
              attach_list.insert(0, filenamez.split('/')[-1])


            def inv_deletefile():
              inv_remove=attach_list.curselection()
              yawn=attach_list.get(inv_remove) 
              print(yawn)       
              attach_list.delete(ACTIVE)

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", padding=5)
            email_Notebook = ttk.Notebook(send_precp)
            email_Frame = Frame(email_Notebook, height=500, width=1080)
            account_Frame = Frame(email_Notebook, height=550, width=1080)
            email_Notebook.add(email_Frame, text="E-mail")
            email_Notebook.add(account_Frame, text="Account")
            email_Notebook.place(x=0, y=0)
            messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
            messagelbframe.place(x=5, y=5)
            global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
            email_to = StringVar()
            email_subject = StringVar()
            email_from = StringVar()
            email_passw = StringVar()
            email_carbon = StringVar()
            email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
            email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
            email_to_addr_entry.place(x=120, y=5)
            email_addr = inv_email_e5.get()
            email_to_addr_entry.delete(0,END)
            email_to_addr_entry.insert(0,email_addr)
            send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail)
            send_email_btn.place(x=600, y=10)
            carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
            carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
            carbon_entry.place(x=120, y=32)
            subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
            subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
            subject_entry.place(x=120, y=59)
            subject = inv_number_entry.get()
            subject_entry.delete(0,END)
            subject_entry.insert(0,"Payment reciept for Invoice" + " " + "(" + subject + ")")

            style = ttk.Style()
            style.theme_use('default')
            style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
            mess_Notebook = ttk.Notebook(messagelbframe)
            emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
            htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
            mess_Notebook.add(emailmessage_Frame, text="E-mail message")
            mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
            mess_Notebook.place(x=5, y=90)

            email_ltr_scroll= scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True,exportselection=False)
            email_ltr_scroll.config(inactiveselectbackground=email_ltr_scroll.cget("selectbackground"))
            email_ltr_scroll.place(x=0, y=28)
            pay_name = inv_combo_e1.get()
            email_ltr_scroll.delete("1.0",END)
            email_ltr_scroll.insert("1.0","\n\n  Dear" + " " + pay_name + "," + "\n\n  This message is to inform you that your payment of" + " " + str(pay_amnt) + " " + "for Invoice#" + " " + pay_inv_number + " " + "\n  has been received \n\n  Payment ID: RCPT" + "" + str(pay_data[0]) + "" + "\n  Invoice ID: " + "" + pay_inv_number + "" + "\n  Payment Date: " + "" + str(pay_date) + "" + "\n  Amount: " + "" + str(pay_amnt) + "" + "\n  Paid by: " + "" + pay_by + "" + "\n  Description: " + "" + pay_desc + "" + "\n\n  Thank you for your business.\n  Your Company Name")

            sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
            sel_all_btn.place(x=0, y=1)  
            cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
            cut_btn.place(x=36, y=1)
            copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
            copy_btn.place(x=73, y=1)
            paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
            paste_btn.place(x=105, y=1)
            undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
            undo_btn.place(x=140, y=1)
            redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
            redo_btn.place(x=175, y=1)

            def bold_text():
              bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
              bold_font.configure(weight="bold")

              email_ltr_scroll.tag_configure("bold", font=bold_font)

              current_tags = email_ltr_scroll.tag_names("sel.first")

              if "bold" in current_tags:
                email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
              else:
                email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
            bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
            bold_btn.place(x=210, y=1)

            def italic_text():
              italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
              italic_font.configure(slant="italic")

              email_ltr_scroll.tag_configure("italic", font=italic_font)

              current_tags = email_ltr_scroll.tag_names("sel.first")

              if "italic" in current_tags:
                email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
              else:
                email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
            italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
            italic_btn.place(x=245, y=1)

            def underline_text():
              try:
                if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
                    email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
                else:
                    email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
                    email_ltr_scroll.tag_configure('underline_selection', underline=True)
              except TclError:
                  pass
            underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
            underline_btn.place(x=280, y=1)

            def align_left():
              data = email_ltr_scroll.get(0.0,END)
              email_ltr_scroll.tag_config('left',justify=LEFT)
              email_ltr_scroll.delete(0.0,END)
              email_ltr_scroll.insert(INSERT,data,'left')
            align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
            align_lbtn.place(x=315, y=1)

            def align_right():
              data = email_ltr_scroll.get(0.0,END)
              email_ltr_scroll.tag_config('right',justify=RIGHT)
              email_ltr_scroll.delete(0.0,END)
              email_ltr_scroll.insert(INSERT,data,'right')
            align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
            align_rbtn.place(x=350, y=1)

            def align_center():
              data = email_ltr_scroll.get(0.0,END)
              email_ltr_scroll.tag_config('center',justify=CENTER)
              email_ltr_scroll.delete(0.0,END)
              email_ltr_scroll.insert(INSERT,data,'center')
            align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
            align_cbtn.place(x=385, y=1)
            hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
            hyper_btn.place(x=420, y=1)
            remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
            remove_btn.place(x=455, y=1)

            def color_text():
              color = colorchooser.askcolor()[1]
              if color:
                color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

                email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

                current_tags = email_ltr_scroll.tag_names("sel.first")

                if "colored" in current_tags:
                  email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
                else:
                  email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
            color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
            color_btn.place(x=490,y=1)

            def fontsize_chooser(event):
              font_size = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
              font_size.configure(size=int(fontsize_combo.get())*7)

              email_ltr_scroll.tag_configure("size", font=font_size)
              current_tags = email_ltr_scroll.tag_names("sel.first")

              email_ltr_scroll.tag_add("size", "sel.first", "sel.last")

            
            fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=10)
            fontsize_combo.place(x=600, y=5)
            fontsize_combo['values'] = ("1","2","3","4","5","6","7")
            fontsize_combo.current(0)
            fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
            btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
            btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
            btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
            btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
            email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
            email_html_scroll.place(x=0, y=28)
            attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
            attachlbframe.place(x=740, y=5)
            lstfrm = StringVar()
            attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
            attach_list.place(x=5, y=5)
            attach_list.bind('<Double-Button-1>',inv_empsfile_image)
            lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
            btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction)
            btn17.place(x=60, y=260)
            btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile)
            btn18.place(x=60, y=295)
            lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
            lbl_tt_info.place(x=740, y=370)

            ready_frame=Frame(send_precp, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
            
            sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
            sendatalbframe.place(x=5, y=5)
            your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
            your_cemail_entry = Entry(sendatalbframe, width=40)
            your_cemail_entry.place(x=195, y=30)

            your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
            your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
            your_cpass_entry.place(x=195, y=60)
          else:
            pass

      def cancel_newline_pay():
        newpay_inv.destroy()

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", padding=5)
      mark_Notebook = ttk.Notebook(newpay_inv)
      Mark_Invoice = Frame(mark_Notebook, height=470, width=750)
      mark_Notebook.add(Mark_Invoice, text="Mark Invoice")
      mark_Notebook.place(x=0, y=0)

      inv_bal_label=Label(Mark_Invoice, text="Invoice Balance").place(x=10, y=10)
      inv_bal_entry=Label(Mark_Invoice, width=25,fg="red",bg="white",text=bal,font=("Arial",10,"bold"))
      inv_bal_entry.place(x=130, y=10)
      labelframe5 = LabelFrame(Mark_Invoice,text="Payement Record Details",bg="#f5f3f2")
      labelframe5.place(x=10,y=60,width=670,height=250)
      inv_amnt_entry = Entry(labelframe5,width=28)
      inv_amnt_entry.place(x=30,y=45)
      inv_amnt_entry.delete(0, END)
      inv_amnt_entry.insert(0, bal)
      inv_pdate_label = Label(labelframe5, text="Payement Date:",bg="#f5f3f2").place(x=250,y=20)
      inv_pdate_entry = DateEntry(labelframe5,width=28)
      inv_pdate_entry.place(x=220,y=45)
      inv_pby_label = Label(labelframe5, text="Paid By:",bg="#f5f3f2").place(x=450,y=20)
      term_sql = "SELECT terms_of_payment FROM terms_of_payment"
      fbcursor.execute(term_sql,)
      term_data = fbcursor.fetchall()
      tdata = []
      for i in term_data:
        tdata.append(i[0])
      inv_pby_combo = ttk.Combobox(labelframe5, value=tdata)
      inv_pby_combo.place(x=450,y=45)
      inv_pby_combo.bind("<<ComboboxSelected>>")
      inv_des_label=Label(labelframe5, text="Description").place(x=30, y=80)
      inv_des_entry =Entry(labelframe5, width=100)
      inv_des_entry.place(x=30, y=120)
      checkvar=IntVar()
      inv_pfull_check = Checkbutton(labelframe5,text="Paid in full and close invoice",variable=checkvar,onvalue=1,offvalue=0,bg="#f5f3f2")
      inv_pfull_check.place(x=30 ,y=150)
      inv_precp_label = Label(labelframe5,text="Payement Reciepts",bg="#f5f3f2").place(x=300,y=145)
      checkvar1=IntVar()
      inv_send_precp = Checkbutton(labelframe5,text="Send Payement Reciept",variable=checkvar1,onvalue=1,offvalue=0,bg="#f5f3f2")
      inv_send_precp.place(x=320 ,y=170)
      checkvar2=IntVar()
      inv_att_upinv = Checkbutton(labelframe5,text="Attach updated invoice",variable=checkvar2,onvalue=1,offvalue=0,bg="#f5f3f2")
      inv_att_upinv.place(x=320 ,y=200)

      inv_pok_btn =Button(Mark_Invoice,compound = LEFT,image=tick , text="Save payement", width=100,command=add_newline_pay)
      inv_pok_btn.place(x=10, y=350)
      inv_pcan_btn =Button(Mark_Invoice,compound = LEFT,image=cancel, text="Cancel", width=100,command=cancel_newline_pay)
      inv_pcan_btn.place(x=500, y=350)
        


    #mark invoice
    def markinvo():
      invoice_number = inv_number_entry.get()
      pay_sel_sql = "SELECT * FROM payments WHERE invoice_number=%s"
      pay_sel_val = (invoice_number,)
      fbcursor.execute(pay_sel_sql,pay_sel_val)
      pay_sel_data = fbcursor.fetchall()
      if pay_sel_data:
        pay_list = []
        for p in pay_sel_data:
          pay_list.append(p)
        pd = pay_list[-1]
      else:
        pd = 0
      check_newline = add_newline_tree.get_children()

      def markas_paid():
        draft_label.config(text="Paid")
        invodate = inv_date_entry.get_date()
        if checkvarStatus5.get() == 0:
          duedate = NULL
        else:
          duedate = inv_duedate_entry.get_date()
        term_of_payment = inv_terms_combo.get()
        ref = inv_ref_entry.get()
        status = draft_label.cget("text")
        emailon = never1_label.cget("text")
        printon = never2_label.cget("text")
        # smson = 
        subtotal = sub1.cget("text")
        invoicetot = invoicetot1.cget("text")
        totpaid = total1.cget("text")
        balance = balance1.cget("text")
        extracostname = ex_costn_combo.get()
        extracost = cost1.cget("text")
        template = template_entry.get()
        salesper = sales_per_entry.get()
        discourate = dis_rate_entry.get()
        discount = discount1.cget("text")
        tax1 = tax_1.cget("text")
        category = category_entry.get()
        businessname = inv_combo_e1.get()
        businessaddress = inv_addr_e2.get("1.0",END)
        shipname = inv_shipto_e3.get()
        shipaddress = inv_addr_e4.get("1.0",END)
        cpemail = inv_email_e5.get()
        cpmobileforsms = inv_sms_e6.get()
        if checkrecStatus.get() == 0 :
          next_invoice = NULL
          stop_recurring = NULL
          recurring_period = NULL
          recurring_period_month = NULL
          recurring_check = checkrecStatus.get()
        else:
          next_invoice = recur_nxt_inv_date.get_date()
          stop_recurring = recur_stop_date.get_date()
          recurring_period = recur_period_entry.get()
          recurring_period_month = recur_month_combo.get()
          recurring_check = checkrecStatus.get()
        title_text = title_txt_combo.get()
        header_text = pageh_txt_combo.get()
        footer_text = footer_txt_combo.get()
        tax2 = tax_2.cget("text")
        comments = comment_txt.get("1.0",END)
        privatenotes = private_note_txt.get("1.0",END)
        terms = term_txt.get("1.0",END)
        paid_n_closed = 1
        doc_get = doc_tree.get_children()
        quantity = sel_pro_str[18]
        comp_sql = "SELECT * FROM company"
        fbcursor.execute(comp_sql,)
        comp_data = fbcursor.fetchone()
        for record in add_newline_tree.get_children():
          storingproduct = add_newline_tree.item(record)["values"]
          if not comp_data:
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data[12] == "1":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data[12] == "2":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data[12] == "3":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()


        for files in doc_get:
          file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
          file_val = (invoice_number,files)
          fbcursor.execute(file_sql,file_val)
          fbilldb.commit()

        
        inv_sql='INSERT INTO Invoice (invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,paid_n_closed) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)' #adding values into db
        inv_val=(invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,paid_n_closed,)
        fbcursor.execute(inv_sql,inv_val)
        fbilldb.commit()

        select_customer_btn["state"] = DISABLED
        add_newline_btn['state'] = DISABLED
        del_line_item_btn['state'] = DISABLED
        mark_inv_paid['state'] = DISABLED
        save_invoice["state"] = DISABLED
        inv_combo_e1['state'] = DISABLED
        inv_addr_e2['state'] = DISABLED
        inv_shipto_e3['state'] = DISABLED
        inv_addr_e4['state'] = DISABLED
        inv_email_e5['state'] = DISABLED
        inv_sms_e6['state'] = DISABLED
        inv_number_entry['state'] = DISABLED
        inv_date_entry['state'] = DISABLED
        inv_duedate_check['state'] = DISABLED
        inv_duedate_entry['state'] = DISABLED
        inv_terms_combo['state'] = DISABLED
        inv_ref_entry['state'] = DISABLED
        ex_costn_combo['state'] = DISABLED
        dis_rate_entry['state'] = DISABLED
        ex_cost_entry['state'] = DISABLED
        if comp_data[12] == "1":
          pass
        elif comp_data[12] == "2":
          tax1_entry['state'] = DISABLED
        elif comp_data[12] == "3":
          tax1_entry['state'] = DISABLED
          tax2_entry['state'] = DISABLED
        template_entry['state'] = DISABLED
        recur_check_btn['state'] = DISABLED
        recur_period_entry['state'] = DISABLED
        recur_month_combo['state'] = DISABLED
        recur_nxt_inv_date['state'] = DISABLED
        recur_stop_check['state'] = DISABLED
        recur_stop_date['state'] = DISABLED
        recur_recalc['state'] = DISABLED
        pay_plus['state'] = DISABLED
        pay_minus['state'] = DISABLED
        title_txt_combo['state'] = DISABLED
        pageh_txt_combo['state'] = DISABLED
        footer_txt_combo['state'] = DISABLED
        term_txt['state'] = DISABLED
        comment_txt['state'] = DISABLED
        doc_plus_btn['state'] = DISABLED
        doc_minus_btn['state'] = DISABLED
        btn_linedown['state'] = DISABLED
        btn_lineup['state'] = DISABLED
        inv_as_paid.destroy()
      if inv_combo_e1.get() == '':
        messagebox.showwarning("F-Billing Revolution","Customer required, please select customer first.")
      elif len(check_newline) == 0:
        messagebox.showwarning("F-Billing Revolution","This invoice has no line items. \nPlease add line item(s) first.")
      elif pd != 0 and pd[6] == 1:
        global inv_as_paid
        inv_as_paid =Toplevel()
        inv_as_paid.geometry("350x200+450+200")
        inv_as_paid.title("Record Payement")
        inv_as_paid.configure(bg="white")
        
        what_label = Label(inv_as_paid,text="What would like to do?",bg="white",fg="#1a3365",font=("sans-serif",12)).place(x=50,y=10)
        fully_label = Label(inv_as_paid,text="This invoice looks like fully paid.",bg="white").place(x=50,y=40)
        qstn_label = Label(inv_as_paid,image=question,borderwidth=0,bg="white").place(x=10,y=10)
        mark_as_paid_btn = Button(inv_as_paid,text='🡢 Marked as "Paid" and close invoice',fg="#0077b3",bg="white",border=0,font=("sans-serif",12),command=markas_paid)
        mark_as_paid_btn.place(x=50,y=80)
        rec_new_btn = Button(inv_as_paid,text='🡢 Record new payment',fg="#0077b3",bg="white",border=0,font=("sans-serif",12),command=record_newpay)
        rec_new_btn.place(x=50,y=120)
        cancel_as_paid = Button(inv_as_paid,text="Cancel",bg="white",borderwidth=1,width=8,command=lambda:inv_as_paid.destroy())
        cancel_as_paid.place(x=270,y=168)
      else:
        mark_inv=Toplevel()
        mark_inv.geometry("700x480+240+150")
        mark_inv.title("Record Payement for Invoice") 

        global get_pay_data,discount_rate,total_cost,dis_rate,exc,tax1_rate

        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          for i in add_newline_tree.get_children():
            price += float(add_newline_tree.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1.config(text=sub_tot)
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4])
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          tx1 = float(tax1_entry.get())
          for i in add_newline_tree.get_children():
            if add_newline_tree.item(i,'values')[6] == "No":
              p += float(add_newline_tree.item(i,'values')[3])
            else:
              price += float(add_newline_tree.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc 
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1.config(text=sub_tot)
          tax_1.config(text=round(tax1_rate,2))
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4]) 
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry.get())
          tx2 = float(tax2_entry.get())
          exc = float(ex_cost_entry.get())
          dis_rate = float(dis_rate_entry.get())
          for i in add_newline_tree.get_children():
            if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree.item(i,'values')[3])
            elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree.item(i,'values')[3])
            elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree.item(i,'values')[3])
            else:
              price += float(add_newline_tree.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount.config(text= str(dis_rate) + "" +"% Discount")
          discount1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1.config(text=sub_tot)
          tax_1.config(text=round((tax1_rate + tax2_rate),2))
          tax_2.config(text=round((tax3_rate + tax4_rate),2))
          cost1.config(text=round(exc,2))
          invoicetot1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree.get_children():
            tot_paid += float(pay_tree.item(tp,'values')[4]) 
          total1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1.config(text=bal)         
   
        def add_newline_pay():
          if inv_pby_combo.get() == '':
            messagebox.showinfo("F-Billing Revolution 2022",'Please fill out "Paid by" field!')
          else:
            pay_amnt = inv_amnt_entry.get()
            pay_date = inv_pdate_entry.get_date()
            pay_by = inv_pby_combo.get()
            pay_desc = inv_des_entry.get()
            pay_inv_number = inv_number_entry.get()
            pay_full = checkvar.get()
            pay_recp = checkvar1.get()
            pay_att_up = checkvar2.get()
            pay_sql = "INSERT INTO payments(payment_date,paid_by,description,amount,invoice_number,paid_n_close,payment_reciept,updated_invoice) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            pay_val = (pay_date,pay_by,pay_desc,pay_amnt,pay_inv_number,pay_full,pay_recp,pay_att_up,)
            fbcursor.execute(pay_sql,pay_val)
            fbilldb.commit()

            pay_get_sql = "SELECT * FROM payments ORDER BY payment_id DESC LIMIT 1"
            fbcursor.execute(pay_get_sql)
            pay_data = fbcursor.fetchone()
            pay_tree.insert(parent='',index='end',iid=pay_data[0],text='',values=(pay_data[0],pay_data[1],pay_data[2],pay_data[3],pay_data[4]))

            tot_paid = 0.0
            for tp in pay_tree.get_children():
              tot_paid += float(pay_tree.item(tp,'values')[4]) 
            total1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1.config(text=bal)
            mark_inv.destroy()


            def inv_send_mail(file=None):
              # sender_mail = your_cemail_entry.get()
              sender_mail = "infoxfbilling77@gmail.com"
              # sender_password = your_cpass_entry.get()
              sender_password = "dinkiurlziohgfok"

              server = smtplib.SMTP('smtp.gmail.com', 587)
              print("login successfull")
              server.starttls()
              print("login successfull2")
              server.login(sender_mail,sender_password)
              print("login successfull3")

              carbon_info = email_carbon.get()
              msg = MIMEMultipart()
              msg['Subject'] = email_subject.get()
              mail_content = email_ltr_scroll.get("1.0",'end-1c')
              msg['From'] = email_from.get()
              msg['To'] = email_to.get()

              gettingimg = lstfrm.get()
              lst_data = gettingimg[1:-1].split(',')
              
              msg.attach(MIMEText(mail_content, 'plain'))
              
              for i in lst_data:
                if len(i.strip()[1:-1])>1:
                  with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                      # MIME attachment is a binary file for that content type "application/octet-stream" is used
                    part = MIMEBase("application", "octet-stream")
                    part.set_payload(attachment.read())
                  # encode into base64 
                    encoders.encode_base64(part) 
              
                    part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

                  # attach the instance 'part' to instance 'message' 
                    msg.attach(part)
                # message_body = email_body.get()

              server.sendmail(email_from.get(),email_to.get(),msg.as_string())
              server.sendmail(email_from.get(), carbon_info,msg.as_string())

              date = dt.datetime.now().date()
              never1_label.config(text=date)
              # inv_number = inv_tree.item(inv_tree.focus())["values"][1]
              # for record in inv_tree.get_children():
              #   inv_tree.delete(record)
              # sqlq = "UPDATE invoice SET emailed_on=%s WHERE invoice_number = %s"
              # valq = (date,inv_number,)
              # fbcursor.execute(sqlq, valq,)
              # fbilldb.commit()
              
              # fbcursor.execute('SELECT * FROM invoice')
              # ordertotalinput=0
              # j = 0
              # for i in fbcursor:
              #   inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[20], i[6], i[7], i[8], i[9], i[10], i[11], i[12]))
              #   for line in inv_tree.get_children():
              #     idsave1=inv_tree.item(line)['values'][9]
              #   ordertotalinput += idsave1
              # j += 1
              # invtot_rowcol.config(text=ordertotalinput)

              print("message sent")



            if checkvar1.get() == 1:
              send_precp = Toplevel()
              p2 = PhotoImage(file = "images/fbicon.png")
              send_precp.iconphoto(False, p2)
              send_precp.geometry("1030x490+150+120")
              send_precp.title("Payment reciept E-mail")

              # def my_SMTP():
              #     if True:
              #         em_ser_conbtn.destroy()
              #         mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
              #         mysmtpservercon.place(x=610, y=110)
              #         lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
              #         hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
              #         lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
              #         portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
              #         lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
              #         unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
              #         lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
              #         pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
              #         ssl_chkvar=IntVar()
              #         ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
              #         ssl_chkbtn.place(x=50, y=110)
              #         em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
              #     else:
              #         pass


              def inv_empsfile_image(event):
                global yawn
                for i in  attach_list.curselection():
                  print("hloo", attach_list.get(i))
                  yawn= attach_list.get(i)        
                  edit_window_img = Toplevel()
                  edit_window_img.title("View Image")
                  edit_window_img.geometry("700x500")
                  image = Image.open("images/"+yawn)
                  resize_image = image.resize((700, 500))
                  image = ImageTk.PhotoImage(resize_image)
                  psimage = Label(edit_window_img,image=image)
                  psimage.photo = image
                  psimage.pack()
              
              def inv_UploadAction(event=None):
                global filenamez

                filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
                shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
                attach_list.insert(0, filenamez.split('/')[-1])


              def inv_deletefile():
                inv_remove=attach_list.curselection()
                yawn=attach_list.get(inv_remove) 
                print(yawn)       
                attach_list.delete(ACTIVE)

              style = ttk.Style()
              style.theme_use('default')
              style.configure('TNotebook.Tab', background="#999999", padding=5)
              email_Notebook = ttk.Notebook(send_precp)
              email_Frame = Frame(email_Notebook, height=500, width=1080)
              account_Frame = Frame(email_Notebook, height=550, width=1080)
              email_Notebook.add(email_Frame, text="E-mail")
              email_Notebook.add(account_Frame, text="Account")
              email_Notebook.place(x=0, y=0)
              messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
              messagelbframe.place(x=5, y=5)
              global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
              email_to = StringVar()
              email_subject = StringVar()
              email_from = StringVar()
              email_passw = StringVar()
              email_carbon = StringVar()
              email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
              email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
              email_to_addr_entry.place(x=120, y=5)
              email_addr = inv_email_e5.get()
              email_to_addr_entry.delete(0,END)
              email_to_addr_entry.insert(0,email_addr)
              send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail)
              send_email_btn.place(x=600, y=10)
              carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
              carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
              carbon_entry.place(x=120, y=32)
              subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
              subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
              subject_entry.place(x=120, y=59)
              subject = inv_number_entry.get()
              subject_entry.delete(0,END)
              subject_entry.insert(0,"Payment reciept for Invoice" + " " + "(" + subject + ")")

              style = ttk.Style()
              style.theme_use('default')
              style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
              mess_Notebook = ttk.Notebook(messagelbframe)
              emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
              htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
              mess_Notebook.add(emailmessage_Frame, text="E-mail message")
              mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
              mess_Notebook.place(x=5, y=90)

              email_ltr_scroll=scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True,exportselection=False)
              email_ltr_scroll.config(inactiveselectbackground=email_ltr_scroll.cget("selectbackground"))
              email_ltr_scroll.place(x=0, y=28)
              pay_name = inv_combo_e1.get()
              email_ltr_scroll.delete("1.0",END)
              email_ltr_scroll.insert("1.0","\n\n  Dear" + " " + pay_name + "," + "\n\n  This message is to inform you that your payment of" + " " + str(pay_amnt) + " " + "for Invoice#" + " " + pay_inv_number + " " + "\n  has been received \n\n  Payment ID: RCPT" + "" + str(pay_data[0]) + "" + "\n  Invoice ID: " + "" + pay_inv_number + "" + "\n  Payment Date: " + "" + str(pay_date) + "" + "\n  Amount: " + "" + str(pay_amnt) + "" + "\n  Paid by: " + "" + pay_by + "" + "\n  Description: " + "" + pay_desc + "" + "\n\n  Thank you for your business.\n  Your Company Name")

              sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
              sel_all_btn.place(x=0, y=1)  
              cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
              cut_btn.place(x=36, y=1)
              copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
              copy_btn.place(x=73, y=1)
              paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
              paste_btn.place(x=105, y=1)
              undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
              undo_btn.place(x=140, y=1)
              redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
              redo_btn.place(x=175, y=1)

              def bold_text():
                bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                bold_font.configure(weight="bold")

                email_ltr_scroll.tag_configure("bold", font=bold_font)

                current_tags = email_ltr_scroll.tag_names("sel.first")

                if "bold" in current_tags:
                  email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
                else:
                  email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
              bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
              bold_btn.place(x=210, y=1)

              def italic_text():
                italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                italic_font.configure(slant="italic")

                email_ltr_scroll.tag_configure("italic", font=italic_font)

                current_tags = email_ltr_scroll.tag_names("sel.first")

                if "italic" in current_tags:
                  email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
                else:
                  email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
              italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
              italic_btn.place(x=245, y=1)

              def underline_text():
                try:
                  if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
                      email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
                  else:
                      email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
                      email_ltr_scroll.tag_configure('underline_selection', underline=True)
                except TclError:
                    pass
              underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
              underline_btn.place(x=280, y=1)

              def align_left():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('left',justify=LEFT)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'left')
              align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
              align_lbtn.place(x=315, y=1)

              def align_right():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('right',justify=RIGHT)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'right')
              align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
              align_rbtn.place(x=350, y=1)

              def align_center():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('center',justify=CENTER)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'center')
              align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
              align_cbtn.place(x=385, y=1)
              hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
              hyper_btn.place(x=420, y=1)
              remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
              remove_btn.place(x=455, y=1)

              def color_text():
                color = colorchooser.askcolor()[1]
                if color:
                  color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

                  email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

                  current_tags = email_ltr_scroll.tag_names("sel.first")

                  if "colored" in current_tags:
                    email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
                  else:
                    email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
              color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
              color_btn.place(x=490,y=1)

              def fontsize_chooser(event):
                font_size = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                font_size.configure(size=int(fontsize_combo.get())*7)

                email_ltr_scroll.tag_configure("size", font=font_size)
                current_tags = email_ltr_scroll.tag_names("sel.first")

                email_ltr_scroll.tag_add("size", "sel.first", "sel.last")

              
              fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=10)
              fontsize_combo.place(x=600, y=5)
              fontsize_combo['values'] = ("1","2","3","4","5","6","7")
              fontsize_combo.current(0)
              fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
              btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
              btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
              btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
              btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
              email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
              email_html_scroll.place(x=0, y=28)
              attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
              attachlbframe.place(x=740, y=5)
              lstfrm = StringVar()
              attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
              attach_list.place(x=5, y=5)
              attach_list.bind('<Double-Button-1>',inv_empsfile_image)
              lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
              btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction)
              btn17.place(x=60, y=260)
              btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile)
              btn18.place(x=60, y=295)
              lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
              lbl_tt_info.place(x=740, y=370)

              ready_frame=Frame(send_precp, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
              
              sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
              sendatalbframe.place(x=5, y=5)
              your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
              your_cemail_entry = Entry(sendatalbframe, width=40)
              your_cemail_entry.place(x=195, y=30)

              your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
              your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
              your_cpass_entry.place(x=195, y=60)
              # company_name = inv_combo_e1.get()
              # your_cpass_entry.delete(0,END)
              # your_cpass_entry.insert(0,company_name)
              # replay_email_label = Label(sendatalbframe, text="Reply to email address").place(x=5, y=90)
              # replay_email_entry = Entry(sendatalbframe, width=40)
              # replay_email_entry.place(x=195, y=90)
              # replay_email_entry.delete(0,END)
              # replay_email_entry.insert(0,email_addr)
              # lbl_sign=Label(sendatalbframe, text="Signature").place(x=5, y=120)
              # signent=Entry(sendatalbframe,width=50).place(x=100, y=120,height=75)
              # confirm_chkvar=IntVar()
              # confirm_chkbtn=Checkbutton(sendatalbframe, variable=confirm_chkvar, text="Confirmation reading", onvalue=1, offvalue=0)
              # confirm_chkbtn.place(x=200, y=215)
              # btn18=Button(account_Frame, width=15, text="Save settings").place(x=25, y=285)

              # sendatalbframe=LabelFrame(account_Frame,text="SMTP Server",height=100, width=380)
              # sendatalbframe.place(x=610, y=5)
              # servar=IntVar()
              # SMTP_rbtn=Radiobutton(sendatalbframe, text="Use the Built-In SMTP Server Settings", variable=servar, value=1)
              # SMTP_rbtn.place(x=10, y=10)
              # MySMTP_rbtn=Radiobutton(sendatalbframe, text="Use My Own SMTP Server Settings(Recommended)", variable=servar, value=2, command=my_SMTP)
              # MySMTP_rbtn.place(x=10, y=40)
              # em_ser_conbtn=Button(account_Frame, text="Test E-mail Server Connection")
              # em_ser_conbtn.place(x=710, y=110)
            else:
              pass

        def cancel_newline_pay():
          mark_inv.destroy()



        style = ttk.Style()
        style.theme_use('default')
        style.configure('TNotebook.Tab', background="#999999", padding=5)
        mark_Notebook = ttk.Notebook(mark_inv)
        Mark_Invoice = Frame(mark_Notebook, height=470, width=750)
        mark_Notebook.add(Mark_Invoice, text="Mark Invoice")
        mark_Notebook.place(x=0, y=0)

        inv_bal_label=Label(Mark_Invoice, text="Invoice Balance").place(x=10, y=10)
        inv_bal_entry=Label(Mark_Invoice, width=25,fg="red",bg="white",text=bal,font=("Arial",10,"bold"))
        inv_bal_entry.place(x=130, y=10)
        labelframe5 = LabelFrame(Mark_Invoice,text="Payement Record Details",bg="#f5f3f2")
        labelframe5.place(x=10,y=60,width=670,height=250)
        inv_amnt_entry = Entry(labelframe5,width=28)
        inv_amnt_entry.place(x=30,y=45)
        inv_amnt_entry.delete(0, END)
        inv_amnt_entry.insert(0, bal)
        inv_pdate_label = Label(labelframe5, text="Payement Date:",bg="#f5f3f2").place(x=250,y=20)
        inv_pdate_entry = DateEntry(labelframe5,width=28)
        inv_pdate_entry.place(x=220,y=45)
        inv_pby_label = Label(labelframe5, text="Paid By:",bg="#f5f3f2").place(x=450,y=20)
        term_sql = "SELECT terms_of_payment FROM terms_of_payment"
        fbcursor.execute(term_sql,)
        term_data = fbcursor.fetchall()
        tdata = []
        for i in term_data:
          tdata.append(i[0])
        inv_pby_combo = ttk.Combobox(labelframe5, value=tdata)
        inv_pby_combo.place(x=450,y=45)
        inv_pby_combo.bind("<<ComboboxSelected>>")
        inv_des_label=Label(labelframe5, text="Description").place(x=30, y=80)
        inv_des_entry =Entry(labelframe5, width=100)
        inv_des_entry.place(x=30, y=120)
        checkvar=IntVar()
        inv_pfull_check = Checkbutton(labelframe5,text="Paid in full and close invoice",variable=checkvar,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_pfull_check.place(x=30 ,y=150)
        inv_precp_label = Label(labelframe5,text="Payement Reciepts",bg="#f5f3f2").place(x=300,y=145)
        checkvar1=IntVar()
        inv_send_precp = Checkbutton(labelframe5,text="Send Payement Reciept",variable=checkvar1,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_send_precp.place(x=320 ,y=170)
        checkvar2=IntVar()
        inv_att_upinv = Checkbutton(labelframe5,text="Attach updated invoice",variable=checkvar2,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_att_upinv.place(x=320 ,y=200)

        inv_pok_btn =Button(Mark_Invoice,compound = LEFT,image=tick , text="Save payement", width=100,command=add_newline_pay)
        inv_pok_btn.place(x=10, y=350)
        inv_pcan_btn =Button(Mark_Invoice,compound = LEFT,image=cancel, text="Cancel", width=100,command=cancel_newline_pay)
        inv_pcan_btn.place(x=500, y=350)
    
    ################## delete newline payment ###################
    def delete_newline_pay():
      selected_pay_item = pay_tree.selection()[0]
      pay_tree.delete(selected_pay_item)
      del_pay_sql = "DELETE FROM payments WHERE payment_id=%s"
      del_pay_val = (selected_pay_item,)
      fbcursor.execute(del_pay_sql,del_pay_val)
      fbilldb.commit()
      tot_paid = 0.0
      for tp in pay_tree.get_children():
        tot_paid += float(pay_tree.item(tp,'values')[4]) 
      total1.config(text=round(tot_paid,2))
      bal = round((total_cost - tot_paid),2)
      balance1.config(text=bal)

      
    #voidinvoice
    def voidinvoice():
      void_msg = messagebox.askyesno("F-Billing Revolution","Are you sure to avoid this invoice?\nAll products will be placed back into stock and all payemnts will be voided.")
      if void_msg == YES:
        draft_label.config(text="Void")
        if draft_label['text'] == "Void":
          invoice_number = inv_number_entry.get()
          invodate = inv_date_entry.get_date()
          if checkvarStatus5.get() == 0:
            duedate = NULL
          else:
            duedate = inv_duedate_entry.get_date()
          term_of_payment = inv_terms_combo.get()
          ref = inv_ref_entry.get()
          status = draft_label.cget("text")
          emailon = never1_label.cget("text")
          printon = never2_label.cget("text")
          # smson = 
          subtotal = 0
          invoicetot = 0
          totpaid = 0
          balance = 0
          extracostname = ex_costn_combo.get()
          extracost = cost1.cget("text")
          template = template_entry.get()
          salesper = sales_per_entry.get()
          discourate = dis_rate_entry.get()
          discount = discount1.cget("text")
          tax1 = tax_1.cget("text")
          category = category_entry.get()
          businessname = inv_combo_e1.get()
          businessaddress = inv_addr_e2.get("1.0",END)
          shipname = inv_shipto_e3.get()
          shipaddress = inv_addr_e4.get("1.0",END)
          cpemail = inv_email_e5.get()
          cpmobileforsms = inv_sms_e6.get()
          if checkrecStatus.get() == 0 :
            next_invoice = NULL
            stop_recurring = NULL
            recurring_period = NULL
            recurring_period_month = NULL
            recurring_check = checkrecStatus.get()
          else:
            next_invoice = recur_nxt_inv_date.get_date()
            stop_recurring = recur_stop_date.get_date()
            recurring_period = recur_period_entry.get()
            recurring_period_month = recur_month_combo.get()
            recurring_check = checkrecStatus.get()
          title_text = title_txt_combo.get()
          header_text = pageh_txt_combo.get()
          footer_text = footer_txt_combo.get()
          tax2 = tax_2.cget("text")
          comments = comment_txt.get("1.0",END)
          privatenotes = private_note_txt.get("1.0",END)
          terms = term_txt.get("1.0",END)
          doc_get = doc_tree.get_children()
          for qn in add_newline_tree.get_children():
            quantity = add_newline_tree.item(qn)["values"][4]

          paidinv_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
          paidinv_val = (invoice_number,)
          fbcursor.execute(paidinv_sql,paidinv_val)
          paidinv_data = fbcursor.fetchone()         

          if not paidinv_data:
            paid_n_closed = 0

            for record in add_newline_tree.get_children():
              storingproduct = add_newline_tree.item(record)["values"]
              if not comp_data:
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "1":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "2":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "3":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()

            for files in doc_get:
              file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
              file_val = (invoice_number,files)
              fbcursor.execute(file_sql,file_val)
              fbilldb.commit()

            inv_sql='INSERT INTO Invoice (invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,paid_n_closed) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)' #adding values into db
            inv_val=(invoice_number,invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,paid_n_closed,)
            fbcursor.execute(inv_sql,inv_val)
            fbilldb.commit()
          elif paidinv_data[48] == 1:
            status = draft_label.cget("text")

            inv_sql = "UPDATE invoice SET status=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s WHERE invoice_number=%s"
            inv_val = (status,subtotal,invoicetot,totpaid,balance,paidinv_data[1],)
            fbcursor.execute(inv_sql,inv_val)
            fbilldb.commit()
          else:
            del_storp_sql = "DELETE FROM storingproduct WHERE invoice_number=%s"
            del_storp_val = (invoice_number,)
            fbcursor.execute(del_storp_sql,del_storp_val)
            fbilldb.commit()

            for record in add_newline_tree.get_children():
              storingproduct = add_newline_tree.item(record)["values"]
              if not comp_data:
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "1":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "2":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()
              elif comp_data[12] == "3":
                storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                storepro_val = (invoice_number,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
                fbcursor.execute(storepro_sql,storepro_val)
                fbilldb.commit()

            del_file_sql = "DELETE FROM documents WHERE invoice_number=%s"
            del_file_val = (invoice_number,)
            fbcursor.execute(del_file_sql,del_file_val)
            fbilldb.commit()
            for files in doc_get:
              file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
              file_val = (invoice_number,files)
              fbcursor.execute(file_sql,file_val)
              fbilldb.commit()

            inv_sql='UPDATE invoice SET invodate=%s,duedate=%s,status=%s,emailon=%s,printon=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s,extracostname=%s,extracost=%s,template=%s,salesper=%s,discourate=%s,tax1=%s,category=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,cpemail=%s,cpmobileforsms=%s,recurring_period=%s,recurring_period_month=%s,next_invoice=%s,stop_recurring=%s,discount=%s,terms=%s,tax2=%s,quantity=%s,title_text=%s,header_text=%s,footer_text=%s,term_of_payment=%s,ref=%s,comments=%s,privatenotes=%s,recurring_check=%s WHERE invoice_number=%s' #adding values into db
            inv_val=(invodate,duedate,status,emailon,printon,subtotal,invoicetot,totpaid,balance,extracostname,extracost,template,salesper,discourate,tax1,category,businessname,businessaddress,shipname,shipaddress,cpemail,cpmobileforsms,recurring_period,recurring_period_month,next_invoice,stop_recurring,discount,terms,tax2,quantity,title_text,header_text,footer_text,term_of_payment,ref,comments,privatenotes,recurring_check,invoice_number,)
            fbcursor.execute(inv_sql,inv_val)
            fbilldb.commit()
        else:
          pass


        select_customer_btn['state'] = DISABLED
        add_newline_btn['state'] = DISABLED
        del_line_item_btn['state'] = DISABLED
        mark_inv_paid['state'] = DISABLED
        void_invoice['state'] = DISABLED
        save_invoice['state'] = DISABLED
        inv_combo_e1['state'] = DISABLED
        inv_addr_e2['state'] = DISABLED
        inv_shipto_e3['state'] = DISABLED
        inv_addr_e4['state'] = DISABLED
        inv_email_e5['state'] = DISABLED
        inv_sms_e6['state'] = DISABLED
        inv_number_entry['state'] = DISABLED
        inv_date_entry['state'] = DISABLED
        inv_duedate_check['state'] = DISABLED
        inv_duedate_entry['state'] = DISABLED
        inv_terms_combo['state'] = DISABLED
        inv_ref_entry['state'] = DISABLED
        ex_costn_combo['state'] = DISABLED
        dis_rate_entry['state'] = DISABLED
        ex_cost_entry['state'] = DISABLED
        if comp_data[12] == "1":
          pass
        elif comp_data[12] == "2":
          tax1_entry['state'] = DISABLED
        elif comp_data[12] == "3":
          tax1_entry['state'] = DISABLED
          tax2_entry['state'] = DISABLED
        template_entry['state'] = DISABLED
        recur_check_btn['state'] = DISABLED
        recur_period_entry['state'] = DISABLED
        recur_month_combo['state'] = DISABLED
        recur_nxt_inv_date['state'] = DISABLED
        recur_stop_check['state'] = DISABLED
        recur_stop_date['state'] = DISABLED
        recur_recalc['state'] = DISABLED
        pay_plus['state'] = DISABLED
        pay_minus['state'] = DISABLED
        title_txt_combo['state'] = DISABLED
        pageh_txt_combo['state'] = DISABLED
        footer_txt_combo['state'] = DISABLED
        term_txt['state'] = DISABLED
        comment_txt['state'] = DISABLED
        doc_plus_btn['state'] = DISABLED
        doc_minus_btn['state'] = DISABLED
        btn_linedown['state'] = DISABLED
        btn_lineup['state'] = DISABLED

        def inv_reactivate():
          select_customer_btn['state'] = NORMAL
          add_newline_btn['state'] = NORMAL
          del_line_item_btn['state'] = NORMAL
          mark_inv_paid['state'] = NORMAL
          void_invoice['state'] = NORMAL
          save_invoice['state'] = NORMAL
          inv_combo_e1['state'] = NORMAL
          inv_addr_e2['state'] = NORMAL
          inv_shipto_e3['state'] = NORMAL
          inv_addr_e4['state'] = NORMAL
          inv_email_e5['state'] = NORMAL
          inv_sms_e6['state'] = NORMAL
          inv_number_entry['state'] = NORMAL
          inv_date_entry['state'] = NORMAL
          inv_duedate_check['state'] = NORMAL
          inv_duedate_entry['state'] = NORMAL
          inv_terms_combo['state'] = NORMAL
          inv_ref_entry['state'] = NORMAL
          ex_costn_combo['state'] = NORMAL
          dis_rate_entry['state'] = NORMAL
          ex_cost_entry['state'] = NORMAL
          if comp_data[12] == "1":
            pass
          elif comp_data[12] == "2":
            tax1_entry['state'] = NORMAL
          elif comp_data[12] == "3":
            tax1_entry['state'] = NORMAL
            tax2_entry['state'] = NORMAL
          template_entry['state'] = NORMAL
          recur_check_btn['state'] = NORMAL
          recur_period_entry['state'] = NORMAL
          recur_month_combo['state'] = NORMAL
          recur_nxt_inv_date['state'] = NORMAL
          recur_stop_check['state'] = NORMAL
          recur_stop_date['state'] = NORMAL
          recur_recalc['state'] = NORMAL
          pay_plus['state'] = NORMAL
          pay_minus['state'] = NORMAL
          title_txt_combo['state'] = NORMAL
          pageh_txt_combo['state'] = NORMAL
          footer_txt_combo['state'] = NORMAL
          term_txt['state'] = NORMAL
          comment_txt['state'] = NORMAL
          doc_plus_btn['state'] = NORMAL
          doc_minus_btn['state'] = NORMAL
          btn_linedown['state'] = DISABLED
          btn_lineup['state'] = DISABLED
          draft_label.config(text="Draft")
          if draft_label['text'] == "Draft":
            reactivate_invoice.destroy()
            status_sql = "UPDATE invoice SET status=%s WHERE invoice_number=%s"
            status_val = ("Draft",invoice_number)
            fbcursor.execute(status_sql,status_val)
            fbilldb.commit()
          else:
            pass

        
        reactivate_invoice = Button(inv_first_frame,compound="top", text="Reactivate",relief=RAISED, image=unlock,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_reactivate)
        reactivate_invoice.pack(side="left", pady=3, ipadx=4)
      else:
        pass

    
    #delete line item  
    def delete_line_item():
      selected_line_item = add_newline_tree.selection()[0]
      add_newline_tree.delete(selected_line_item)
      if comp_data[12] == "1":
        price = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          price += float(add_newline_tree.item(i,'values')[6])
        discount_rate = (price*dis_rate)/100
        total_cost += (price - discount_rate) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round((price - discount_rate),2)
        sub1.config(text=sub_tot)
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4])
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=price)
      elif comp_data[12] == "2":
        price = 0.0
        p = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        tx1 = float(tax1_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No":
            p += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[7])
        discount_rate = ((price + p) * dis_rate)/100
        dis_price = (price * dis_rate)/100
        dis_p = (p * dis_rate)/100
        tax1_rate = ((price - dis_price)*tx1)/100
        tx_calc = (price - dis_price) + tax1_rate
        tx_calc1 = p - dis_p
        total_cost += (tx_calc + tx_calc1) + exc 
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round(tax1_rate,2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=round((price + p),2))
      elif comp_data[12] == "3":
        price = 0.0
        p1 = 0.0
        p2 = 0.0
        p3 = 0.0
        total_cost = 0.0
        tx1 = float(tax1_entry.get())
        tx2 = float(tax2_entry.get())
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
            p1 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
            p2 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
            p3 += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[8])
        discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
        dis_p2 = (p2 * dis_rate)/100
        tax1_rate = ((p2 - dis_p2) * tx1)/100
        dis_price = (price * dis_rate)/100
        tax2_rate = ((price - dis_price) * tx1)/100
        tax3_rate = ((price - dis_price) * tx2)/100
        dis_p3= (p3 * dis_rate)/100
        tax4_rate = ((p3 - dis_p3) * tx2)/100
        dis_p4 = (p1 * dis_rate)/100
        tx_calc1 = (p2 - dis_p2) + tax1_rate
        tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
        tx_calc3 = (p3 - dis_p3) + tax4_rate
        tx_calc4 = (p1 - dis_p4)
        total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round((tax1_rate + tax2_rate),2))
        tax_2.config(text=round((tax3_rate + tax4_rate),2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=round((price + p1 + p2 + p3),2))


    ############## Email Invoice ###################

    def inv_send_mail(file=None):
      try:
        # sender_mail = your_cemail_entry.get()
        sender_mail = "infoxfbilling77@gmail.com"
        # sender_password = your_cpass_entry.get()
        sender_password = "dinkiurlziohgfok"

        server = smtplib.SMTP('smtp.gmail.com', 587)
        print("login successfull")
        server.starttls()
        print("login successfull2")
        server.login(sender_mail,sender_password)
        print("login successfull3")

        carbon_info = email_carbon.get()
        msg = MIMEMultipart()
        msg['Subject'] = email_subject.get()
        mail_content = email_ltr_scroll.get("1.0",'end-1c')
        msg['From'] = email_from.get()
        msg['To'] = email_to.get()

        gettingimg = lstfrm.get()
        lst_data = gettingimg[1:-1].split(',')
        
        msg.attach(MIMEText(mail_content, 'plain'))
        
        for i in lst_data:
          if len(i.strip()[1:-1])>1:
            if (i.strip()[1:-1]).lower().endswith(('.png','.jpg','.jpeg')):
              with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                  # MIME attachment is a binary file for that content type "application/octet-stream" is used
                part = MIMEBase("application", "octet-stream")
                part.set_payload(attachment.read())
              # encode into base64 
                encoders.encode_base64(part) 
          
                part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

              # attach the instance 'part' to instance 'message' 
                msg.attach(part)
            # message_body = email_body.get()
            else:
              with open('Invoice Documents/'+ inv_number_entry.get().split('/')[0]+".pdf", "rb") as attachment:
                pdf = MIMEBase("application", "octet-stream")
                pdf.set_payload(attachment.read())
                encoders.encode_base64(pdf) 
                pdf.add_header('Content-Disposition', "attachment; filename= %s" % 'Invoice Documents/'+ inv_number_entry.get().split('/')[0]+".pdf") 
                msg.attach(pdf)

        server.sendmail(email_from.get(),email_to.get(),msg.as_string())
        server.sendmail(email_from.get(), carbon_info,msg.as_string())

        date = dt.datetime.now().date()
        never1_label_1.config(text=date)
        print("message sent")
      except:
        pass


    #email
          
    def email_invoice():
      from reportlab.pdfgen import canvas
      invnumber = inv_number_entry.get().split('/')[0]
      pdf = canvas.Canvas("Invoice Documents/"+invnumber+".pdf", pagesize=letter)
      type_temp = template_entry.get()
      if type_temp == 'Professional 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,title_txt_combo.get())
        pdf.drawCentredString(302,475,pageh_txt_combo.get())
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,inv_number_entry.get())
        pdf.drawString(140,620,str(inv_date_entry.get_date()))
        pdf.drawString(140,605,str(inv_duedate_entry.get_date()))
        pdf.drawString(140,590,inv_terms_combo.get())
        pdf.drawString(140,575,inv_ref_entry.get())

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,inv_combo_e1.get())
        invto_addr = inv_addr_e2.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(invto_addr,40))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,inv_shipto_e3.get())
        shipto_addr = inv_addr_e4.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(shipto_addr,40))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")

        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in add_newline_tree.get_children():
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          if comp_data[12] == "1":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "2":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "3":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
      elif type_temp == 'Professional 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,title_txt_combo.get())
        pdf.drawCentredString(302,475,pageh_txt_combo.get())
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,inv_number_entry.get())
        pdf.drawString(450,620,str(inv_date_entry.get_date()))
        pdf.drawString(450,605,str(inv_duedate_entry.get_date()))
        pdf.drawString(450,590,inv_terms_combo.get())
        pdf.drawString(450,575,inv_ref_entry.get())

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,inv_combo_e1.get())
        invto_addr = inv_addr_e2.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,inv_shipto_e3.get())
        shipto_addr = inv_addr_e4.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")

        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in add_newline_tree.get_children():
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          if comp_data[12] == "1":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "2":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "3":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[0])
            pdf.drawString(132,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(355,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(130,v1,130,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
      elif type_temp == 'Simplified 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,title_txt_combo.get())
        pdf.drawCentredString(302,475,pageh_txt_combo.get())
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,inv_number_entry.get())
        pdf.drawString(140,620,str(inv_date_entry.get_date()))
        pdf.drawString(140,605,str(inv_duedate_entry.get_date()))
        pdf.drawString(140,590,inv_terms_combo.get())
        pdf.drawString(140,575,inv_ref_entry.get())

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,inv_combo_e1.get())
        invto_addr = inv_addr_e2.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,inv_shipto_e3.get())
        shipto_addr = inv_addr_e4.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in add_newline_tree.get_children():
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          if comp_data[12] == "1":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "2":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "3":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
      elif type_temp == 'Simplified 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,title_txt_combo.get())
        pdf.drawCentredString(302,475,pageh_txt_combo.get())
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,inv_number_entry.get())
        pdf.drawString(450,620,str(inv_date_entry.get_date()))
        pdf.drawString(450,605,str(inv_duedate_entry.get_date()))
        pdf.drawString(450,590,inv_terms_combo.get())
        pdf.drawString(450,575,inv_ref_entry.get())

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,inv_combo_e1.get())
        invto_addr = inv_addr_e2.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,inv_shipto_e3.get())
        shipto_addr = inv_addr_e4.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in add_newline_tree.get_children():
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          if comp_data[12] == "1":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "2":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "3":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(375,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(450,v1,450,v2)
            v1 -= 20
            v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              print(comp_data[6])
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
      elif type_temp == 'Business Classic':
        pdf.setStrokeColorRGB(255,10,0)
        pdf.line(30,762,580,762)
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,title_txt_combo.get())
        pdf.drawCentredString(302,585,pageh_txt_combo.get())
        pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(240,735, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(240,720,htg[0])
          if vg>1:
            pdf.drawString(240,705,htg[1])
            if vg>2:
              pdf.drawString(240,690,htg[2])
              if vg>3:
                pdf.drawString(240,675,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(240,650, comp_data[4])

        pdf.drawString(390,665,"Invoice#")
        pdf.drawString(390,650,"Invoice date")
        pdf.drawString(390,635,"Due date")
        pdf.drawString(390,620,"Terms")
        pdf.drawString(390,605,"Invoice ref#")

        pdf.drawString(480,665,inv_number_entry.get())
        pdf.drawString(480,650,str(inv_date_entry.get_date()))
        pdf.drawString(480,635,str(inv_duedate_entry.get_date()))
        pdf.drawString(480,620,inv_terms_combo.get())
        pdf.drawString(480,605,inv_ref_entry.get())

        pdf.drawString(390,735,inv_combo_e1.get())
        invto_addr = inv_addr_e2.get("1.0","end-1c")
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(390,720,a[0])
          if addr > 1:
            pdf.drawString(390,705,a[1])
            if addr > 2:
              pdf.drawString(390,590,a[2])
              if addr > 3:
                pdf.drawString(390,575,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setStrokeColorRGB(0,0,0)
        pdf.setLineWidth(.3)
        pdf.line(30,580,30,560)
        pdf.line(580,580,580,560)
        pdf.line(310,580,310,560) #vertical lines
        pdf.line(400,580,400,560)
        pdf.line(490,580,490,560)
        #------------------------#
        pdf.line(30,560,580,560)
        pdf.line(30,580,580,580)


        pdf.drawString(130,565,"Product/Service")
        pdf.drawString(332,565,"Quantity")
        pdf.drawString(420,565,"Unit Price")
        pdf.drawString(523,565,"Price")

        y1 = 540 
        y2 = 540
        v1 = 560
        v2 = 540
        for i in add_newline_tree.get_children():
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          if comp_data[12] == "1":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[6])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "2":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[7])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
          elif comp_data[12] == "3":
            pdf.drawString(32,y1+5,add_newline_tree.item(i,'value')[1])
            pdf.drawCentredString(357,y1+5,add_newline_tree.item(i,'value')[4])
            pdf.drawRightString(488,y1+5,add_newline_tree.item(i,'value')[3])
            pdf.drawRightString(578,y1+5,add_newline_tree.item(i,'value')[8])
            y1 -= 20
            y2 -= 20

            pdf.line(30,v1,30,v2)
            pdf.line(580,v1,580,v2)
            pdf.line(310,v1,310,v2) #vertical lines
            pdf.line(400,v1,400,v2)
            pdf.line(490,v1,490,v2)
            v1 -= 20
            v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1.cget("text")))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1.cget("text")))

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1.cget("text")))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax_1.cget("text")))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax_2.cget("text")))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1.cget("text")))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1.cget("text")))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1.cget("text")))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,discount.cget("text"))
              pdf.drawRightString(578,calc_y1+5,str(discount1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(sub1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo.get())
              pdf.drawRightString(578,(calc_y1-40)+5,str(cost1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(tax_1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(tax_2.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(total1.cget("text")) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(balance1.cget("text")) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = comment_txt.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        
        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage() 
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')

          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = term_txt.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')

          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,sales_per_entry.get())
          pdf.drawString(32,15,footer_txt_combo.get())


      pdf.save()

      mail_invo =Toplevel()
      mail_invo.title("E-Mail Invoice List")
      p2 = PhotoImage(file = "images/fbicon.png")
      mail_invo.iconphoto(False, p2)
      mail_invo.geometry("1030x490+150+120")
    
      
      def inv_UploadAction(event=None):
        global filenamez

        filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
        shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
        attach_list.insert(0, filenamez.split('/')[-1])


      def inv_deletefile():
        inv_remove=attach_list.curselection()
        yawn=attach_list.get(inv_remove) 
        print(yawn)       
        attach_list.delete(ACTIVE)
      
      def show_listbox_file(event):
        import win32api
        try:
          for i in attach_list.curselection():
            listboxfile = attach_list.get(i)
            if listboxfile.lower().endswith(('.png','.jpg','.jpeg')):
              win32api.ShellExecute(0,"",os.getcwd()+"/images/"+listboxfile,None,".",0)
            else:
              win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+listboxfile,None,".",0)
        except:
          pass

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", padding=5)
      email_Notebook = ttk.Notebook(mail_invo)
      email_Frame = Frame(email_Notebook, height=500, width=1080)
      account_Frame = Frame(email_Notebook, height=550, width=1080)
      email_Notebook.add(email_Frame, text="E-mail")
      email_Notebook.add(account_Frame, text="Account")
      email_Notebook.place(x=0, y=0)
      messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
      messagelbframe.place(x=5, y=5)
      global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
      email_to = StringVar()
      email_subject = StringVar()
      email_from = StringVar()
      email_passw = StringVar()
      email_carbon = StringVar()
      email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
      email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
      email_to_addr_entry.place(x=120, y=5)
      email_addr = inv_email_e5.get()
      email_to_addr_entry.delete(0,END)
      email_to_addr_entry.insert(0,email_addr)
      send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail)
      send_email_btn.place(x=600, y=10)
      carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
      carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
      carbon_entry.place(x=120, y=32)
      subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
      subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
      subject_entry.place(x=120, y=59)
      subject = inv_number_entry.get()
      subject_entry.delete(0,END)
      subject_entry.insert(0,"Invoice" + " " + "(" + subject + ")")

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
      mess_Notebook = ttk.Notebook(messagelbframe)
      emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
      htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
      mess_Notebook.add(emailmessage_Frame, text="E-mail message")
      mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
      mess_Notebook.place(x=5, y=90)

      
      email_ltr_scroll=scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True,exportselection=False)
      email_ltr_scroll.config(inactiveselectbackground=email_ltr_scroll.cget("selectbackground"))
      email_ltr_scroll.place(x=0, y=28)

      sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
      sel_all_btn.place(x=0, y=1)  
      cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
      cut_btn.place(x=36, y=1)
      copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
      copy_btn.place(x=73, y=1)
      paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
      paste_btn.place(x=105, y=1)
      undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
      undo_btn.place(x=140, y=1)
      redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
      redo_btn.place(x=175, y=1)

      def bold_text():
        bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        bold_font.configure(weight="bold")

        email_ltr_scroll.tag_configure("bold", font=bold_font)

        current_tags = email_ltr_scroll.tag_names("sel.first")

        if "bold" in current_tags:
          email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
        else:
          email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
      
      bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
      bold_btn.place(x=210, y=1)

      def italic_text():
        italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        italic_font.configure(slant="italic")

        email_ltr_scroll.tag_configure("italic", font=italic_font)

        current_tags = email_ltr_scroll.tag_names("sel.first")

        if "italic" in current_tags:
          email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
        else:
          email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
      italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
      italic_btn.place(x=245, y=1)

      def underline_text():
        try:
          if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
              email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
          else:
              email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
              email_ltr_scroll.tag_configure('underline_selection', underline=True)
        except TclError:
            pass
      underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
      underline_btn.place(x=280, y=1)

      def align_left():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('left',justify=LEFT)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'left')
      align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
      align_lbtn.place(x=315, y=1)

      def align_right():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('right',justify=RIGHT)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'right')
      align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
      align_rbtn.place(x=350, y=1)

      def align_center():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('center',justify=CENTER)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'center')
      align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
      align_cbtn.place(x=385, y=1)
      hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
      hyper_btn.place(x=420, y=1)
      remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
      remove_btn.place(x=455, y=1)


      def color_text():
        color = colorchooser.askcolor()[1]
        if color:
          color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

          email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

          current_tags = email_ltr_scroll.tag_names("sel.first")

          if "colored" in current_tags:
            email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
          else:
            email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
      color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
      color_btn.place(x=490, y=1)

      def fontsize_chooser(event):
        font_size = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        font_size.configure(size=int(fontsize_combo.get())*7)

        email_ltr_scroll.tag_configure("size", font=font_size)
        current_tags = email_ltr_scroll.tag_names("sel.first")

        email_ltr_scroll.tag_add("size", "sel.first", "sel.last")

      fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=10)
      fontsize_combo.place(x=600, y=5)
      fontsize_combo['values'] = ("1","2","3","4","5","6","7")
      fontsize_combo.current(0)
      fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
      fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
      btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
      btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
      btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
      btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
      email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
      email_html_scroll.place(x=0, y=28)
      attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
      attachlbframe.place(x=740, y=5)
      lstfrm = StringVar()
      attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
      attach_list.place(x=5, y=5)
      attach_list.insert(0,inv_number_entry.get().split('/')[0] + ".pdf")
      attach_list.bind('<Double-Button-1>',show_listbox_file)
      lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
      btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction)
      btn17.place(x=60, y=260)
      btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile)
      btn18.place(x=60, y=295)
      lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
      lbl_tt_info.place(x=740, y=370)

      ready_frame=Frame(mail_invo, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
      
      sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
      sendatalbframe.place(x=5, y=5)
      your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
      your_cemail_entry = Entry(sendatalbframe, width=40)
      your_cemail_entry.place(x=195, y=30)

      your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
      your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
      your_cpass_entry.place(x=195, y=60)
      
      

    inv_first_frame=Frame(pop, bg="#f5f3f2", height=60)
    inv_first_frame.pack(side="top", fill=X)

    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    select_customer_btn = Button(inv_first_frame,compound="top", text="Select\nCustomer",relief=RAISED, image=customer,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_sel_customer)
    select_customer_btn.pack(side="left", pady=3, ipadx=4)


    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    add_newline_btn= Button(inv_first_frame,compound="top", text="Add new\nline item",relief=RAISED, image=photo,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_newline)
    add_newline_btn.pack(side="left", pady=3, ipadx=4)

    del_line_item_btn= Button(inv_first_frame,compound="top", text="Delete line\nitem",relief=RAISED, image=photo2,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=delete_line_item)
    del_line_item_btn.pack(side="left", pady=3, ipadx=4)

    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    prev_invoice= Button(inv_first_frame,compound="top", text="Preview\nInvoice",relief=RAISED, image=photo4,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=previewline)
    prev_invoice.pack(side="left", pady=3, ipadx=4)

    print_invoice= Button(inv_first_frame,compound="top", text="Print \nInvoice",relief=RAISED, image=photo5,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=printinvoice)
    print_invoice.pack(side="left", pady=3, ipadx=4)

    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    mail_invoice= Button(inv_first_frame,compound="top", text="Email\nInvoice",relief=RAISED, image=photo6,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=email_invoice)
    mail_invoice.pack(side="left", pady=3, ipadx=4)

    sms_invoice= Button(inv_first_frame,compound="top", text="Send SMS\nnotification",relief=RAISED, image=photo10,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=sms1)
    sms_invoice.pack(side="left", pady=3, ipadx=4)

    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    mark_inv_paid= Button(inv_first_frame,compound="top", text="Mark invoice\nas 'Paid'",relief=RAISED, image=mark1,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=markinvo)
    mark_inv_paid.pack(side="left", pady=3, ipadx=4)

    void_invoice = Button(inv_first_frame,compound="top", text="Void\ninvoice",relief=RAISED, image=mark2,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=voidinvoice)
    void_invoice.pack(side="left", pady=3, ipadx=4)


    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    open_calc= Button(inv_first_frame,compound="top", text="Open\nCalculator",relief=RAISED, image=photo9,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=lambda:os.system('C:\Windows\System32\calc.exe'))
    open_calc.pack(side="left", pady=3, ipadx=4)

    w = Canvas(inv_first_frame, width=1, height=65, bg="#b3b3b3", bd=0)
    w.pack(side="left", padx=5)

    save_invoice= Button(inv_first_frame,compound="top", text="Save",relief=RAISED, image=tick,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=add_new_invoice)
    save_invoice.pack(side="right", pady=3, ipadx=4)

    inv_first_frame_1=Frame(pop, height=180,bg="#f5f3f2")
    inv_first_frame_1.pack(side="top", fill=X)

    labelframe1 = LabelFrame(inv_first_frame_1,text="Customers",font=("arial",15))
    labelframe1.place(x=10,y=5,width=640,height=160)
    
    def inv_to_combo(event):
      global inv_sel_combo
      inv_to_str = inv_to.get()
      sql = "SELECT * FROM Customer WHERE businessname=%s"
      val = (inv_to_str,)
      fbcursor.execute(sql,val)
      inv_sel_combo = fbcursor.fetchone()
      inv_addr_e2.delete('1.0',END)
      inv_addr_e2.insert('1.0',inv_sel_combo[5])
      inv_shipto_e3.delete(0, END)
      inv_shipto_e3.insert(0, inv_sel_combo[6])
      inv_addr_e4.delete('1.0',END)
      inv_addr_e4.insert('1.0',inv_sel_combo[7])
      inv_email_e5.delete(0,END)
      inv_email_e5.insert(0,inv_sel_combo[9])
      inv_sms_e6.delete(0,END)
      inv_sms_e6.insert(0,inv_sel_combo[12])

    def copy_cust_details():
      inv_shipto_e3.delete(0, END)
      inv_shipto_e3.insert(0, inv_sel_combo[4])
      inv_addr_e4.delete('1.0',END)
      inv_addr_e4.insert('1.0',inv_sel_combo[5])


    sql = "select businessname from Customer"
    fbcursor.execute(sql,)
    pdata = fbcursor.fetchall()

    # global inv_combo_e1,inv_addr_e2,inv_shipto_e3,inv_addr_e4,inv_email_e5,inv_sms_e6,inv_number_entry,inv_date_entry,inv_duedate_entry,inv_terms_combo,inv_ref_entry


    invoice_to = Label(labelframe1, text="Invoice to").place(x=10,y=5)
    inv_to = StringVar()
    inv_combo_e1 = ttk.Combobox(labelframe1,width=28,textvariable=inv_to)
    inv_combo_e1.place(x=80,y=5)
    inv_combo_e1['values'] = pdata
    inv_combo_e1.bind("<<ComboboxSelected>>", inv_to_combo)
    inv_address=Label(labelframe1,text="Address").place(x=10,y=30)
    inv_addr_e2=scrolledtext.Text(labelframe1, undo=True,width=23)
    inv_addr_e2.place(x=80,y=30,height=70)
    inv_ship_to=Label(labelframe1,text="Ship to").place(x=342,y=5)
    inv_shipto_e3=Entry(labelframe1,width=30)
    inv_shipto_e3.place(x=402,y=3)
    inv_address1=Label(labelframe1,text="Address").place(x=340,y=30)
    inv_addr_e4=scrolledtext.Text(labelframe1, undo=True,width=23)
    inv_addr_e4.place(x=402,y=30,height=70)

    inv_copy_cust=Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_cust_details)
    inv_copy_cust.place(x=280, y=50)
    
    labelframe2 = LabelFrame(inv_first_frame_1,text="")
    labelframe2.place(x=10,y=130,width=640,height=42)
    inv_email=Label(labelframe2,text="Email").place(x=10,y=5)
    inv_email_e5=Entry(labelframe2,width=30)
    inv_email_e5.place(x=80,y=5)
    inv_sms=Label(labelframe2,text="SMS Number").place(x=328,y=5)
    inv_sms_e6=Entry(labelframe2,width=30)
    inv_sms_e6.place(x=402,y=5)
      
    labelframe = LabelFrame(inv_first_frame_1,text="Invoice",font=("arial",15))
    labelframe.place(x=652,y=5,width=290,height=170)


    comp_sql = "SELECT * FROM company"
    fbcursor.execute(comp_sql,)
    comp_data = fbcursor.fetchone()

    inv_number_label=Label(labelframe,text="Invoice#").place(x=5,y=5)
    inv_number_entry=Entry(labelframe,width=25)
    inv_number_entry.place(x=100,y=5,)

    inv_number_entry.delete(0,'end')

    def inv_num_increment(inum):
      result = ""
      numberStr = ""
      invnum = inum
      ino = str(invnum).split("/")[0]
      i = len(ino) - 1
      while i > 0:
        c = ino[i]
        if not c.isdigit():
          break
        numberStr = c + numberStr
        i -= 1
      number = int(numberStr)
      number += 1
      result += ino[0 : i + 1]
      result += "0000" if number < 1000 else ""
      result += str(number)
      y = datetime.today().date()
      year = "/" + "" + str(y.year)
      result += year
      return result
    
    fbcursor.execute("SELECT * FROM Invoice ORDER BY invoiceid DESC LIMIT 1")
    inv_number_data = fbcursor.fetchone()
    
    if not inv_number_data == None:
      a = inv_number_data[1]
      inv_no = inv_num_increment(a)
    else:
      y = datetime.today().date()
      year = "/" + "" + str(y.year)
      inv_no = "INV00001" + "" + year
    inv_number_entry.insert(0,inv_no)

    def inv_due_check():
      if checkvarStatus5.get() == 1:
        inv_duedate_entry['state'] = NORMAL
      else:
        inv_duedate_entry['state'] = DISABLED

    global tdata
    term_sql = "SELECT terms_of_payment FROM terms_of_payment"
    fbcursor.execute(term_sql,)
    term_data = fbcursor.fetchall()
    tdata = []
    for i in term_data:
      tdata.append(i[0])

    inv_date_label =Label(labelframe,text="Invoice date").place(x=5,y=33)
    if comp_data[10] == "mm-dd-yyyy":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="mm-dd-yyyy")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="mm-dd-yyyy")
    elif comp_data[10] == "dd-mm-yyyy":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="dd-mm-yyyy")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="dd-mm-yyyy")
    elif comp_data[10] == "yyyy.mm.dd":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="yyyy.mm.dd")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="yyyy.mm.dd")
    elif comp_data[10] == "mm/dd/yyyy":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="mm/dd/yyyy")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="mm/dd/yyyy")
    elif comp_data[10] == "dd/mm/yyyy":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="dd/mm/yyyy")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="dd/mm/yyyy")
    elif comp_data[10] == "dd.mm.yyyy":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="dd.mm.yyyy")
      inv_duedate_entry=DateEntry(labelframe,width=15,date_pattern="dd.mm.yyyy")
    elif comp_data[10] == "yyyy/mm/dd":
      inv_date_entry =DateEntry(labelframe,width=15,date_pattern="yyyy/mm/dd")
      inv_duedate_entry =DateEntry(labelframe,width=15,date_pattern="yyyy/mm/dd")
    else:
      inv_date_entry =DateEntry(labelframe,width=15)
      inv_duedate_entry =DateEntry(labelframe,width=15)
    
    checkvarStatus5=IntVar()
    checkvarStatus5.set(1)
    inv_duedate_check=Checkbutton(labelframe,variable = checkvarStatus5,text="Due date",onvalue = 1,offvalue = 0,command=inv_due_check)
    inv_duedate_check.place(x=5,y=62)
    inv_duedate_entry.place(x=150,y=62)
    inv_date_entry.place(x=150,y=33)
    inv_terms_label=Label(labelframe,text="Terms").place(x=5,y=92)
    inv_terms_combo=ttk.Combobox(labelframe, value="",width=23)
    inv_terms_combo.place(x=100,y=92)
    inv_terms_combo['values'] = tdata
    inv_terms_combo.bind("<<ComboboxSelected>>")
    inv_ref_label=Label(labelframe,text="Invoice ref#").place(x=5,y=118)
    inv_ref_entry=Entry(labelframe,width=25)
    inv_ref_entry.place(x=100,y=118)

    current_date = datetime.today().date()
    if comp_data[10] == "mm-dd-yyyy":
      date = datetime.strftime(current_date,"%m-%d-%Y")
      due_date = datetime.strftime(current_date,"%m-%d-%Y")
    elif comp_data[10] == "dd-mm-yyyy":
      date = datetime.strftime(current_date,"%d-%m-%Y")
      due_date = datetime.strftime(current_date,"%d-%m-%Y")
    elif comp_data[10] == "yyyy.mm.dd":
      d = datetime.strftime(current_date,"%Y-%m-%d")
      dt = datetime.strptime(d,"%Y-%m-%d")
      date = '{0}.{1:02}.{2:02}'.format(dt.year,dt.month,dt.day)
      due = datetime.strptime(str(current_date),"%Y-%m-%d")
      due_date = '{0}.{1:02}.{2:02}'.format(due.year,due.month,due.day)
    elif comp_data[10] == "mm/dd/yyyy":
      date = datetime.strftime(current_date,"%m/%d/%Y")
      due_date = datetime.strftime(current_date,"%m/%d/%Y")
    elif comp_data[10] == "dd/mm/yyyy":
      date = datetime.strftime(current_date,"%d/%m/%Y")
      due_date = datetime.strftime(current_date,"%d/%m/%Y")
    elif comp_data[10] == "dd.mm.yyyy":
      d = datetime.strftime(current_date,"%Y-%m-%d")
      dt = datetime.strptime(d,"%Y-%m-%d")
      date = '{0}.{1:02}.{2:02}'.format(dt.day,dt.month,dt.year)
      due = datetime.strptime(str(current_date),"%Y-%m-%d")
      due_date = '{0}.{1:02}.{2:02}'.format(due.day,due.month,due.year)
    elif comp_data[10] == "yyyy/mm/dd":
      date = datetime.strftime(current_date,"%Y/%m/%d")
      due_date = datetime.strftime(current_date,"%Y/%m/%d")
    else:
      d = datetime.strftime(current_date,"%Y-%m-%d")
      dt = datetime.strptime(d,"%Y-%m-%d")
      date = '{0}/{1:02}/{2:02}'.format(dt.month,dt.day,dt.year % 100)
      due = datetime.strptime(str(current_date),"%Y-%m-%d")
      due_date = '{0}/{1:02}/{2:02}'.format(due.month,due.day,due.year % 100)

    inv_date_entry.delete(0, END)
    inv_date_entry.insert(0, date)
    inv_duedate_entry.delete(0, END)
    inv_duedate_entry.insert(0, due_date)

    fir2Frame=Frame(pop, height=150,width=100,bg="#f5f3f2")
    fir2Frame.pack(side="top", fill=X)
    listFrame = Frame(fir2Frame, bg="white", height=140,borderwidth=5,  relief=RIDGE)

    if comp_data[12] == "1":
      add_newline_tree=ttk.Treeview(listFrame)
      add_newline_tree["columns"]=["1","2","3","4","5","6","7"]

      add_newline_tree.column("#0", width=20)
      add_newline_tree.column("1", width=80,anchor=CENTER)
      add_newline_tree.column("2", width=190,anchor=CENTER)
      add_newline_tree.column("3", width=220,anchor=CENTER)
      add_newline_tree.column("4", width=95,anchor=CENTER)
      add_newline_tree.column("5", width=60,anchor=CENTER)
      add_newline_tree.column("6", width=60,anchor=CENTER)
      add_newline_tree.column("7", width=95,anchor=CENTER)
      
      add_newline_tree.heading("#0")
      add_newline_tree.heading("1",text="ID/SKU")
      add_newline_tree.heading("2",text="Product/Service")
      add_newline_tree.heading("3",text="Description")
      add_newline_tree.heading("4",text="Unit Price")
      add_newline_tree.heading("5",text="Quantity")
      add_newline_tree.heading("6",text="Pcs/Weight")
      add_newline_tree.heading("7",text="Price")
      
      add_newline_tree.pack(fill="both", expand=1)
      listFrame.pack(side="top", fill="both", padx=5, pady=3, expand=1)
    elif comp_data[12] == "2":
      add_newline_tree=ttk.Treeview(listFrame)
      add_newline_tree["columns"]=["1","2","3","4","5","6","7","8"]

      add_newline_tree.column("#0", width=20)
      add_newline_tree.column("1", width=80,anchor=CENTER)
      add_newline_tree.column("2", width=190,anchor=CENTER)
      add_newline_tree.column("3", width=190,anchor=CENTER)
      add_newline_tree.column("4", width=80,anchor=CENTER)
      add_newline_tree.column("5", width=60,anchor=CENTER)
      add_newline_tree.column("6", width=60,anchor=CENTER)
      add_newline_tree.column("7", width=60,anchor=CENTER)
      add_newline_tree.column("8", width=80,anchor=CENTER)
      
      add_newline_tree.heading("#0")
      add_newline_tree.heading("1",text="ID/SKU")
      add_newline_tree.heading("2",text="Product/Service")
      add_newline_tree.heading("3",text="Description")
      add_newline_tree.heading("4",text="Unit Price")
      add_newline_tree.heading("5",text="Quantity")
      add_newline_tree.heading("6",text="Pcs/Weight")
      add_newline_tree.heading("7",text="Tax1")
      add_newline_tree.heading("8",text="Price")
      
      add_newline_tree.pack(fill="both", expand=1)
      listFrame.pack(side="top", fill="both", padx=5, pady=3, expand=1)
    elif comp_data[12] == "3":
      add_newline_tree=ttk.Treeview(listFrame)
      add_newline_tree["columns"]=["1","2","3","4","5","6","7","8","9"]

      add_newline_tree.column("#0", width=20)
      add_newline_tree.column("1", width=80,anchor=CENTER)
      add_newline_tree.column("2", width=170,anchor=CENTER)
      add_newline_tree.column("3", width=170,anchor=CENTER)
      add_newline_tree.column("4", width=80,anchor=CENTER)
      add_newline_tree.column("5", width=60,anchor=CENTER)
      add_newline_tree.column("6", width=60,anchor=CENTER)
      add_newline_tree.column("7", width=60,anchor=CENTER)
      add_newline_tree.column("8", width=60,anchor=CENTER)
      add_newline_tree.column("9", width=80,anchor=CENTER)
      
      add_newline_tree.heading("#0")
      add_newline_tree.heading("1",text="ID/SKU")
      add_newline_tree.heading("2",text="Product/Service")
      add_newline_tree.heading("3",text="Description")
      add_newline_tree.heading("4",text="Unit Price")
      add_newline_tree.heading("5",text="Quantity")
      add_newline_tree.heading("6",text="Pcs/Weight")
      add_newline_tree.heading("7",text="Tax1")
      add_newline_tree.heading("8",text="Tax2")
      add_newline_tree.heading("9",text="Price")
      
      add_newline_tree.pack(fill="both", expand=1)
      listFrame.pack(side="top", fill="both", padx=5, pady=3, expand=1)

    totalprice_view = Label(listFrame,bg="#f5f3f2")
    totalprice_view.place(x=850,y=200,width=78,height=18)

    proquanVar = StringVar()
    def inv_proquanedit_box(val):
      change_quanwindow = Toplevel()
      change_quanwindow.title("Edit the value or cancel")
      change_quanwindow.geometry("400x200+350+300")
      root.resizable(False, False)
      change_quantity_lbl = Label(change_quanwindow , text='Quality', 
      font = ("Times New Roman", 10)).place(x=80,y=60)
      quantity_editbox = Entry(change_quanwindow)
      quantity_editbox.insert(0,val)
      quantity_editbox.place(x=180,y=63)
      change_quanwindow.focus()
      
      def assign_value(event):
        print_quantity = quantity_editbox.get()
        proquanVar.set(print_quantity)
        change_quanwindow.quit()
        change_quanwindow.destroy()
          
      
      change_quanwindow.bind('<Return>', assign_value )
  
      okbtn_quantity = Button(change_quanwindow, text="Okay")
      okbtn_quantity.bind('<Button-1>',assign_value)
      okbtn_quantity.place(x=70,y=130)
      
      cancelbtn_quantity = Button(change_quanwindow, text="Cancel", command = change_quanwindow.destroy).place(x=276,y=130)
      change_quanwindow.mainloop()

    def edit_quantity(event):
      selected_item = add_newline_tree.selection()[0]
      temp = list(add_newline_tree.item(selected_item , 'values'))
      inv_proquanedit_box(temp[4])
      temp[4] = proquanVar.get()
      add_newline_tree.item(selected_item, values= temp)
      sql = "select * from company"
      fbcursor.execute(sql)
      priceupdate = fbcursor.fetchone()
      if not priceupdate:
        add_newline_tree.set(selected_item, '#7', (float(temp[3])*float(temp[4])))
      elif priceupdate[12] =="1":
        add_newline_tree.set(selected_item, '#7', (float(temp[3])*float(temp[4])))
      elif priceupdate[12] =="2":
        add_newline_tree.set(selected_item, '#8', (float(temp[3])*float(temp[4])))
      elif priceupdate[12] =="3":
        add_newline_tree.set(selected_item, '#9', (float(temp[3])*float(temp[4])))
      sql = "select * from company"
      fbcursor.execute(sql)
      comp_data = fbcursor.fetchone()
      if comp_data[12] == "1":
        price = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          price += float(add_newline_tree.item(i,'values')[6])
        discount_rate = (price*dis_rate)/100
        total_cost += (price - discount_rate) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round((price - discount_rate),2)
        sub1.config(text=sub_tot)
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4])
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=price)
      elif comp_data[12] == "2":
        price = 0.0
        p = 0.0
        total_cost = 0.0
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        tx1 = float(tax1_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No":
            p += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[7])
        discount_rate = ((price + p) * dis_rate)/100
        dis_price = (price * dis_rate)/100
        dis_p = (p * dis_rate)/100
        tax1_rate = ((price - dis_price)*tx1)/100
        tx_calc = (price - dis_price) + tax1_rate
        tx_calc1 = p - dis_p
        total_cost += (tx_calc + tx_calc1) + exc 
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round(tax1_rate,2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=round((price + p),2))
      elif comp_data[12] == "3":
        price = 0.0
        p1 = 0.0
        p2 = 0.0
        p3 = 0.0
        total_cost = 0.0
        tx1 = float(tax1_entry.get())
        tx2 = float(tax2_entry.get())
        exc = float(ex_cost_entry.get())
        dis_rate = float(dis_rate_entry.get())
        for i in add_newline_tree.get_children():
          if add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "No":
            p1 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "Yes" and add_newline_tree.item(i,'values')[7] == "No":
            p2 += float(add_newline_tree.item(i,'values')[3])
          elif add_newline_tree.item(i,'values')[6] == "No" and add_newline_tree.item(i,'values')[7] == "Yes":
            p3 += float(add_newline_tree.item(i,'values')[3])
          else:
            price += float(add_newline_tree.item(i,'values')[8])
        discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
        dis_p2 = (p2 * dis_rate)/100
        tax1_rate = ((p2 - dis_p2) * tx1)/100
        dis_price = (price * dis_rate)/100
        tax2_rate = ((price - dis_price) * tx1)/100
        tax3_rate = ((price - dis_price) * tx2)/100
        dis_p3= (p3 * dis_rate)/100
        tax4_rate = ((p3 - dis_p3) * tx2)/100
        dis_p4 = (p1 * dis_rate)/100
        tx_calc1 = (p2 - dis_p2) + tax1_rate
        tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
        tx_calc3 = (p3 - dis_p3) + tax4_rate
        tx_calc4 = (p1 - dis_p4)
        total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
        discount.config(text= str(dis_rate) + "" +"% Discount")
        discount1.config(text=round(discount_rate,2))
        sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
        sub1.config(text=sub_tot)
        tax_1.config(text=round((tax1_rate + tax2_rate),2))
        tax_2.config(text=round((tax3_rate + tax4_rate),2))
        cost1.config(text=round(exc,2))
        invoicetot1.config(text=round(total_cost,2))
        tot_paid = 0.0
        for tp in pay_tree.get_children():
          tot_paid += float(pay_tree.item(tp,'values')[4]) 
        total1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1.config(text=bal)
        totalprice_view.config(text=round((price + p1 + p2 + p3),2))
      
    
    add_newline_tree.bind('<Double-Button-1>' , edit_quantity)

    fir3Frame=Frame(pop,height=200,width=700,bg="#f5f3f2")
    fir3Frame.place(x=0,y=490)

    tabStyle = ttk.Style()
    tabStyle.theme_use('default')
    tabStyle.configure('TNotebook.Tab', background="#999999", width=12, padding=5)
    myNotebook=ttk.Notebook(fir3Frame)
    invoiceFrame = Frame(myNotebook, height=200, width=800)
    recurFrame = Frame(myNotebook, height=200, width=800)
    payementFrame = Frame(myNotebook, height=200, width=800)
    headerFrame = Frame(myNotebook, height=200, width=800)
    commentFrame = Frame(myNotebook, height=200, width=800)
    termsFrame = Frame(myNotebook, height=200, width=800)
    noteFrame = Frame(myNotebook, height=200, width=800)
    documentFrame = Frame(myNotebook, height=200, width=800)
    
    myNotebook.add(invoiceFrame,compound="left", text="Invoice")
    myNotebook.add(recurFrame,compound="left", text="Recurring")
    myNotebook.add(payementFrame,compound="left", text="Payements")
    myNotebook.add(headerFrame,compound="left",  text="Header/Footer")
    myNotebook.add(commentFrame,compound="left",  text="Comments")
    myNotebook.add(termsFrame,compound="left", text="Terms")
    myNotebook.add(noteFrame,compound="left",  text="Private notes")
    myNotebook.add(documentFrame,compound="left",  text="Documents")
    myNotebook.pack(expand = 1, fill ="both")  

    sql_exn = "SELECT extra_cost_name FROM extra_cost_name"
    fbcursor.execute(sql_exn)
    ex_data = fbcursor.fetchall()

    labelframe1 = LabelFrame(invoiceFrame,text="",font=("arial",15))
    labelframe1.place(x=1,y=1,width=735,height=170)

    global ex_costn_combo,dis_rate_entry,ex_cost_entry,tax1_entry,template_entry,sales_per_entry,category_entry,draft_label,never1_label,never2_label,title_txt_combo,pageh_txt_combo,footer_txt_combo,private_note_txt,term_txt,comment_txt,discount1,sub1,tax1,cost1,invoicetot1,total1,balance1

    ex_costn_label=Label(labelframe1,text="Extra cost name").place(x=2,y=5)
    ex_costn_combo=ttk.Combobox(labelframe1,width=20)
    ex_costn_combo.place(x=115,y=5)
    ex_costn_combo['values'] = ex_data
    ex_costn_combo.set(ex_data[0])
    ex_costn_combo.bind("<<ComboboxSelected>>")
    dis_rate_label=Label(labelframe1,text="Discount rate").place(x=370,y=5)
    dis_rate_entry=Spinbox(labelframe1,width=6,from_=0,to=100,justify=RIGHT)
    dis_rate_entry.place(x=460,y=5)
    dis_rate_entry.bind('<Button-1>',recalc_dis)
    ex_cost_label=Label(labelframe1,text="Extra cost").place(x=35,y=35)
    ex_cost_entry=Entry(labelframe1,width=10,justify=RIGHT)
    ex_cost_entry.place(x=115,y=35)
    ex_cost_entry.bind('<KeyRelease>',recalc_exc)
    ex_cost_entry.delete(0,END)
    ex_cost_entry.insert(0,"0")
    comp_sql = "SELECT * FROM company"
    fbcursor.execute(comp_sql,)
    comp_data = fbcursor.fetchone()
    if comp_data[12] == "1":
      pass
    elif comp_data[12] == "2":
      tax1_label=Label(labelframe1,text="Tax1").place(x=420,y=35)
      tax1_entry=Entry(labelframe1,width=7,justify=RIGHT)
      tax1_entry.place(x=460,y=35)
      def1_val = tax1ratee.get()
      tax1_entry.delete(0, END)
      tax1_entry.insert(0, def1_val)
    elif comp_data[12] == "3":
      tax1_label=Label(labelframe1,text="Tax1").place(x=420,y=35)
      tax1_entry=Entry(labelframe1,width=7,justify=RIGHT)
      tax1_entry.place(x=460,y=35)
      def1_val = tax1ratee.get()
      tax1_entry.delete(0, END)
      tax1_entry.insert(0, def1_val)
      tax2_label=Label(labelframe1,text="Tax2").place(x=420,y=65)
      tax2_entry=Entry(labelframe1,width=7,justify=RIGHT)
      tax2_entry.place(x=460,y=65)
      def2_val = tax2ratee.get()
      tax2_entry.delete(0, END)
      tax2_entry.insert(0, def2_val)
    temp_value = ['Professional 1 (logo on left side)','Professional 2 (logo on right side)','Simplified 1 (logo on left side)','Simplified 2 (logo on right side)','Business Classic']
    template_label=Label(labelframe1,text="Template").place(x=37,y=70)
    template_entry=ttk.Combobox(labelframe1,width=27)
    template_entry.place(x=115,y=70)
    template_entry['values'] = temp_value
    template_entry.set(temp_value[0])
    sales_per_label=Label(labelframe1,text="Sales Person").place(x=25,y=100)
    sales_per_entry=Entry(labelframe1,width=18)
    sales_per_entry.place(x=115,y=100)
    category_label=Label(labelframe1,text="Category").place(x=300,y=100)
    category_entry=Entry(labelframe1,width=22)
    category_entry.place(x=370,y=100)
    
    statusfrme = LabelFrame(labelframe1,text="Status",font=("arial",15))
    statusfrme.place(x=540,y=0,width=160,height=160)
    draft_label=Label(statusfrme, text="Draft",font=("arial", 15, "bold"), fg="grey")
    draft_label.place(x=50, y=3)
    email_on_label=Label(statusfrme, text="Emailed on:").place( y=50)
    never1_label=Label(statusfrme, text="Never")
    never1_label.place(x=80,y=50)
    print_on_label=Label(statusfrme, text="Printed on:").place( y=90)
    never2_label=Label(statusfrme, text="Never")
    never2_label.place(x=100,y=90)

    recur_labelframe = LabelFrame(recurFrame,text="",font=("arial",15))
    recur_labelframe.place(x=1,y=1,width=735,height=170)

    ############## check recurring #############

    def recur_check():
      if checkrecStatus.get() == 0:
        recur_period_entry['state'] = DISABLED
        recur_month_combo['state'] = DISABLED
        recur_nxt_inv_date['state'] = DISABLED
        recur_stop_check['state'] = DISABLED
        recur_stop_date['state'] = DISABLED
        recur_recalc['state'] = DISABLED
      else:
        recur_period_entry['state'] = NORMAL
        recur_month_combo['state'] = NORMAL
        recur_nxt_inv_date['state'] = NORMAL
        recur_stop_check['state'] = NORMAL
        recur_stop_date['state'] = NORMAL
        recur_recalc['state'] = NORMAL

    mdata = ["Month(s)","Day(s)"]

    ################## recalculate recurring ################
    def recur_recalculate():
      recur_period = recur_period_entry.get()
      recur_stop = datetime.today().date()
      if recur_month_combo.get() == "Month(s)":
        if comp_data[10] == "mm-dd-yyyy":
          stop_date = datetime.strftime(recur_stop,"%m-%d-%Y")
          stop_d = datetime.strptime(stop_date,"%m-%d-%Y")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%m-%d-%Y")
        elif comp_data[10] == "dd-mm-yyyy":
          stop_date = datetime.strftime(recur_stop,"%d-%m-%Y")
          stop_d = datetime.strptime(stop_date,"%d-%m-%Y")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%d-%m-%Y")
        elif comp_data[10] == "yyyy.mm.dd":
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_date = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
        elif comp_data[10] == "mm/dd/yyyy":
          stop_date = datetime.strftime(recur_stop,"%m/%d/%Y")
          stop_d = datetime.strptime(stop_date,"%m/%d/%Y")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%m/%d/%Y")
        elif comp_data[10] == "dd/mm/yyyy":
          stop_date = datetime.strftime(recur_stop,"%d/%m/%Y")
          stop_d = datetime.strptime(stop_date,"%d/%m/%Y")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%d/%m/%Y")
        elif comp_data[10] == "dd.mm.yyyy":
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
        elif comp_data[10] == "yyyy/mm/dd":
          stop_date = datetime.strftime(recur_stop,"%Y/%m/%d")
          stop_d = datetime.strptime(stop_date,"%Y/%m/%d")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%Y/%m/%d")
        else:
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(months=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
        recur_nxt_inv_date.delete(0,END)
        recur_nxt_inv_date.insert(0,nxt_inv)
      else:
        if comp_data[10] == "mm-dd-yyyy":
          stop_date = datetime.strftime(recur_stop,"%m-%d-%Y")
          stop_d = datetime.strptime(stop_date,"%m-%d-%Y")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%m-%d-%Y")
        elif comp_data[10] == "dd-mm-yyyy":
          stop_date = datetime.strftime(recur_stop,"%d-%m-%Y")
          stop_d = datetime.strptime(stop_date,"%d-%m-%Y")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%d-%m-%Y")
        elif comp_data[10] == "yyyy.mm.dd":
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_date = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
        elif comp_data[10] == "mm/dd/yyyy":
          stop_date = datetime.strftime(recur_stop,"%m/%d/%Y")
          stop_d = datetime.strptime(stop_date,"%m/%d/%Y")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%m/%d/%Y")
        elif comp_data[10] == "dd/mm/yyyy":
          stop_date = datetime.strftime(recur_stop,"%d/%m/%Y")
          stop_d = datetime.strptime(stop_date,"%d/%m/%Y")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%d/%m/%Y")
        elif comp_data[10] == "dd.mm.yyyy":
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
        elif comp_data[10] == "yyyy/mm/dd":
          stop_date = datetime.strftime(recur_stop,"%Y/%m/%d")
          stop_d = datetime.strptime(stop_date,"%Y/%m/%d")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt_inv = datetime.strftime(n,"%Y/%m/%d")
        else:
          stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
          stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
          n = stop_d + relativedelta(days=+int(recur_period))
          nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
          nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
        recur_nxt_inv_date.delete(0,END)
        recur_nxt_inv_date.insert(0,nxt_inv)

    stop = datetime.today().date()
    if comp_data[10] == "mm-dd-yyyy":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="mm-dd-yyyy")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="mm-dd-yyyy")
      stop_date = datetime.strftime(stop,"%m-%d-%Y")
      nxt_inv = datetime.strftime(stop,"%m-%d-%Y")
    elif comp_data[10] == "dd-mm-yyyy":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="dd-mm-yyyy")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="dd-mm-yyyy")
      stop_date = datetime.strftime(stop,"%d-%m-%Y")
      nxt_inv = datetime.strftime(stop,"%d-%m-%Y")
    elif comp_data[10] == "yyyy.mm.dd":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="yyyy.mm.dd")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="yyyy.mm.dd")
      s = datetime.strftime(stop,"%Y-%m-%d")
      stop_d = datetime.strptime(s,"%Y-%m-%d")
      stop_date = '{0}.{1:02}.{2:02}'.format(stop_d.year,stop_d.month,stop_d.day)
      nxt = datetime.strptime(s,"%Y-%m-%d")
      nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
    elif comp_data[10] == "mm/dd/yyyy":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="mm/dd/yyyy")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="mm/dd/yyyy")
      stop_date = datetime.strftime(stop,"%m/%d/%Y")
      nxt_inv = datetime.strftime(stop,"%m/%d/%Y")
    elif comp_data[10] == "dd/mm/yyyy":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="dd/mm/yyyy")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="dd/mm/yyyy")
      stop_date = datetime.strftime(stop,"%d/%m/%Y")
      nxt_inv = datetime.strftime(stop,"%d/%m/%Y")
    elif comp_data[10] == "dd.mm.yyyy":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="dd.mm.yyyy")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="dd.mm.yyyy")
      s = datetime.strftime(stop,"%Y-%m-%d")
      stop_d = datetime.strptime(s,"%Y-%m-%d")
      stop_date = '{0:02}.{1:02}.{2:02}'.format(stop_d.day,stop_d.month,stop_d.year)
      nxt = datetime.strptime(s,"%Y-%m-%d")
      nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
    elif comp_data[10] == "yyyy/mm/dd":
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20,date_pattern="yyyy/mm/dd")
      recur_stop_date = DateEntry(recur_labelframe,width=20,date_pattern="yyyy/mm/dd")
      stop_date = datetime.strftime(stop,"%Y/%m/%d")
      nxt_inv = datetime.strftime(stop,"%Y/%m/%d")
    else:
      recur_nxt_inv_date = DateEntry(recur_labelframe,width=20)
      recur_stop_date = DateEntry(recur_labelframe,width=20)
      s = datetime.strftime(stop,"%Y-%m-%d")
      stop_d = datetime.strptime(s,"%Y-%m-%d")
      stop_date = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
      nxt = datetime.strptime(s,"%Y-%m-%d")
      nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)

    recur_stop_date.delete(0,END)
    recur_stop_date.insert(0,stop_date)
    recur_nxt_inv_date.delete(0,END)
    recur_nxt_inv_date.insert(0,nxt_inv)
    recur_stop_date['state'] = DISABLED
    recur_nxt_inv_date['state'] = DISABLED
    checkrecStatus=IntVar()
    recur_check_btn = Checkbutton(recur_labelframe,variable=checkrecStatus,text="Recurring",onvalue=1,offvalue=0,command=recur_check)
    recur_check_btn.place(x=25,y=20)
    recur_period_label = Label(recur_labelframe,text="Recurring period (interval)").place(x=130,y=45)
    recur_period_entry = Spinbox(recur_labelframe,width=10,state=DISABLED,from_=1,to=10)
    recur_period_entry.place(x=280,y=45)
    recur_month_combo = ttk.Combobox(recur_labelframe,values="",width=15,state=DISABLED)
    recur_month_combo.place(x=360,y=45)
    recur_month_combo['values'] = mdata
    recur_month_combo.set(mdata[0])
    recur_nxt_inv_label = Label(recur_labelframe,text="Next Invoice").place(x=280,y=70)
    checkstopStatus = IntVar()
    recur_stop_check = Checkbutton(recur_labelframe,variable=checkstopStatus,text="Stop recurring after",onvalue=1,offvalue=0,state=DISABLED)
    recur_stop_check.place(x=225,y=95)
    recur_nxt_inv_date.place(x=360,y=70)
    recur_stop_date.place(x=360,y=95)
    recur_recalc = Button(recur_labelframe,compound=LEFT,image=recalc,text="Recalculate",width=80,height=12,state=DISABLED,command=recur_recalculate)
    recur_recalc.place(x=540,y=70)


    pay_labelframe_1 = LabelFrame(payementFrame,text="",font=("arial",15))
    pay_labelframe_1.place(x=1,y=1,width=735,height=170)

    pay_tree = ttk.Treeview(payementFrame,height=6)
    pay_tree["columns"] = ["1","2","3","4","5"]
    pay_tree.column("#0", width=10)
    pay_tree.column("1", width=130,anchor=CENTER)
    pay_tree.column("2", width=130,anchor=CENTER)
    pay_tree.column("3", width=130,anchor=CENTER)
    pay_tree.column("4", width=130,anchor=CENTER)
    pay_tree.column("5", width=130,anchor=CENTER)
    pay_tree.heading("#0", text="",anchor=W)
    pay_tree.heading("1",text="Payment ID")
    pay_tree.heading("2",text="Payment date")
    pay_tree.heading("3",text="Paid by")
    pay_tree.heading("4",text="Description")
    pay_tree.heading("5",text="Amount")
    pay_tree.place(x=45,y=20)


    pay_plus = Button(payementFrame,compound=LEFT,image=plus_1,text="",width=20,height=25,command=markinvo)
    pay_plus.place(x=10,y=20)
    pay_minus = Button(payementFrame,compound=LEFT,image=minus,text="",width=20,height=25,command=delete_newline_pay)
    pay_minus.place(x=10,y=55)
    pay_srch = Button(payementFrame,compound=LEFT,image=photo4,text="",width=20,height=25)
    pay_srch.place(x=10,y=90)
    pay_msg = Button(payementFrame,compound=LEFT,image=photo6,text="",width=20,height=25)
    pay_msg.place(x=10,y=125)


    header_labelframe = LabelFrame(headerFrame,text="",font=("arial",15))
    header_labelframe.place(x=1,y=1,width=735,height=170)

    header_sql = "SELECT headerandfooter FROM header_and_footer"
    fbcursor.execute(header_sql,)
    header_data = fbcursor.fetchall()
    hdata = []
    for i in header_data:
      hdata.append(i[0])

    title_txt_label=Label(header_labelframe,text="Title text").place(x=50,y=5)
    title_txt_combo=ttk.Combobox(header_labelframe, value=hdata,width=60)
    title_txt_combo.place(x=125,y=5)
    title_txt_combo.bind("<<ComboboxSelected>>")
    pageh_txt_label=Label(header_labelframe,text="Page header text").place(x=2,y=45)
    pageh_txt_combo=ttk.Combobox(header_labelframe, value=hdata,width=60)
    pageh_txt_combo.place(x=125,y=45)
    pageh_txt_combo.bind("<<ComboboxSelected>>")
    footer_txt_label=Label(header_labelframe,text="Footer text").place(x=35,y=85)
    footer_txt_combo=ttk.Combobox(header_labelframe, value=hdata,width=60)
    footer_txt_combo.place(x=125,y=85)
    footer_txt_combo.bind("<<ComboboxSelected>>")

    private_labelframe = LabelFrame(noteFrame,text="",font=("arial",15))
    private_labelframe.place(x=1,y=1,width=735,height=170)

    private_label=Label(private_labelframe,text="Private notes(not shown on invoice/order/estemates)").place(x=10,y=10)
    private_note_txt=Text(private_labelframe,width=89,height=7)
    private_note_txt.place(x=7,y=32)

    term_labelframe = LabelFrame(termsFrame,text="",font=("arial",15))
    term_labelframe.place(x=1,y=1,width=735,height=170)

    term_txt=Text(term_labelframe,width=89,height=9)
    term_txt.place(x=7,y=10)

    comment_labelframe = LabelFrame(commentFrame,text="",font=("arial",15))
    comment_labelframe.place(x=1,y=1,width=735,height=170)

    comment_txt=Text(comment_labelframe,width=89,height=9)
    comment_txt.place(x=7,y=10)

    doc_labelframe = LabelFrame(documentFrame,text="",font=("arial",15))
    doc_labelframe.place(x=1,y=1,width=735,height=170)
    ################### attatch file ###########################
    def attach_file():
      global file,file_type
      file_type = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
      file = filedialog.askopenfilename(initialdir="/",filetypes=file_type)
      shutil.copyfile(file, os.getcwd()+'/images/'+file.split('/')[-1])
      file_size = convertion(os.path.getsize(file))
      doc_tree.insert(parent='',index='end',iid=file.split('/')[-1],text='',values=('',file.split('/')[-1],file_size))
      

    #################### size convertion of files############################
    def convertion(B):
      BYTE = float(B)
      KB = float(1024)
      MB = float(KB**2)

      if BYTE < KB:
        return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
      elif KB <= BYTE < MB:
        return '{0:.2f} KB'.format(BYTE / KB)
      elif MB <= BYTE:
        return '{0:.2f} MB'.format(BYTE / MB)
    ############### delete file #################
    def delete_file():
      selected_doc_item = doc_tree.selection()[0]
      doc_tree.delete(selected_doc_item)


    ############## show file ###############

    def show_sel_file(event):
      import win32api
      selected_file = doc_tree.item(doc_tree.focus())["values"][1]
      win32api.ShellExecute(0,"",os.getcwd()+"/images/"+selected_file,None,".",0)
    
    

    doc_plus_btn=Button(doc_labelframe,image=plus_1,text="",width=20,height=25,command=attach_file)
    doc_plus_btn.place(x=5,y=10)
    doc_minus_btn=Button(doc_labelframe,height=25,width=20,text="",image=minus,command=delete_file)
    doc_minus_btn.place(x=5,y=50)
    doc_txt_label=Label(doc_labelframe,text="Attached documents or image files.If you attach large email then email taken long time to send").place(x=50,y=10)
    doc_tree=ttk.Treeview(doc_labelframe, height=5)
    doc_tree["columns"]=["1","2","3"]
    doc_tree.column("#0", width=20,anchor=CENTER)
    doc_tree.column("1", width=130,anchor=CENTER)
    doc_tree.column("2", width=380,anchor=CENTER)
    doc_tree.column("3", width=130,anchor=CENTER)
    doc_tree.heading("#0",text="", anchor=W)
    doc_tree.heading("1",text="Attach to Email")
    doc_tree.heading("2",text="Filename")
    doc_tree.heading("3",text="Filesize")  
    doc_tree.place(x=50, y=45)
    doc_tree.bind('<Double-Button-1>',show_sel_file)

    fir4Frame=Frame(pop,height=190,width=210,bg="#f5f3f2")
    fir4Frame.place(x=740,y=520)
    summaryfrme = LabelFrame(fir4Frame,text="Summary",font=("arial",15))
    summaryfrme.place(x=0,y=0,width=200,height=170)
    discount=Label(summaryfrme, text="Discount")
    discount1=Label(summaryfrme, text="0.00")
    sub=Label(summaryfrme, text="Subtotal")
    sub1=Label(summaryfrme, text="0.00")
    taxl1=Label(summaryfrme, text="Tax1")
    tax_1=Label(summaryfrme, text="0.00")
    taxl2=Label(summaryfrme, text="Tax2")
    tax_2=Label(summaryfrme, text="0.00")
    cost=Label(summaryfrme, text="Extra cost")
    cost1=Label(summaryfrme, text="0.00")
    invoicetot=Label(summaryfrme, text="Invoice total")
    invoicetot1=Label(summaryfrme, text="0.00")
    total=Label(summaryfrme, text="Total paid")
    total1=Label(summaryfrme, text="0.00")
    balance=Label(summaryfrme, text="Balance")
    balance1=Label(summaryfrme, text="0.00")

    dis_symb = Label(summaryfrme,text=comp_data[6])
    sub_symb = Label(summaryfrme,text=comp_data[6])
    tax1_symb = Label(summaryfrme,text=comp_data[6])
    tax2_symb = Label(summaryfrme,text=comp_data[6])
    cost_symb = Label(summaryfrme,text=comp_data[6])
    invtot_symb = Label(summaryfrme,text=comp_data[6])
    total_symb = Label(summaryfrme,text=comp_data[6])
    bal_symb = Label(summaryfrme,text=comp_data[6])

    comp_sql = "SELECT * FROM company"
    fbcursor.execute(comp_sql,)
    comp_data = fbcursor.fetchone()

    if comp_data[12] == "1":
      if comp_data[6] == "؋":
        dis_symb.place(x=170,y=0)
        sub_symb.place(x=170,y=21)
        cost_symb.place(x=170,y=42)
        invtot_symb.place(x=170,y=63)
        total_symb.place(x=170,y=84)
        bal_symb.place(x=170,y=105)
        discount.place(x=0 ,y=0)
        discount1.place(x=112 ,y=0)
        sub.place(x=0 ,y=21)
        sub1.place(x=112 ,y=21)
        cost.place(x=0 ,y=42)
        cost1.place(x=112 ,y=42)
        invoicetot.place(x=0 ,y=63)
        invoicetot1.place(x=112 ,y=63)
        total.place(x=0 ,y=84)
        total1.place(x=112 ,y=84)
        balance.place(x=0 ,y=105)
        balance1.place(x=112 ,y=105)
      else:
        dis_symb.place(x=112,y=0)
        sub_symb.place(x=112,y=21)
        cost_symb.place(x=112,y=42)
        invtot_symb.place(x=112,y=63)
        total_symb.place(x=112,y=84)
        bal_symb.place(x=112,y=105)
        discount.place(x=0 ,y=0)
        discount1.place(x=140 ,y=0)
        sub.place(x=0 ,y=21)
        sub1.place(x=140 ,y=21)
        cost.place(x=0 ,y=42)
        cost1.place(x=140 ,y=42)
        invoicetot.place(x=0 ,y=63)
        invoicetot1.place(x=140 ,y=63)
        total.place(x=0 ,y=84)
        total1.place(x=140 ,y=84)
        balance.place(x=0 ,y=105)
        balance1.place(x=140 ,y=105)
    elif comp_data[12] == "2":
      if comp_data[6] == "؋":
        dis_symb.place(x=170,y=0)
        sub_symb.place(x=170,y=21)
        tax1_symb.place(x=170,y=42)
        cost_symb.place(x=170,y=63)
        invtot_symb.place(x=170,y=84)
        total_symb.place(x=170,y=105)
        bal_symb.place(x=170,y=126)
        discount.place(x=0 ,y=0)
        discount1.place(x=112 ,y=0)
        sub.place(x=0 ,y=21)
        sub1.place(x=112 ,y=21)
        taxl1.place(x=0 ,y=42)
        tax_1.place(x=112 ,y=42)
        cost.place(x=0 ,y=63)
        cost1.place(x=112 ,y=63)
        invoicetot.place(x=0 ,y=84)
        invoicetot1.place(x=112 ,y=84)
        total.place(x=0 ,y=105)
        total1.place(x=112 ,y=105)
        balance.place(x=0 ,y=126)
        balance1.place(x=112 ,y=126)
      else:
        dis_symb.place(x=112,y=0)
        sub_symb.place(x=112,y=21)
        tax1_symb.place(x=112,y=42)
        cost_symb.place(x=112,y=63)
        invtot_symb.place(x=112,y=84)
        total_symb.place(x=112,y=105)
        bal_symb.place(x=112,y=126)
        discount.place(x=0 ,y=0)
        discount1.place(x=140 ,y=0)
        sub.place(x=0 ,y=21)
        sub1.place(x=140 ,y=21)
        taxl1.place(x=0 ,y=42)
        tax_1.place(x=140 ,y=42)
        cost.place(x=0 ,y=63)
        cost1.place(x=140 ,y=63)
        invoicetot.place(x=0 ,y=84)
        invoicetot1.place(x=140 ,y=84)
        total.place(x=0 ,y=105)
        total1.place(x=140 ,y=105)
        balance.place(x=0 ,y=126)
        balance1.place(x=140 ,y=126)
    elif comp_data[12] == "3":
      if comp_data[6] == "؋":
        dis_symb.place(x=170,y=0)
        sub_symb.place(x=170,y=18)
        tax1_symb.place(x=170,y=35)
        tax2_symb.place(x=170,y=52)
        cost_symb.place(x=170,y=70)
        invtot_symb.place(x=170,y=88)
        total_symb.place(x=170,y=106)
        bal_symb.place(x=170,y=124)
        discount.place(x=0 ,y=0)
        discount1.place(x=112 ,y=0)
        sub.place(x=0 ,y=18)
        sub1.place(x=112 ,y=18)
        taxl1.place(x=0 ,y=35)
        tax_1.place(x=112 ,y=35)
        taxl2.place(x=0 ,y=52)
        tax_2.place(x=112 ,y=52)
        cost.place(x=0 ,y=70)
        cost1.place(x=112 ,y=70)
        invoicetot.place(x=0 ,y=88)
        invoicetot1.place(x=112 ,y=88)
        total.place(x=0 ,y=106)
        total1.place(x=112 ,y=106)
        balance.place(x=0 ,y=124)
        balance1.place(x=112 ,y=124)
      else:
        dis_symb.place(x=110,y=0)
        sub_symb.place(x=110,y=18)
        tax1_symb.place(x=110,y=35)
        tax2_symb.place(x=110,y=52)
        cost_symb.place(x=110,y=70)
        invtot_symb.place(x=110,y=88)
        total_symb.place(x=110,y=106)
        bal_symb.place(x=110,y=124)
        discount.place(x=0 ,y=0)
        discount1.place(x=140 ,y=0)
        sub.place(x=0 ,y=18)
        sub1.place(x=140 ,y=18)
        taxl1.place(x=0 ,y=35)
        tax_1.place(x=140 ,y=35)
        taxl2.place(x=0 ,y=52)
        tax_2.place(x=140 ,y=52)
        cost.place(x=0 ,y=70)
        cost1.place(x=140 ,y=70)
        invoicetot.place(x=0 ,y=88)
        invoicetot1.place(x=140 ,y=88)
        total.place(x=0 ,y=106)
        total1.place(x=140 ,y=106)
        balance.place(x=0 ,y=124)
        balance1.place(x=140 ,y=124)
    
    ############### Line Up ###############
    def inv_lineup():
      rows = add_newline_tree.selection()
      for row in rows:
        add_newline_tree.move(row, add_newline_tree.parent(row), add_newline_tree.index(row)-1)

    ############### Line Down ###############
    def inv_linedown():
      rows = add_newline_tree.selection()
      for row in rows:
        add_newline_tree.move(row, add_newline_tree.parent(row), add_newline_tree.index(row)+1)


    fir5Frame=Frame(pop,height=38,width=210)
    fir5Frame.place(x=735,y=485)
    btn_linedown=Button(fir5Frame, compound="left", text="Line Down",command=inv_lineup)
    btn_linedown.place(x=75, y=0)
    btn_lineup=Button(fir5Frame, compound="left", text="Line Up",command=inv_linedown)
    btn_lineup.place(x=150, y=0)


  ###################### End create invoice ####################


  def inv_edit_view():
    if not inv_tree.selection():
      messagebox.showwarning("F-Billing Revolution 2022","No line selected.\nSelect a line before editing.")
    else:
      pop_1=Toplevel(inv_midFrame)
      pop_1.title("Invoice")
      pop_1.geometry("950x690+150+0")
      edit_inv_fetch = inv_tree.item(inv_tree.focus())["values"][1]
      sql_edit = "SELECT * FROM Invoice WHERE invoice_number=%s"
      val_edit = (edit_inv_fetch,)
      fbcursor.execute(sql_edit,val_edit)
      edit_inv_data = fbcursor.fetchone()

      def edit_invoice():
        invoice_number_1 = inv_number_entry_1.get()
        invodate_1 = inv_date_entry_1.get_date()
        if checkvarStatus5_1.get() == 0:
          duedate_1 = NULL
        else:
          duedate_1 = inv_duedate_entry_1.get_date()
        term_of_payment_1 = inv_terms_combo_1.get()
        ref_1 = inv_ref_entry_1.get()
        status_1 = draft_label_1.cget("text")
        emailon_1 = never1_label_1.cget("text")
        printon_1 = never2_label_1.cget("text")
        # smson = 
        subtotal_1 = sub1_1.cget("text")
        invoicetot_1 = invoicetot1_1.cget("text")
        totpaid_1 = total1_1.cget("text")
        balance_1 = balance1_1.cget("text")
        extracostname_1 = ex_costn_combo_1.get()
        extracost_1 = cost1_1.cget("text")
        template_1 = template_entry_1.get()
        salesper_1 = sales_per_entry_1.get()
        discourate_1 = dis_rate_entry_1.get()
        discount_1 = discount1_1.cget("text")
        tax1_01 = tax1_1.cget("text")
        category_1 = category_entry_1.get()
        businessname_1 = inv_combo_e1_1.get()
        businessaddress_1 = inv_addr_e2_1.get("1.0",END)
        shipname_1 = inv_shipto_e3_1.get()
        shipaddress_1 = inv_addr_e4_1.get("1.0",END)
        cpemail_1 = inv_email_e5_1.get()
        cpmobileforsms_1 = inv_sms_e6_1.get()
        if checkrecStatus_1.get() == 0 :
          next_invoice_1 = NULL
          stop_recurring_1 = NULL
          recurring_period_1 = NULL
          recurring_period_month_1 = NULL
          recurring_check_1 = checkrecStatus_1.get()
        else:
          next_invoice_1 = recur_nxt_inv_date_1.get_date()
          stop_recurring_1 = recur_stop_date_1.get_date()
          recurring_period_1 = recur_period_entry_1.get()
          recurring_period_month_1 = recur_month_combo_1.get()
          recurring_check_1 = checkrecStatus_1.get()
        title_text_1 = title_txt_combo_1.get()
        header_text_1 = pageh_txt_combo_1.get()
        footer_text_1 = footer_txt_combo_1.get()
        tax2_01 = tax2_1.cget("text")
        comments_1 = comment_txt_1.get("1.0",END)
        privatenotes_1 = private_note_txt_1.get("1.0",END)
        terms_1 = term_txt_1.get("1.0",END)
        paid_n_closed = 0
        doc_get_1 = doc_tree_1.get_children()
        if len(add_newline_tree_1.get_children()) == 0:
          quantity_1 = 0
        else:
          for qn in add_newline_tree_1.get_children():
            quantity_1 = add_newline_tree_1.item(qn)["values"][4]

        del_storp_sql = "DELETE FROM storingproduct WHERE invoice_number=%s"
        del_storp_val = (invoice_number_1,)
        fbcursor.execute(del_storp_sql,del_storp_val)
        fbilldb.commit()

        comp_sql = "SELECT * FROM company"
        fbcursor.execute(comp_sql,)
        comp_data_1 = fbcursor.fetchone()
        for record in add_newline_tree_1.get_children():
          storingproduct = add_newline_tree_1.item(record)["values"]
          if not comp_data_1:
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data_1[12] == "1":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data_1[12] == "2":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
          elif comp_data_1[12] == "3":
            storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
            storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
            fbcursor.execute(storepro_sql,storepro_val)
            fbilldb.commit()
            
      
        del_file_sql = "DELETE FROM documents WHERE invoice_number=%s"
        del_file_val = (invoice_number_1,)
        fbcursor.execute(del_file_sql,del_file_val)
        fbilldb.commit()
        for f in doc_get_1:
          files = doc_tree_1.item(f)["values"][1]
          file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
          file_val = (invoice_number_1,files)
          fbcursor.execute(file_sql,file_val)
          fbilldb.commit()

        
        inv_sql='UPDATE invoice SET invodate=%s,duedate=%s,status=%s,emailon=%s,printon=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s,extracostname=%s,extracost=%s,template=%s,salesper=%s,discourate=%s,tax1=%s,category=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,cpemail=%s,cpmobileforsms=%s,recurring_period=%s,recurring_period_month=%s,next_invoice=%s,stop_recurring=%s,discount=%s,terms=%s,tax2=%s,quantity=%s,title_text=%s,header_text=%s,footer_text=%s,term_of_payment=%s,ref=%s,comments=%s,privatenotes=%s,recurring_check=%s,paid_n_closed=%s WHERE invoice_number=%s' #adding values into db
        inv_val=(invodate_1,duedate_1,status_1,emailon_1,printon_1,subtotal_1,invoicetot_1,totpaid_1,balance_1,extracostname_1,extracost_1,template_1,salesper_1,discourate_1,tax1_01,category_1,businessname_1,businessaddress_1,shipname_1,shipaddress_1,cpemail_1,cpmobileforsms_1,recurring_period_1,recurring_period_month_1,next_invoice_1,stop_recurring_1,discount_1,terms_1,tax2_01,quantity_1,title_text_1,header_text_1,footer_text_1,term_of_payment_1,ref_1,comments_1,privatenotes_1,recurring_check_1,paid_n_closed,invoice_number_1,)
        fbcursor.execute(inv_sql,inv_val)
        fbilldb.commit()
        pop_1.destroy()
        messagebox.showinfo("F-Billing Revolution","Invoice saved")

        sql = "SELECT * FROM Invoice"
        fbcursor.execute(sql)
        invoice_records = fbcursor.fetchall()

        for record in inv_tree.get_children():
          inv_tree.delete(record)

        count = 0
        for i in invoice_records:
          if comp_data_1[7] == "before amount":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data_1[6] + str(i[8]),comp_data_1[6] + str(i[9]),comp_data_1[6] + str(i[10])))
          elif comp_data_1[7] == "after amount":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data_1[6],str(i[9]) + comp_data_1[6],str(i[10]) + comp_data_1[6]))
          elif comp_data_1[7] == "before amount with space":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data_1[6] + " " + str(i[8]),comp_data_1[6] + " " + str(i[9]),comp_data_1[6] + " " + str(i[10])))
          elif comp_data_1[7] == "after amount with space":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data_1[6],str(i[9]) + " " + comp_data_1[6],str(i[10]) + " " + comp_data_1[6]))
        count += 1
        
        try:
          if showtotsum_btn['text'] == "Hide totals\nSum":
            it = []
            tp = []
            bl = []
            for i in inv_tree.get_children():
              invtot = inv_tree.item(i,'values')[9]
              totpaid = inv_tree.item(i,'values')[10]
              balance = inv_tree.item(i,'values')[11]
              if comp_data_1[7] == "before amount":
                it.append(invtot.split(str(comp_data_1[6]))[-1])
                tp.append(totpaid.split(str(comp_data_1[6]))[-1])
                bl.append(balance.split(str(comp_data_1[6]))[-1])
              if comp_data_1[7] == "after amount":
                it.append(invtot.split(str(comp_data_1[6]))[0])
                tp.append(totpaid.split(str(comp_data_1[6]))[0])
                bl.append(balance.split(str(comp_data_1[6]))[0])
              if comp_data_1[7] == "before amount with space":
                it.append(invtot.split(' ')[-1])
                tp.append(totpaid.split(' ')[-1])
                bl.append(balance.split(' ')[-1])
              if comp_data_1[7] == "after amount with space":
                it.append(invtot.split(' ')[0])
                tp.append(totpaid.split(' ')[0])
                bl.append(balance.split(' ')[0])

            total_invtot = 0.0
            total_totpaid = 0.0
            total_balance = 0.0
            for a in it:
              total_invtot += float(a)
            for b in tp:
              total_totpaid += float(b)
            for c in bl:
              total_balance += float(c)
            if comp_data_1[7] == "before amount":
              invtot_label.config(text=comp_data_1[6] + str(round(total_invtot,2)))
              totpaid_label.config(text=comp_data_1[6] + str(round(total_totpaid,2)))
              balance_label.config(text=comp_data_1[6] + str(round(total_balance,2)))
            elif comp_data_1[7] == "after amount":
              invtot_label.config(text=str(round(total_invtot,2)) + comp_data_1[6])
              totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data_1[6])
              balance_label.config(text=str(round(total_balance,2)) + comp_data_1[6])
            elif comp_data_1[7] == "before amount  with space":
              invtot_label.config(text=comp_data_1[6] + " " + str(round(total_invtot,2)))
              totpaid_label.config(text=comp_data_1[6] + " " + str(round(total_totpaid,2)))
              balance_label.config(text=comp_data_1[6] + " " + str(round(total_balance,2)))
            elif comp_data_1[7] == "after amount with space":
              invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data_1[6])
              totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data_1[6])
              balance_label.config(text=str(round(total_balance,2)) + " " + comp_data_1[6])
          else:
            pass
        except:
          pass

        
        for record in inv_product_tree.get_children():
          inv_product_tree.delete(record)
        pro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        pro_val = (invoice_number_1,)
        fbcursor.execute(pro_sql,pro_val)
        product_details = fbcursor.fetchall()
        countpro = 0
        for i in product_details:
          if comp_data[12] == "1":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],str(i[13]) + " " + comp_data[6]))
          elif comp_data[12] == "2":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],i[11],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],i[11],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],i[11],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],i[11],str(i[13]) + " " + comp_data[6]))
          elif comp_data[12] == "3":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],i[11],i[12],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],i[11],i[12],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],i[11],i[12],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],i[11],i[12],str(i[13]) + " " + comp_data[6]))
        countpro += 1


      #select customer
      def inv_sel_customer_1():
        customer_selection_1=Toplevel()
        customer_selection_1.title("Select Customer")
        customer_selection_1.geometry("930x650+240+10")
        customer_selection_1.resizable(False, False)

        global select_cust_tree_1

        select_cust_tree_1=ttk.Treeview(customer_selection_1, height=27)
        select_cust_tree_1["columns"]=["1","2","3","4"]
        select_cust_tree_1.column("#0", width=35)
        select_cust_tree_1.column("1", width=160)
        select_cust_tree_1.column("2", width=160)
        select_cust_tree_1.column("3", width=140)
        select_cust_tree_1.column("4", width=140)
        select_cust_tree_1.heading("#0",text="")
        select_cust_tree_1.heading("1",text="Customer/Ventor ID")
        select_cust_tree_1.heading("2",text="Customer/Ventor Name")
        select_cust_tree_1.heading("3",text="Tel.")
        select_cust_tree_1.heading("4",text="Contact Person")
        select_cust_tree_1.place(x=5, y=45)

        sql = "SELECT * FROM Customer"
        fbcursor.execute(sql)
        customer_details = fbcursor.fetchall()

        count=0
        for i in customer_details:
          if True:
            select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
          else:
            pass
        count += 1



        def cust_tree_fetch_1():
          cust_tree_item_1 = select_cust_tree_1.item(select_cust_tree_1.focus())["values"][0]
          sql = "SELECT * FROM Customer WHERE customerno=%s"
          val = (cust_tree_item_1,)
          fbcursor.execute(sql,val)
          sel_cust_str_1 = fbcursor.fetchone()
          inv_combo_e1_1.delete(0, END)
          inv_combo_e1_1.insert(0,sel_cust_str_1[4])
          inv_addr_e2_1.delete('1.0',END)
          inv_addr_e2_1.insert('1.0',sel_cust_str_1[5])
          inv_shipto_e3_1.delete(0, END)
          inv_shipto_e3_1.insert(0, sel_cust_str_1[6])
          inv_addr_e4_1.delete('1.0',END)
          inv_addr_e4_1.insert('1.0',sel_cust_str_1[7])
          inv_email_e5_1.delete(0,END)
          inv_email_e5_1.insert(0,sel_cust_str_1[9])
          inv_sms_e6_1.delete(0,END)
          inv_sms_e6_1.insert(0,sel_cust_str_1[12])

          customer_selection_1.destroy()


        #add new customer
        def inv_create_newcustomer_1():
          def cancel_add_customer_1():
            vendor_1.destroy()
          def add_customer_1():
            customerno = cust_id_1.get()
            businessname = 	bn_1.get()
            if customerno == "" or businessname == "":
              messagebox.showerror("Empty Field", "Customer ID field and Business Name field is Required!")
            else:
              businessaddress = bus_address_1.get('1.0',END)
              contactperson = cn_1.get()
              cpemail = cem_1.get()
              cptelno = ct_1.get()
              cpfax = cf_1.get()
              cpmobileforsms = cs_1.get()
              taxexempt = check_taxexempt_1.get()
              specifictax1 = specf_tax1_entry_1.get()
              specifictax2 = specf_tax2_entry_1.get()
              discount = discount_entry_1.get()
              customertype = custypeVar_1.get()

              category = cust_cate_1.get()
              status = check_active_1.get()
              shipname = sn_1.get()
              shipaddress = ship_address_1.get('1.0',END)
              shipcontactperson = scn_1.get()
              shipcpemail = scem_1.get()
              shipcptelno = sct_1.get()
              shipcpfax = scf_1.get()
              country = countryVar_1.get()
              city = cityVar_1.get()
              notes = scroll_notes_1.get("1.0", END)
              custno_sql = "SELECT customerno FROM customer WHERE customerno=%s"
              custno_val = (customerno,)
              fbcursor.execute(custno_sql,custno_val)
              custno_data = fbcursor.fetchone()

              custname_sql = "SELECT customerno FROM customer WHERE businessname=%s"
              custname_val = (businessname,)
              fbcursor.execute(custname_sql,custname_val)
              custname_data = fbcursor.fetchone()

              if custno_data is None:
                if custname_data is None:
                  cust_add_sql = "INSERT INTO customer(customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2)VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)" #adding values into db
                  cust_add_val = (customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2)
                  fbcursor.execute(cust_add_sql,cust_add_val)
                  fbilldb.commit()
                  for record in select_cust_tree_1.get_children():
                    select_cust_tree_1.delete(record)
                  all_cust_sql = "SELECT * FROM customer"
                  fbcursor.execute(all_cust_sql)
                  all_cust_data = fbcursor.fetchall()

                  count_cus=0
                  for i in all_cust_data:
                    select_cust_tree_1.insert(parent='', index='end', iid=count_cus, text='', values=(i[24],i[4],i[10],i[8]))
                    count_cus +=1
                  
                  vendor_1.destroy()
                else:
                  messagebox.showerror("Already Exists", "Business name is already exists. Duplicate value not allowed")
              else:
                messagebox.showerror("Already Exists", "Customer ID value already exists. Duplicate value not allowed")
          def copy_bus_details_1():
            ship_name_1.delete(0,END)
            ship_name_1.insert(0,bus_name_1.get())
            ship_address_1.delete('1.0',END)
            ship_address_1.insert('1.0',bus_address_1.get('1.0',END))
          def copy_contper_details_1():
            shipcont_person_1.delete(0,END)
            shipcont_person_1.insert(0,cont_person_1.get())
            shipcont_email_1.delete(0,END)
            shipcont_email_1.insert(0,cont_email_1.get())
            shipcont_tel_1.delete(0,END)
            shipcont_tel_1.insert(0,cont_tel_1.get())
            shipcont_fax_1.delete(0,END)
            shipcont_fax_1.insert(0,cont_fax_1.get())



          vendor_1=Toplevel(inv_midFrame)
          vendor_1.title("Add new Customer")
          p2 = PhotoImage(file = "images/fbicon.png")
          vendor_1.iconphoto(False, p2)
          vendor_1.geometry("775x580+300+100")

          labelframe1 = LabelFrame(vendor_1,text="Customer",bg="#f5f3f2",font=("arial",15))
          labelframe1.place(x=10,y=10,width=755,height=530)

          custVar_1 = IntVar()
          customer_id_1=Label(labelframe1, text="Customer ID:",bg="#f5f3f2",fg="blue").place(x=10 ,y=7)
          cust_id_1=Entry(labelframe1)
          cust_id_1.place(x=120,y=7,width=200)

          cust_cate_1 = StringVar()
          category_1=Label(labelframe1, text="Category:",bg="#f5f3f2").place(x=330 ,y=7)
          cust_category_1 = ttk.Combobox(labelframe1,textvariable=cust_cate_1,width=35)
          category_sql = 'SELECT DISTINCT category FROM customer'
          fbcursor.execute(category_sql,)
          category_data = fbcursor.fetchall()
          if len(category_data) == 0:
            cust_category_1['values'] = 'Default'
          else:
            cust_category_1['values'] = category_data
            cust_category_1.current(0)
          cust_category_1.place(x=390 ,y=7,width=220)

          check_active_1 = IntVar()
          status_1=Label(labelframe1, text="Status:").place(x=620 ,y=7)
          cust_status_1 = Checkbutton(labelframe1,text="Active",variable=check_active_1,onvalue=1,offvalue=0,bg="#f5f3f2")
          cust_status_1.select()
          cust_status_1.place(x=670 ,y=6)
          
          labelframe2 = LabelFrame(labelframe1,text="Invoice to (appears on invoices)",bg="#f5f3f2")
          labelframe2.place(x=10,y=35,width=340,height=125)

          bn_1 = StringVar()
          bname_1 = Label(labelframe2, text="Business name:",bg="#f5f3f2",fg="blue").place(x=10,y=10)
          bus_name_1 = Entry(labelframe2,textvariable=bn_1)
          bus_name_1.place(x=110,y=10,width=210)

          badd_1 = StringVar()
          baddress_1 = Label(labelframe2, text="Address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
          bus_address_1 = scrolledtext.ScrolledText(labelframe2,)
          bus_address_1.place(x=110,y=35,width=210,height=63)
          
          btn_mover1_1 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_bus_details_1)
          btn_mover1_1.place(x=359, y=85,height=20)

          labelframe3 = LabelFrame(labelframe1,text="Ship to (appears on invoices)",bg="#f5f3f2")
          labelframe3.place(x=400,y=35,width=340,height=125)

          sn_1 = StringVar()
          sname_1 = Label(labelframe3, text="Ship to name:",bg="#f5f3f2").place(x=10,y=10)
          ship_name_1 = Entry(labelframe3,width=28,textvariable=sn_1)
          ship_name_1.place(x=110,y=10,width=210)
          sadd_1 = StringVar()
          saddress_1 = Label(labelframe3, text="Address:",bg="#f5f3f2").place(x=10,y=35)
          ship_address_1 = scrolledtext.ScrolledText(labelframe3)
          ship_address_1.place(x=110,y=35,width=210,height=63)
          
          labelframe4 = LabelFrame(labelframe1,text="Contact",bg="#f5f3f2")
          labelframe4.place(x=10,y=170,width=340,height=137)

          cn_1 = StringVar()
          cname_1 = Label(labelframe4, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
          cont_person_1 = Entry(labelframe4,textvariable=cn_1)
          cont_person_1.place(x=110,y=10,width=210)

          cem_1 = StringVar()
          cemail_1 = Label(labelframe4, text="E-mail address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
          cont_email_1 = Entry(labelframe4,textvariable=cem_1)

          def validate_email_1(value):
            
            """
            Validate the email entry
            :param value
            :return:
            """

            pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_email_1.config(fg="black")
            return True

          def on_invalid_email_1():
            cont_email_1.config(fg="red")

          valid_cmnd_1 = (labelframe2.register(validate_email_1), '%P')
          invalid_cmnd_1 = (labelframe2.register(on_invalid_email_1),)
          cont_email_1.config(validate='focusout',validatecommand=valid_cmnd_1,invalidcommand=invalid_cmnd_1)
          cont_email_1.place(x=110,y=35,width=210)
          

          ct_1 = StringVar()
          ctel_1 = Label(labelframe4, text="Tel. No:",bg="#f5f3f2").place(x=10,y=60)
          cont_tel_1 = Entry(labelframe4,textvariable=ct_1)

          def validate_tel_1(value):
                
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9,10}$'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_tel_1.config(fg="black")
            return True

          def on_invalid_tel_1():
            cont_tel_1.config(fg="red")
                
          valid_tel_cmnd_1 = (labelframe2.register(validate_tel_1), '%P')
          invalid_tel_cmnd_1 = (labelframe2.register(on_invalid_tel_1),)
          
          
          cont_tel_1.config(validate='focusout', validatecommand=valid_tel_cmnd_1, invalidcommand=invalid_tel_cmnd_1)
          cont_tel_1.place(x=110,y=60,width=90)

          cf_1 = StringVar()
          cfax_1 = Label(labelframe4, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
          cont_fax_1 = Entry(labelframe4,textvariable=cf_1)

          def validate_fax_1(value):
            """
            Validate the email entry
            :param value:
            :return:
            """
            pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
            if re.fullmatch(pattern,value) is None:
              return False
            cont_fax_1.config(fg="black")
            return True

          def on_invalid_fax_1():
            cont_fax_1.config(fg="red")

          valid_fax_cmnd_1 = (labelframe2.register(validate_fax_1),'%P')
          invalid_fax_cmnd_1 = (labelframe2.register(on_invalid_fax_1),)
          cont_fax_1.config(validate='focusout',validatecommand=valid_fax_cmnd_1,invalidcommand=invalid_fax_cmnd_1)
          cont_fax_1.place(x=230,y=60,width=90)


          cs_1 = StringVar()
          csms_1 = Label(labelframe4, text="Mobile number for SMS notifications:",bg="#f5f3f2").place(x=10,y=85)
          cont_mob_1 = Entry(labelframe4,textvariable=cs_1)

          def validate_sms_1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9}$'
            if re.fullmatch(pattern, value) is None:
              return False
            cont_mob_1.config(fg="black")
            return True

          def on_invalid_sms_1():
            cont_mob_1.config(fg="red")
            
          valid_sms_cmnd_1 = (labelframe2.register(validate_sms_1), '%P')
          invalid_sms_cmnd_1 = (labelframe2.register(on_invalid_sms_1),)
          cont_mob_1.config(validate='focusout', validatecommand=valid_sms_cmnd_1, invalidcommand=invalid_sms_cmnd_1)
          cont_mob_1.place(x=215,y=85,width=105)      

          btn_mover2_1 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_contper_details_1)
          btn_mover2_1.place(x=359, y=220,height=20)

          
          labelframe5 = LabelFrame(labelframe1,text="Ship to contact",bg="#f5f3f2")
          labelframe5.place(x=400,y=170,width=340,height=108)

          scn_1 = StringVar()
          scname_1 = Label(labelframe5, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
          shipcont_person_1 = Entry(labelframe5,textvariable=scn_1)
          shipcont_person_1.place(x=110,y=10,width=210)

          scem_1 = StringVar()
          scemail_1 = Label(labelframe5, text="E-mail address:",bg="#f5f3f2").place(x=10,y=35)
          shipcont_email_1 = Entry(labelframe5,textvariable=scem_1)
          def validate_shipemail_1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_email_1.config(fg="black")
            return True

          def on_invalid_shipemail_1():
            shipcont_email_1.config(fg="red")
                
          valid_shipemail_cmnd_1 = (labelframe2.register(validate_shipemail_1), '%P')
          invalid_shipemail_cmnd_1 = (labelframe2.register(on_invalid_shipemail_1),)
          shipcont_email_1.config(validate='focusout', validatecommand=valid_shipemail_cmnd_1, invalidcommand=invalid_shipemail_cmnd_1)
          shipcont_email_1.place(x=110,y=35,width=210)

          sct_1 = StringVar()
          sctel_1 = Label(labelframe5, text="Tel.number:",bg="#f5f3f2").place(x=10,y=60)
          shipcont_tel_1 = Entry(labelframe5,textvariable=sct_1)
          def validate_shiptel_1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^[0-9]\d{9,10}$'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_tel_1.config(fg="black")
            return True

          def on_invalid_shiptel_1():
            shipcont_tel_1.config(fg="red")
                
          valid_shiptel_cmnd_1 = (labelframe2.register(validate_shiptel_1), '%P')
          invalid_shiptel_cmnd_1 = (labelframe2.register(on_invalid_shiptel_1),)
          shipcont_tel_1.config(validate='focusout', validatecommand=valid_shiptel_cmnd_1, invalidcommand=invalid_shiptel_cmnd_1)
          shipcont_tel_1.place(x=110,y=60,width=90)

          scf_1 = StringVar()
          scfax_1 = Label(labelframe5, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
          shipcont_fax_1 = Entry(labelframe5,textvariable=scf_1)
          def validate_shipfax_1(value):
            
            """
            Validat the email entry
            :param value:
            :return:
            """
            pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
            if re.fullmatch(pattern, value) is None:
              return False
            shipcont_fax_1.config(fg="black")
            return True

          def on_invalid_shipfax_1():
            shipcont_fax_1.config(fg="red")
                
          valid_shipfax_cmnd_1 = (labelframe2.register(validate_shipfax_1), '%P')
          invalid_shipfax_cmnd_1 = (labelframe2.register(on_invalid_shipfax_1),)
          shipcont_fax_1.config(validate='focusout', validatecommand=valid_shipfax_cmnd_1, invalidcommand=invalid_shipfax_cmnd_1)
          shipcont_fax_1.place(x=230,y=60,width=90)

          labelframe6 = LabelFrame(labelframe1,text="Payment Option",bg="#f5f3f2")
          labelframe6.place(x=10,y=317,width=340,height=80)

          check_taxexempt_1 = StringVar()
          checkbtn_taxexempt_1 = Checkbutton(labelframe6,text="Tax Exempt",variable=check_taxexempt_1,onvalue=1,offvalue=0,bg="#f5f3f2",font=("arial", 8))
          checkbtn_taxexempt_1.place(x=10 ,y=6)
          checkbtn_taxexempt_1.select()

          spfc_tax1_1 = IntVar() 
          tax_sql = "SELECT taxtype FROM company"
          fbcursor.execute(tax_sql,)
          tax_data = fbcursor.fetchone()
          def tax_t_1(S,d):
            if d == '1':
              if not S in ['.','0','1','2','3','4','5','6','7','8','9']:
                return False
              return True
              
            if d.isdigit():
              return True
          valid_spfctax1_1 = (labelframe6.register(tax_t_1), '%S','%d')
          specf_tax1_entry_1 = Entry(labelframe6, textvariable=spfc_tax1_1)
          specf_tax2_entry_1 = Entry(labelframe6,width=10)
          if tax_data[0] == '3':
            specf_tax1_1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=150,y=7)
            specf_tax1_entry_1 = Entry(labelframe6)
            specf_tax1_entry_1.config(validate='key',validatecommand=valid_spfctax1_1)
            specf_tax1_entry_1.place(x=250,y=7,width=70)
            specf_tax2_1 = Label(labelframe6,text="Specific Tax2%::").place(x=150,y=30)
            specf_tax2_entry_1.config(validate='key',validatecommand=valid_spfctax1_1)
            specf_tax2_entry_1.place(x=250,y=30,width=70)
          elif tax_data[0] == '2':
            specf_tax1_1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=180,y=5)
            specf_tax1_entry_1.config(validate='key',validatecommand=valid_spfctax1_1)
            specf_tax1_entry_1.place(x=250,y=7,width=70)
          elif tax_data[0] == '1':
            pass

          discVar_1 = IntVar()
          discount_1 = Label(labelframe6, text="Discount%:",bg="#f5f3f2").place(x=10,y=30)
          discount_entry_1 = Entry(labelframe6)
          discount_entry_1.config(validate='key',validatecommand=(valid_spfctax1_1))
          discount_entry_1.place(x=80,y=30,width=70)

          labelframe7 = LabelFrame(labelframe1,text="Additional Info",bg="#f5f3f2")
          labelframe7.place(x=400,y=288,width=340,height=80)

          countryVar_1 = StringVar()
          country_1 = Label(labelframe7, text="country:",bg="#f5f3f2").place(x=10,y=5)
          addi_country_1 = ttk.Combobox(labelframe7,textvariable=countryVar_1)
          addi_country_1.place(x=110,y=5,width=210)
          addi_country_1['values'] = ('India','America')

          cityVar_1 = StringVar()
          city_1 = Label(labelframe7, text="City:",bg="#f5f3f2").place(x=10,y=30)
          addi_city_1 = Entry(labelframe7,textvariable=cityVar_1)
          addi_city_1.place(x=110,y=30,width=210)

          labelframe8 = LabelFrame(labelframe1,text="Customer Type",bg="#f5f3f2")
          labelframe8.place(x=10,y=405,width=340,height=90)
          custypeVar_1 = StringVar()
          client_radio_1 = Radiobutton(labelframe8,text=" Client ",variable=custypeVar_1,value="Client",bg="#f5f3f2")
          client_radio_1.select()
          client_radio_1.place(x=5,y=15)
          vendor_radio_1 = Radiobutton(labelframe8,text=" Vendor ",variable=custypeVar_1,value="Vendor",bg="#f5f3f2")
          vendor_radio_1.place(x=90,y=15)
          both_radio_1 = Radiobutton(labelframe8,text=" Both(client/vendor)",variable=custypeVar_1,value="Both(client/vendor)",bg="#f5f3f2")
          both_radio_1.place(x=180,y=15)
          

          labelframe9 = LabelFrame(labelframe1,text="Notes",bg="#f5f3f2")
          labelframe9.place(x=400,y=380,width=340,height=115)

          scroll_notes_1 = scrolledtext.ScrolledText(labelframe9)
          scroll_notes_1.place(x=20,y=10,height=70,width=295)

          add_customer_btnok_1 = Button(vendor_1,width=50,bg="#f5f3f2",compound = LEFT,image=tick ,text="OK",command=add_customer_1)
          add_customer_btnok_1.place(x=20, y=545)
          add_customer_btncancel_1 = Button(vendor_1,width=80,bg="#f5f3f2",compound = LEFT,image=cancel,text="Cancel",command=cancel_add_customer_1)
          add_customer_btncancel_1.place(x=665, y=545)


        #edi customer
        def inv_edit_customer_1():
          try:
            selected_custid = select_cust_tree_1.item(select_cust_tree_1.focus())["values"][0]
            sel_cust_sql = "SELECT * FROM customer WHERE customerno=%s"
            sel_cust_val = (selected_custid,)
            fbcursor.execute(sel_cust_sql,sel_cust_val)
            sel_cust_data = fbcursor.fetchone()
            def cancel_edit_customer_1():
              edit_vendor_1.destroy()
            def edit_customer_1():
              customerno = cust_id1_1.get()
              businessname = 	bn1_1.get()
              businessaddress = bus_address1_1.get('1.0',END)
              contactperson = cn1_1.get()
              cpemail = cem1_1.get()
              cptelno = ct1_1.get()
              cpfax = cf1_1.get()
              cpmobileforsms = cs1_1.get()
              taxexempt = check_taxexempt1_1.get()
              specifictax1 = specf_tax1_entry1_1.get()
              specifictax2 = specf_tax2_entry1_1.get()
              discount = discount_entry1_1.get()
              customertype = custypeVar1_1.get()

              category = cust_cate1_1.get()
              status = check_active1_1.get()
              shipname = sn1_1.get()
              shipaddress = ship_address1_1.get('1.0',END)
              shipcontactperson = scn1_1.get()
              shipcpemail = scem1_1.get()
              shipcptelno = sct1_1.get()
              shipcpfax = scf1_1.get()
              country = countryVar1_1.get()
              city = cityVar1_1.get()
              notes = scroll_notes1_1.get("1.0", END)
              custno_sql = "SELECT * FROM customer WHERE customerno=%s"
              custno_val = (customerno,)
              fbcursor.execute(custno_sql,custno_val)
              custno_data = fbcursor.fetchone()

              cust_add_sql = "UPDATE customer SET customerno=%s,category=%s,status=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,contactperson=%s,cpemail=%s,cptelno=%s,cpfax=%s,cpmobileforsms=%s,shipcontactperson=%s,shipcpemail=%s,shipcptelno=%s,shipcpfax=%s,taxexempt=%s,specifictax1=%s,discount=%s,country=%s,city=%s,customertype=%s,notes=%s,specifictax2=%s WHERE customerno=%s" #adding values into db
              cust_add_val = (customerno,category,status,businessname,businessaddress,shipname,shipaddress,contactperson,cpemail,cptelno,cpfax,cpmobileforsms,shipcontactperson,shipcpemail,shipcptelno,shipcpfax,taxexempt,specifictax1,discount,country,city,customertype,notes,specifictax2,customerno)
              fbcursor.execute(cust_add_sql,cust_add_val)
              fbilldb.commit()
              for record in select_cust_tree_1.get_children():
                select_cust_tree_1.delete(record)
              all_cust_sql = "SELECT * FROM customer"
              fbcursor.execute(all_cust_sql)
              all_cust_data = fbcursor.fetchall()

              count_cus=0
              for i in all_cust_data:
                select_cust_tree_1.insert(parent='', index='end', iid=count_cus, text='', values=(i[24],i[4],i[10],i[8]))
                count_cus +=1
              
              edit_vendor_1.destroy()
            
            def copy_bus_details1_1():
              ship_name1_1.delete(0,END)
              ship_name1_1.insert(0,bus_name1_1.get())
              ship_address1_1.delete('1.0',END)
              ship_address1_1.insert('1.0',bus_address1_1.get('1.0',END))
            def copy_contper_details1_1():
              shipcont_person1_1.delete(0,END)
              shipcont_person1_1.insert(0,cont_person1_1.get())
              shipcont_email1_1.delete(0,END)
              shipcont_email1_1.insert(0,cont_email1_1.get())
              shipcont_tel1_1.delete(0,END)
              shipcont_tel1_1.insert(0,cont_tel1_1.get())
              shipcont_fax1_1.delete(0,END)
              shipcont_fax1_1.insert(0,cont_fax1_1.get())
                



            edit_vendor_1=Toplevel(inv_midFrame)
            edit_vendor_1.title("Edit Vendor")
            p2 = PhotoImage(file = "images/fbicon.png")
            edit_vendor_1.iconphoto(False, p2)
            edit_vendor_1.geometry("775x580+300+100")

            labelframe1 = LabelFrame(edit_vendor_1,text="Customer",bg="#f5f3f2",font=("arial",15))
            labelframe1.place(x=10,y=10,width=755,height=530)

            custVar1_1 = IntVar()
            customer_id1_1=Label(labelframe1, text="Customer ID:",bg="#f5f3f2",fg="blue").place(x=10 ,y=7)
            cust_id1_1=Entry(labelframe1)
            cust_id1_1.delete(0,END)
            cust_id1_1.insert(0,sel_cust_data[24])
            cust_id1_1.config(state=DISABLED)
            cust_id1_1.place(x=120,y=7,width=200)

            cust_cate1_1 = StringVar()
            category1_1=Label(labelframe1, text="Category:",bg="#f5f3f2").place(x=330 ,y=7)
            cust_category1_1= ttk.Combobox(labelframe1,textvariable=cust_cate1_1,width=35)
            category_sql = 'SELECT DISTINCT category FROM customer'
            fbcursor.execute(category_sql,)
            category_data = fbcursor.fetchall()
            if len(category_data) == 0:
              cust_category1_1['values'] = 'Default'
            else:
              cust_category1_1['values'] = category_data
              cust_category1_1.current(0)
            cust_category1_1.delete(0,END)
            cust_category1_1.insert(0,sel_cust_data[2])
            cust_category1_1.place(x=390 ,y=7,width=220)

            check_active1_1 = IntVar()
            status1_1=Label(labelframe1, text="Status:").place(x=620 ,y=7)
            cust_status1_1 = Checkbutton(labelframe1,text="Active",variable=check_active1_1,onvalue=1,offvalue=0,bg="#f5f3f2")
            if sel_cust_data[3] == "0":
              cust_status1_1.deselect()
            else:
              cust_status1_1.select()
            cust_status1_1.place(x=670 ,y=6)
            
            labelframe2 = LabelFrame(labelframe1,text="Invoice to (appears on invoices)",bg="#f5f3f2")
            labelframe2.place(x=10,y=35,width=340,height=125)

            bn1_1 = StringVar()
            bname1_1 = Label(labelframe2, text="Business name:",bg="#f5f3f2",fg="blue").place(x=10,y=10)
            bus_name1_1 = Entry(labelframe2,textvariable=bn1_1)
            bus_name1_1.delete(0,END)
            bus_name1_1.insert(0,sel_cust_data[4])
            bus_name1_1.place(x=110,y=10,width=210)

            badd1_1 = StringVar()
            baddress1_1 = Label(labelframe2, text="Address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
            bus_address1_1 = scrolledtext.ScrolledText(labelframe2,)
            bus_address1_1.delete("1.0",END)
            bus_address1_1.insert("1.0",sel_cust_data[5])
            bus_address1_1.place(x=110,y=35,width=210,height=63)
            
            btn_mover11_1 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_bus_details1_1)
            btn_mover11_1.place(x=359, y=85,height=20)

            labelframe3 = LabelFrame(labelframe1,text="Ship to (appears on invoices)",bg="#f5f3f2")
            labelframe3.place(x=400,y=35,width=340,height=125)

            sn1_1 = StringVar()
            sname1_1 = Label(labelframe3, text="Ship to name:",bg="#f5f3f2").place(x=10,y=10)
            ship_name1_1 = Entry(labelframe3,width=28,textvariable=sn1_1)
            ship_name1_1.delete(0,END)
            ship_name1_1.insert(0,sel_cust_data[6])
            ship_name1_1.place(x=110,y=10,width=210)
            sadd1_1 = StringVar()
            saddress1_1 = Label(labelframe3, text="Address:",bg="#f5f3f2").place(x=10,y=35)
            ship_address1_1 = scrolledtext.ScrolledText(labelframe3)
            ship_address1_1.delete('1.0',END)
            ship_address1_1.insert('1.0',sel_cust_data[7])
            ship_address1_1.place(x=110,y=35,width=210,height=63)
            
            labelframe4 = LabelFrame(labelframe1,text="Contact",bg="#f5f3f2")
            labelframe4.place(x=10,y=170,width=340,height=137)

            cn1_1 = StringVar()
            cname1_1 = Label(labelframe4, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
            cont_person1_1 = Entry(labelframe4,textvariable=cn1_1)
            cont_person1_1.delete(0,END)
            cont_person1_1.insert(0,sel_cust_data[8])
            cont_person1_1.place(x=110,y=10,width=210)

            cem1_1 = StringVar()
            cemail1_1 = Label(labelframe4, text="E-mail address:",bg="#f5f3f2",fg="blue").place(x=10,y=35)
            cont_email1_1 = Entry(labelframe4,textvariable=cem1_1)
            cont_email1_1.delete(0,END)
            cont_email1_1.insert(0,sel_cust_data[9])

            def validate_email1_1(value):
              
              """
              Validate the email entry
              :param value
              :return:
              """

              pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
              if re.fullmatch(pattern, value) is None:
                return False
              cont_email1_1.config(fg="black")
              return True

            def on_invalid_email1_1():
              cont_email1_1.config(fg="red")

            valid_cmnd1_1 = (labelframe2.register(validate_email1_1), '%P')
            invalid_cmnd1_1 = (labelframe2.register(on_invalid_email1_1),)
            cont_email1_1.config(validate='focusout',validatecommand=valid_cmnd1_1,invalidcommand=invalid_cmnd1_1)
            cont_email1_1.place(x=110,y=35,width=210)
            

            ct1_1 = StringVar()
            ctel1_1 = Label(labelframe4, text="Tel. No:",bg="#f5f3f2").place(x=10,y=60)
            cont_tel1_1 = Entry(labelframe4,textvariable=ct1_1)
            cont_tel1_1.delete(0,END)
            cont_tel1_1.insert(0,sel_cust_data[10])

            def validate_tel1_1(value):
                  
              """
              Validat the email entry
              :param value:
              :return:
              """
              pattern = r'^[0-9]\d{9,10}$'
              if re.fullmatch(pattern, value) is None:
                return False
              cont_tel1_1.config(fg="black")
              return True

            def on_invalid_tel1_1():
              cont_tel1_1.config(fg="red")
                  
            valid_tel_cmnd1_1 = (labelframe2.register(validate_tel1_1), '%P')
            invalid_tel_cmnd1_1 = (labelframe2.register(on_invalid_tel1_1),)
            
            
            cont_tel1_1.config(validate='focusout', validatecommand=valid_tel_cmnd1_1, invalidcommand=invalid_tel_cmnd1_1)
            cont_tel1_1.place(x=110,y=60,width=90)

            cf1_1 = StringVar()
            cfax1_1 = Label(labelframe4, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
            cont_fax1_1 = Entry(labelframe4,textvariable=cf1_1)
            cont_fax1_1.delete(0,END)
            cont_fax1_1.insert(0,sel_cust_data[11])

            def validate_fax1_1(value):
              """
              Validate the email entry
              :param value:
              :return:
              """
              pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
              if re.fullmatch(pattern,value) is None:
                return False
              cont_fax1_1.config(fg="black")
              return True

            def on_invalid_fax1_1():
              cont_fax1_1.config(fg="red")

            valid_fax_cmnd1_1 = (labelframe2.register(validate_fax1_1),'%P')
            invalid_fax_cmnd1_1 = (labelframe2.register(on_invalid_fax1_1),)
            cont_fax1_1.config(validate='focusout',validatecommand=valid_fax_cmnd1_1,invalidcommand=invalid_fax_cmnd1_1)
            cont_fax1_1.place(x=230,y=60,width=90)


            cs1_1 = StringVar()
            csms1_1 = Label(labelframe4, text="Mobile number for SMS notifications:",bg="#f5f3f2").place(x=10,y=85)
            cont_mob1_1 = Entry(labelframe4,textvariable=cs1_1)
            cont_mob1_1.delete(0,END)
            cont_mob1_1.insert(0,sel_cust_data[12])

            def validate_sms1_1(value):
              
              """
              Validat the email entry
              :param value:
              :return:
              """
              pattern = r'^[0-9]\d{9}$'
              if re.fullmatch(pattern, value) is None:
                return False
              cont_mob1_1.config(fg="black")
              return True

            def on_invalid_sms1_1():
              cont_mob1_1.config(fg="red")
              
            valid_sms_cmnd1_1 = (labelframe2.register(validate_sms1_1), '%P')
            invalid_sms_cmnd1_1 = (labelframe2.register(on_invalid_sms1_1),)
            cont_mob1_1.config(validate='focusout', validatecommand=valid_sms_cmnd1_1, invalidcommand=invalid_sms_cmnd1_1)
            cont_mob1_1.place(x=215,y=85,width=105)      

            btn_mover21_1 = Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_contper_details1_1)
            btn_mover21_1.place(x=359, y=220,height=20)

            
            labelframe5 = LabelFrame(labelframe1,text="Ship to contact",bg="#f5f3f2")
            labelframe5.place(x=400,y=170,width=340,height=108)

            scn1_1 = StringVar()
            scname1_1 = Label(labelframe5, text="Contact person:",bg="#f5f3f2").place(x=10,y=10)
            shipcont_person1_1 = Entry(labelframe5,textvariable=scn1_1)
            shipcont_person1_1.delete(0,END)
            shipcont_person1_1.insert(0,sel_cust_data[13])
            shipcont_person1_1.place(x=110,y=10,width=210)

            scem1_1 = StringVar()
            scemail1_1 = Label(labelframe5, text="E-mail address:",bg="#f5f3f2").place(x=10,y=35)
            shipcont_email1_1 = Entry(labelframe5,textvariable=scem1_1)
            shipcont_email1_1.delete(0,END)
            shipcont_email1_1.insert(0,sel_cust_data[14])
            def validate_shipemail1_1(value):
              
              """
              Validat the email entry
              :param value:
              :return:
              """
              pattern = r'\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b'
              if re.fullmatch(pattern, value) is None:
                return False
              shipcont_email1_1.config(fg="black")
              return True

            def on_invalid_shipemail1_1():
              shipcont_email1_1.config(fg="red")
                  
            valid_shipemail_cmnd1_1 = (labelframe2.register(validate_shipemail1_1), '%P')
            invalid_shipemail_cmnd1_1 = (labelframe2.register(on_invalid_shipemail1_1),)
            shipcont_email1_1.config(validate='focusout', validatecommand=valid_shipemail_cmnd1_1, invalidcommand=invalid_shipemail_cmnd1_1)
            shipcont_email1_1.place(x=110,y=35,width=210)

            sct1_1 = StringVar()
            sctel1_1 = Label(labelframe5, text="Tel.number:",bg="#f5f3f2").place(x=10,y=60)
            shipcont_tel1_1 = Entry(labelframe5,textvariable=sct1_1)
            shipcont_tel1_1.delete(0,END)
            shipcont_tel1_1.insert(0,sel_cust_data[15])
            def validate_shiptel1_1(value):
              
              """
              Validat the email entry
              :param value:
              :return:
              """
              pattern = r'^[0-9]\d{9,10}$'
              if re.fullmatch(pattern, value) is None:
                return False
              shipcont_tel1_1.config(fg="black")
              return True

            def on_invalid_shiptel1_1():
              shipcont_tel1_1.config(fg="red")
                  
            valid_shiptel_cmnd1_1 = (labelframe2.register(validate_shiptel1_1), '%P')
            invalid_shiptel_cmnd1_1 = (labelframe2.register(on_invalid_shiptel1_1),)
            shipcont_tel1_1.config(validate='focusout', validatecommand=valid_shiptel_cmnd1_1, invalidcommand=invalid_shiptel_cmnd1_1)
            shipcont_tel1_1.place(x=110,y=60,width=90)

            scf1_1 = StringVar()
            scfax1_1 = Label(labelframe5, text="Fax:",bg="#f5f3f2").place(x=200,y=60)
            shipcont_fax1_1 = Entry(labelframe5,textvariable=scf1_1)
            shipcont_fax1_1.delete(0,END)
            shipcont_fax1_1.insert(0,sel_cust_data[16])
            def validate_shipfax1_1(value):
              
              """
              Validat the email entry
              :param value:
              :return:
              """
              pattern = r'^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$'
              if re.fullmatch(pattern, value) is None:
                return False
              shipcont_fax1_1.config(fg="black")
              return True

            def on_invalid_shipfax1_1():
              shipcont_fax1_1.config(fg="red")
                  
            valid_shipfax_cmnd1_1 = (labelframe2.register(validate_shipfax1_1), '%P')
            invalid_shipfax_cmnd1_1 = (labelframe2.register(on_invalid_shipfax1_1),)
            shipcont_fax1_1.config(validate='focusout', validatecommand=valid_shipfax_cmnd1_1, invalidcommand=invalid_shipfax_cmnd1_1)
            shipcont_fax1_1.place(x=230,y=60,width=90)

            labelframe6 = LabelFrame(labelframe1,text="Payment Option",bg="#f5f3f2")
            labelframe6.place(x=10,y=317,width=340,height=80)

            check_taxexempt1_1 = StringVar()
            checkbtn_taxexempt1_1 = Checkbutton(labelframe6,text="Tax Exempt",variable=check_taxexempt1_1,onvalue=1,offvalue=0,bg="#f5f3f2",font=("arial", 8))
            checkbtn_taxexempt1_1.place(x=10 ,y=6)
            if sel_cust_data[17] == "0":
              checkbtn_taxexempt1_1.deselect()
            else:
              checkbtn_taxexempt1_1.select()

            spfc_tax11_1 = IntVar() 
            tax_sql = "SELECT taxtype FROM company"
            fbcursor.execute(tax_sql,)
            tax_data = fbcursor.fetchone()
            def tax_t1_1(S,d):
              if d == '1':
                if not S in ['.','0','1','2','3','4','5','6','7','8','9']:
                  return False
                return True
                
              if d.isdigit():
                return True
            valid_spfctax11_1 = (labelframe6.register(tax_t1_1), '%S','%d')
            specf_tax1_entry1_1 = Entry(labelframe6, textvariable=spfc_tax11_1)
            specf_tax2_entry1_1 = Entry(labelframe6,width=10)
            if tax_data[0] == '3':
              specf_tax11_1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=150,y=7)
              specf_tax1_entry1_1 = Entry(labelframe6)
              specf_tax1_entry1_1.delete(0,END)
              specf_tax1_entry1_1.insert(0,sel_cust_data[18])
              specf_tax1_entry1_1.config(validate='key',validatecommand=valid_spfctax11_1)
              specf_tax1_entry1_1.place(x=250,y=7,width=70)
              specf_tax21_1 = Label(labelframe6,text="Specific Tax2%::").place(x=150,y=30)
              specf_tax2_entry1_1.delete(0,END)
              specf_tax2_entry1_1.insert(0,sel_cust_data[25])
              specf_tax2_entry1_1.config(validate='key',validatecommand=valid_spfctax11_1)
              specf_tax2_entry1_1.place(x=250,y=30,width=70)
            elif tax_data[0] == '2':
              specf_tax11_1 = Label(labelframe6, text="Specific Tax1 %:",bg="#f5f3f2").place(x=180,y=5)
              specf_tax1_entry1_1.delete(0,END)
              specf_tax1_entry1_1.insert(0,sel_cust_data[18])
              specf_tax1_entry1_1.config(validate='key',validatecommand=valid_spfctax11_1)
              specf_tax1_entry1_1.place(x=250,y=7,width=70)
            elif tax_data[0] == '1':
              pass

            discVar1_1 = IntVar()
            discount_1 = Label(labelframe6, text="Discount%:",bg="#f5f3f2").place(x=10,y=30)
            discount_entry1_1 = Entry(labelframe6)
            discount_entry1_1.delete(0,END)
            discount_entry1_1.insert(0,sel_cust_data[19])
            discount_entry1_1.config(validate='key',validatecommand=(valid_spfctax11_1))
            discount_entry1_1.place(x=80,y=30,width=70)

            labelframe7 = LabelFrame(labelframe1,text="Additional Info",bg="#f5f3f2")
            labelframe7.place(x=400,y=288,width=340,height=80)

            countryVar1_1 = StringVar()
            country1_1 = Label(labelframe7, text="country:",bg="#f5f3f2").place(x=10,y=5)
            addi_country1_1 = ttk.Combobox(labelframe7,textvariable=countryVar1_1)
            addi_country1_1.place(x=110,y=5,width=210)
            addi_country1_1['values'] = ('India','America')
            addi_country1_1.delete(0,END)
            addi_country1_1.insert(0,sel_cust_data[20])

            cityVar1_1 = StringVar()
            city1_1 = Label(labelframe7, text="City:",bg="#f5f3f2").place(x=10,y=30)
            addi_city1_1 = Entry(labelframe7,textvariable=cityVar1_1)
            addi_city1_1.place(x=110,y=30,width=210)
            addi_city1_1.delete(0,END)
            addi_city1_1.insert(0,sel_cust_data[21])

            labelframe8 = LabelFrame(labelframe1,text="Customer Type",bg="#f5f3f2")
            labelframe8.place(x=10,y=405,width=340,height=90)
            custypeVar1_1 = StringVar()
            client_radio1_1 = Radiobutton(labelframe8,text=" Client ",variable=custypeVar1_1,value="Client",bg="#f5f3f2")
            client_radio1_1.place(x=5,y=15)
            vendor_radio1_1 = Radiobutton(labelframe8,text=" Vendor ",variable=custypeVar1_1,value="Vendor",bg="#f5f3f2")
            vendor_radio1_1.place(x=90,y=15)
            both_radio1_1 = Radiobutton(labelframe8,text=" Both(client/vendor)",variable=custypeVar1_1,value="Both(client/vendor)",bg="#f5f3f2")
            both_radio1_1.place(x=180,y=15)
            if sel_cust_data[22] == "Client":
              client_radio1_1.select()
            elif sel_cust_data[22] == "Vendor":
              vendor_radio1_1.select()
            else:
              both_radio1_1.select()
            

            labelframe9 = LabelFrame(labelframe1,text="Notes",bg="#f5f3f2")
            labelframe9.place(x=400,y=380,width=340,height=115)

            scroll_notes1_1 = scrolledtext.ScrolledText(labelframe9)
            scroll_notes1_1.delete('1.0',END)
            scroll_notes1_1.insert('1.0',sel_cust_data[23])
            scroll_notes1_1.place(x=20,y=10,height=70,width=295)

            edit_customer_btnok_1 = Button(edit_vendor_1,width=50,bg="#f5f3f2",compound = LEFT,image=tick ,text="OK",command=edit_customer_1)
            edit_customer_btnok_1.place(x=20, y=545)
            edit_customer_btncancel_1 = Button(edit_vendor_1,width=80,bg="#f5f3f2",compound = LEFT,image=cancel,text="Cancel",command=cancel_edit_customer_1)
            edit_customer_btncancel_1.place(x=665, y=545)
          except:
            pass


        # filter customers
        
        def filter_customer_1():
          if cust_filter_entry_1.get() == '':
            sql = "SELECT * FROM Customer"
            fbcursor.execute(sql)
            customer_details = fbcursor.fetchall()
            for record in select_cust_tree_1.get_children():
              select_cust_tree_1.delete(record)

            count=0
            for i in customer_details:
              if True:
                select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
              else:
                pass
            count += 1
          else:
            filter = cust_filter_entry_1.get()
            for record in select_cust_tree_1.get_children():
              select_cust_tree_1.delete(record)

            sql = "SELECT * FROM Customer WHERE businessname=%s"
            val = (filter, )
            fbcursor.execute(sql,val)
            customer_details = fbcursor.fetchall() 

            count = 0
            for i in customer_details:
              if True:
                select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
              else:
                pass
            count += 1



          
        
        cust_filter_label_1=Label(customer_selection_1, text="Enter filter text").place(x=5, y=10)
        cust_filter_entry_1=Entry(customer_selection_1, width=20)
        cust_filter_entry_1.place(x=110, y=10)
        cust_filter_button_1=Button(customer_selection_1, text="Click Here",command=filter_customer_1)
        cust_filter_button_1.place(x=240, y=9,height=20,width=60)

      

        cust_fil_cat_tree_1=ttk.Treeview(customer_selection_1, height=27)
        cust_fil_cat_tree_1["columns"]=["1"]
        cust_fil_cat_tree_1.column("#0", width=25, minwidth=20)
        cust_fil_cat_tree_1.column("1", width=217, minwidth=25, anchor=CENTER)    
        cust_fil_cat_tree_1.heading("#0",text="", anchor=W)
        cust_fil_cat_tree_1.heading("1",text="View filter by category", anchor=CENTER)
        cust_fil_cat_tree_1.place(x=660, y=45)

        #filter customer
        def list_filter_customer_1(event):
          selected_cust_indices_1 = cust_fil_cat_list_1.curselection()
          selected_cust_filter_1 = ",".join([cust_fil_cat_list_1.get(i) for i in selected_cust_indices_1])

          if selected_cust_filter_1 == "               View all records" or selected_cust_filter_1 == "               View only Client/Vendor" or selected_cust_filter_1 == "               Default":
            cust_all_sql_1 = "SELECT * FROM Customer"
            fbcursor.execute(cust_all_sql_1)
            cust_all_data_1 = fbcursor.fetchall()
            for record in select_cust_tree_1.get_children():
              select_cust_tree_1.delete(record)
            count_all = 0
            for i in cust_all_data_1:
              select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
            count_all += 1
          elif selected_cust_filter_1 == "               View only Client type":
            client_sql_1 = "SELECT * FROM Customer WHERE customertype=%s"
            client_val_1 = ('Client',)
            fbcursor.execute(client_sql_1,client_val_1)
            client_data_1 = fbcursor.fetchall()
            for record in select_cust_tree_1.get_children():
              select_cust_tree_1.delete(record)
            count_c = 0
            for i in client_data_1:
              select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
            count_c += 1
          else:
            vendor_sql_1 = "SELECT * FROM Customer WHERE customertype=%s"
            vendor_val_1 = ('Vendor',)
            fbcursor.execute(vendor_sql_1,vendor_val_1)
            vendor_data_1 = fbcursor.fetchall()
            for record in select_cust_tree_1.get_children():
              select_cust_tree_1.delete(record)
            count_v = 0
            for i in vendor_data_1:
              select_cust_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[24],i[4],i[10],i[8]))
            count_v += 1





        cust_fil_cat_list_1 = Listbox(customer_selection_1,height=34,width=40,bg="white",activestyle="dotbox",fg="black",highlightbackground="white")
        cust_fil_cat_list_1.insert(0,"               View all records")
        cust_fil_cat_list_1.insert(1,"               View only Client/Vendor")
        cust_fil_cat_list_1.insert(2,"               View only Client type")
        cust_fil_cat_list_1.insert(3,"               View only Vendor type")
        cust_fil_cat_list_1.insert(4,"               Default")
        cust_fil_cat_list_1.place(x=660,y=63)
        cust_fil_cat_list_1.bind('<<ListboxSelect>>',list_filter_customer_1)

        scrollbar = Scrollbar(customer_selection_1)
        scrollbar.place(x=640, y=45, height=560)
        scrollbar.config( command=select_cust_tree_1.yview )

        cust_ok_btn_1=Button(customer_selection_1,compound = LEFT,image=tick ,text="ok", width=60,command=cust_tree_fetch_1)
        cust_ok_btn_1.place(x=15, y=610)
        edit_custbtn_1=Button(customer_selection_1,compound = LEFT,image=tick,text="Edit selected customer", width=150,command=inv_edit_customer_1)
        edit_custbtn_1.place(x=250, y=610)
        add_custbtn_1=Button(customer_selection_1,compound = LEFT,image=tick, text="Add new customer", width=150,command=inv_create_newcustomer_1)
        add_custbtn_1.place(x=435, y=610)
        cust_cancel_btn_1=Button(customer_selection_1,compound = LEFT,image=cancel ,text="Cancel", width=60,command=lambda:customer_selection_1.destroy())
        cust_cancel_btn_1.place(x=740, y=610)  



        

      #add new line item
      def inv_newline_1():
        #fetch new line item
        global sel_pro_str
        def product_tree_fetch_1():
          product_tree_item_1 = product_sel_tree_1.item(product_sel_tree_1.focus())["values"][0]
          sql = "SELECT * FROM Productservice WHERE Productserviceid=%s"
          val = (product_tree_item_1,)
          fbcursor.execute(sql,val)
          sel_pro_str = fbcursor.fetchone()
          comp_sql = "SELECT * FROM company"
          fbcursor.execute(comp_sql,)
          comp_data = fbcursor.fetchone()
          if comp_data[12] == "1":
            add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],sel_pro_str[7]))
            price = 0.0
            total_cost = 0.0
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            for i in add_newline_tree_1.get_children():
              price += float(add_newline_tree_1.item(i,'values')[6])
            discount_rate = (price*dis_rate)/100
            total_cost += (price - discount_rate) + exc
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round((price - discount_rate),2)
            sub1_1.config(text=sub_tot)
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4])
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
            totalprice_view_1.config(text=round(price,2))
          elif comp_data[12] == "2":
            if sel_pro_str[10] == "1":
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes',sel_pro_str[7]))
            else:
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No',sel_pro_str[7]))
            price = 0.0
            p = 0.0
            total_cost = 0.0
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            tx1 = float(tax1_entry_1.get())
            for i in add_newline_tree_1.get_children():
              if add_newline_tree_1.item(i,'values')[6] == "No":
                p += float(add_newline_tree_1.item(i,'values')[3])
              else:
                price += float(add_newline_tree_1.item(i,'values')[7])
            discount_rate = ((price + p) * dis_rate)/100
            dis_price = (price * dis_rate)/100
            dis_p = (p * dis_rate)/100
            tax1_rate = ((price - dis_price)*tx1)/100
            tx_calc = (price - dis_price) + tax1_rate
            tx_calc1 = p - dis_p
            total_cost += (tx_calc + tx_calc1) + exc 
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round(((price + p) - discount_rate),2)
            sub1_1.config(text=sub_tot)
            tax1_1.config(text=round(tax1_rate,2))
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4])
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
            totalprice_view_1.config(text=round((price + p),2))
          elif comp_data[12] == "3":
            if sel_pro_str[10] == "1" and sel_pro_str[19] == "1":
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes','Yes',sel_pro_str[7]))
            elif sel_pro_str[10] == "1" and sel_pro_str[19] == "0":
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'Yes','No',sel_pro_str[7]))
            elif sel_pro_str[10] == "0" and sel_pro_str[19] == "1":
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No','Yes',sel_pro_str[7]))
            else:
              add_newline_tree_1.insert(parent='',index='end',text='',values=(sel_pro_str[2],sel_pro_str[4],sel_pro_str[5],sel_pro_str[7],sel_pro_str[18],sel_pro_str[8],'No','No',sel_pro_str[7]))
            price = 0.0
            p1 = 0.0
            p2 = 0.0
            p3 = 0.0
            total_cost = 0.0
            tx1 = float(tax1_entry_1.get())
            tx2 = float(tax2_entry_1.get())
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            for i in add_newline_tree_1.get_children():
              if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
                p1 += float(add_newline_tree_1.item(i,'values')[3])
              elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
                p2 += float(add_newline_tree_1.item(i,'values')[3])
              elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
                p3 += float(add_newline_tree_1.item(i,'values')[3])
              else:
                price += float(add_newline_tree_1.item(i,'values')[8])
            discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
            dis_p2 = (p2 * dis_rate)/100
            tax1_rate = ((p2 - dis_p2) * tx1)/100
            dis_price = (price * dis_rate)/100
            tax2_rate = ((price - dis_price) * tx1)/100
            tax3_rate = ((price - dis_price) * tx2)/100
            dis_p3= (p3 * dis_rate)/100
            tax4_rate = ((p3 - dis_p3) * tx2)/100
            dis_p4 = (p1 * dis_rate)/100
            tx_calc1 = (p2 - dis_p2) + tax1_rate
            tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
            tx_calc3 = (p3 - dis_p3) + tax4_rate
            tx_calc4 = (p1 - dis_p4)
            total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
            sub1_1.config(text=sub_tot)
            tax1_1.config(text=round((tax1_rate + tax2_rate),2))
            tax2_1.config(text=round((tax3_rate + tax4_rate),2))
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
            totalprice_view_1.config(text=round((price + p1 + p2 + p3),2))
          inv_newline_sel_1.destroy()
        show_newline_1 = inv_combo_e1_1.get()
        if show_newline_1 == '':
          messagebox.showinfo('F-Billing Revolution','Customer is required, please select customer before adding line item to invoice')
        else:
          inv_newline_sel_1=Toplevel()
          inv_newline_sel_1.title("Product/Services")
          inv_newline_sel_1.geometry("930x650+240+10")
          inv_newline_sel_1.resizable(False, False)

          global product_sel_tree_1

          product_sel_tree_1=ttk.Treeview(inv_newline_sel_1, height=27)
          product_sel_tree_1["columns"]=["1","2","3", "4","5"]
          product_sel_tree_1.column("#0", width=35)
          product_sel_tree_1.column("1", width=160)
          product_sel_tree_1.column("2", width=160)
          product_sel_tree_1.column("3", width=140)
          product_sel_tree_1.column("4", width=70)
          product_sel_tree_1.column("5", width=70)
          product_sel_tree_1.heading("#0",text="")
          product_sel_tree_1.heading("1",text="ID/SKU")
          product_sel_tree_1.heading("2",text="Product/Service Name")
          product_sel_tree_1.heading("3",text="Unit price")
          product_sel_tree_1.heading("4",text="Service")
          product_sel_tree_1.heading("5",text="Stock")
          product_sel_tree_1.tag_configure('green', foreground='green')
          product_sel_tree_1.tag_configure('red', foreground='red')
          product_sel_tree_1.tag_configure('blue', foreground='blue')
          product_sel_tree_1.place(x=5, y=45)

          countp = 0
          sql = 'SELECT * FROM Productservice'
          fbcursor.execute(sql)
          product_details = fbcursor.fetchall()
          for p in product_details:
            if p[12] == '1':
              serv_or_not = '🗹'
            else:
              serv_or_not = ''
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            if not currency_symb: 
              if p[13] > p[14]:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1              
              elif p[12] == '1':
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1
                    
            elif currency_symb[1] == "before amount":
              if p[13] > p[14]:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "before amount with space":
              if p[13] > p[14]:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount":
              if p[13] > p[14]:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

            elif currency_symb[1] == "after amount with space":
              if p[13] > p[14]:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                countp += 1
              elif p[12] == '1':
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                countp += 1
              else:
                product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                countp += 1

          #filter product

          def filter_product_1():
            if product_filter_entry_1.get() == '':
              for record in product_sel_tree_1.get_children():
                product_sel_tree_1.delete(record)

              countp = 0
              sql = 'SELECT * FROM Productservice'
              fbcursor.execute(sql)
              product_details = fbcursor.fetchall()
              for p in product_details:
                if p[12] == '1':
                  serv_or_not = '🗹'
                else:
                  serv_or_not = ''
                currency_sql = "SELECT currencysign,currsignplace FROM company"
                fbcursor.execute(currency_sql,)
                currency_symb = fbcursor.fetchone()
                if not currency_symb: 
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1              
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1
                        
                elif currency_symb[1] == "before amount":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "before amount with space":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "after amount":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "after amount with space":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                    countp += 1

            else:
              filter = product_filter_entry_1.get()
              for record in product_sel_tree_1.get_children():
                product_sel_tree_1.delete(record)
              
              countp = 0
              sql = "SELECT * FROM Productservice WHERE name=%s"
              val = (filter, )
              fbcursor.execute(sql, val)
              product_details = fbcursor.fetchall()
              for p in product_details:
                if p[12] == '1':
                  serv_or_not = '🗹'
                else:
                  serv_or_not = ''
                currency_sql = "SELECT currencysign,currsignplace FROM company"
                fbcursor.execute(currency_sql,)
                currency_symb = fbcursor.fetchone()
                if not currency_symb: 
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1              
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1
                        
                elif currency_symb[1] == "before amount":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "before amount with space":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "after amount":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                    countp += 1

                elif currency_symb[1] == "after amount with space":
                  if p[13] > p[14]:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                    countp += 1
                  elif p[12] == '1':
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                    countp += 1
                  else:
                    product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                    countp += 1



          product_filter_label_1=Label(inv_newline_sel_1, text="Enter filter text").place(x=5, y=10)
          product_filter_entry_1=Entry(inv_newline_sel_1, width=20)
          product_filter_entry_1.place(x=110, y=10)
          product_filter_button_1=Button(inv_newline_sel_1, text='Click Here',command=filter_product_1)
          product_filter_button_1.place(x=240, y=9,height=20,width=60)


        #add new product
        def new_product_1(): 
          top = Toplevel()  
          top.title("Add a new Product/Service")
          p2 = PhotoImage(file = 'images/fbicon.png')
          top.iconphoto(False, p2)
          top.geometry("600x550+350+15")
          tabControl = ttk.Notebook(top)
          s = ttk.Style()
          s.theme_use('default')
          s.configure('TNotebook.Tab', background="#999999",padding=10,bd=0)
              

          tab1 = ttk.Frame(tabControl)
          tab2 = ttk.Frame(tabControl)
        
          tabControl.add(tab1,compound = LEFT, text ='Product/Service')
          tabControl.add(tab2,compound = LEFT, text ='Product Image')
        
          tabControl.pack(expand = 1, fill ="both")
        
          innerFrame = Frame(tab1,bg="#f5f3f2", relief=GROOVE)
          innerFrame.pack(side="top",fill=BOTH)

          Customerlabelframe = LabelFrame(innerFrame,text="Product/Service",width=580,height=455)
          Customerlabelframe.pack(side="top",fill=BOTH,padx=10,pady=(10,45))

          def service_check():
            if check_service_1.get() == 1:
              add_pro_price_entry_1['state'] = DISABLED
              add_pro_stock_entry_1['state'] = DISABLED
              add_pro_low_entry_1['state'] = DISABLED
              add_pro_ware_entry_1['state'] = DISABLED
            else:
              add_pro_price_entry_1['state'] = NORMAL
              add_pro_stock_entry_1['state'] = NORMAL
              add_pro_low_entry_1['state'] = NORMAL
              add_pro_ware_entry_1['state'] = NORMAL

          def calc_pricecost(event):
            if add_pro_unit_entry_1.get() == "":
              up = 0
            else:
              up = add_pro_unit_entry_1.get()
            if add_pro_cost_entry_1.get() == "":
              cst = 0 
            else:
              cst = add_pro_cost_entry_1.get()
            price_cost = float(up) - float(cst)
            add_pro_price_entry_1.config(text=price_cost)

          add_pro_code_label_1=Label(Customerlabelframe,text="Code or SKU:",fg="blue",pady=10,padx=10)
          add_pro_code_label_1.place(x=20,y=0)
          add_pro_code_entry_1 = Entry(Customerlabelframe,width=35)
          add_pro_code_entry_1.place(x=120,y=8)

          checkvarStatus_1=IntVar()
          add_pro_status_1=Label(Customerlabelframe,text="Status:")
          add_pro_status_1.place(x=400,y=8)
          add_pro_checkbtn_active_1 = Checkbutton(Customerlabelframe,
                            variable = checkvarStatus_1,text="Active",compound="right",
                            onvalue =1 ,
                            offvalue = 0,)

          add_pro_checkbtn_active_1.place(x=450,y=5)

          add_pro_cat_1=Label(Customerlabelframe,text="Category:",pady=5,padx=10)
          add_pro_cat_1.place(x=20,y=40)
          n = StringVar()
          add_pro_category_1 = ttk.Combobox(Customerlabelframe, width = 40, textvariable = n )
          
          add_pro_category_1['values'] = ('Default',)
          
          add_pro_category_1.place(x=120,y=45)
          add_pro_category_1.current(0)


          add_pro_name_label_1=Label(Customerlabelframe,text="Name :",fg="blue",pady=5,padx=10)
          add_pro_name_label_1.place(x=20,y=70)
          add_pro_name_entry_1 = Entry(Customerlabelframe,width=70)
          add_pro_name_entry_1.place(x=120,y=75)

          add_pro_des_label_1=Label(Customerlabelframe,text="Description :",pady=5,padx=10)
          add_pro_des_label_1.place(x=20,y=100)
          add_pro_des_entry_1 = Entry(Customerlabelframe,width=70)
          add_pro_des_entry_1.place(x=120,y=105)

          # uval = IntVar(Customerlabelframe, value=0)
          add_pro_unit_label_1=Label(Customerlabelframe,text="Unit Price:",fg="blue",pady=5,padx=10)
          add_pro_unit_label_1.place(x=20,y=130)
          add_pro_unit_entry_1 = Entry(Customerlabelframe,width=20,justify="right")
          add_pro_unit_entry_1.place(x=120,y=135)
          add_pro_unit_entry_1.bind("<KeyRelease>",calc_pricecost)

          # pcsval = IntVar(Customerlabelframe, value='$0.00')
          add_pro_pcs_label_1=Label(Customerlabelframe,text="Pcs/Weight:",fg="blue",pady=5,padx=10)
          add_pro_pcs_label_1.place(x=330,y=135)
          add_pro_pcs_entry_1 = Entry(Customerlabelframe,width=20,)
          add_pro_pcs_entry_1.place(x=420,y=140)

          # costval = IntVar(Customerlabelframe, value=0)
          add_pro_cost_label_1=Label(Customerlabelframe,text="Cost:",pady=5,padx=10)
          add_pro_cost_label_1.place(x=20,y=160)
          add_pro_cost_entry_1 = Entry(Customerlabelframe,width=20,justify="right")
          add_pro_cost_entry_1.place(x=120,y=165)
          add_pro_cost_entry_1.bind("<KeyRelease>",calc_pricecost)

          # priceval = IntVar(Customerlabelframe, value='$0.00')
          add_pro_price_label_1=Label(Customerlabelframe,text="(Price - Cost):",pady=5,padx=10)
          add_pro_price_label_1.place(x=20,y=190)
          add_pro_price_entry_1 = Label(Customerlabelframe,width=17,bg="white",text="0",anchor="e")
          add_pro_price_entry_1.place(x=120,y=195)

          checkvar_tax1_1 =IntVar()
          checkvar_tax2_1 =IntVar()

          if not comp_data:
            pass
          elif comp_data[12] == "2":
            pass
          elif comp_data[12] == "2":
            add_pro_checkbtn_tax1_1 = Checkbutton(Customerlabelframe,variable = checkvar_tax1_1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12) 
            add_pro_checkbtn_tax1_1.place(x=415,y=170)        
          elif comp_data[12] == "3":
            add_pro_checkbtn_tax1_1 = Checkbutton(Customerlabelframe,variable = checkvar_tax1_1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
            add_pro_checkbtn_tax2_1 = Checkbutton(Customerlabelframe,variable = checkvar_tax2_1,text="Taxable Tax2rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
            add_pro_checkbtn_tax1_1.place(x=415,y=170)
            add_pro_checkbtn_tax2_1.place(x=415,y=200)
          


          check_service_1=IntVar()
        
          add_pro_checkbtn_no_1 = Checkbutton(Customerlabelframe,variable = check_service_1,
                            text="This is a service (no stock control)",
                            onvalue =1 ,
                            offvalue = 0,
                            height=3,command=service_check)

          add_pro_checkbtn_no_1.place(x=40,y=220)


          stockval = IntVar(Customerlabelframe)
          add_pro_stock_label_1=Label(Customerlabelframe,text="Stock:",pady=5,padx=10)
          add_pro_stock_label_1.place(x=90,y=260)
          add_pro_stock_entry_1 = Entry(Customerlabelframe,width=15,textvariable=stockval)
          add_pro_stock_entry_1.place(x=150,y=265)

          lowval = IntVar(Customerlabelframe)
          add_pro_low_label_1=Label(Customerlabelframe,text="Low Stock Warning Limit:",pady=5,padx=10)
          add_pro_low_label_1.place(x=270,y=260)
          add_pro_low_entry_1 = Entry(Customerlabelframe,width=10,textvariable=lowval)
          add_pro_low_entry_1.place(x=432,y=265)

        
          add_pro_ware_label_1=Label(Customerlabelframe,text="Warehouse:",pady=5,padx=10)
          add_pro_ware_label_1.place(x=60,y=290)
          add_pro_ware_entry_1 = Entry(Customerlabelframe,width=57)
          add_pro_ware_entry_1.place(x=150,y=295)

          add_pro_pnote_label_1=Label(Customerlabelframe,text="Private notes(not appears on invoice):",pady=5,padx=10)
          add_pro_pnote_label_1.place(x=20,y=330)

          add_pro_pnote_scroll_1 = scrolledtext.ScrolledText(Customerlabelframe, undo=True,width=62,height=4)
          add_pro_pnote_scroll_1.place(x=32,y=358)


          #Add product image
          def add_pro_img_1():
            global pro_img,add_image_1
            img_type = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
            pro_img = filedialog.askopenfilename(initialdir="/",filetypes=img_type)
            shutil.copyfile(pro_img, os.getcwd()+'/images/'+pro_img.split('/')[-1])
            open_image = Image.open("images/"+pro_img.split('/')[-1])
            resize_img = open_image.resize((480,320))
            add_img_1 = ImageTk.PhotoImage(resize_img)
            add_image_1 = Label(imageFrame,image=add_img_1)
            add_image_1.photo = add_img_1
            add_image_1.place(x=60,y=80)
            img_size = add_image_getsize_1(os.path.getsize(pro_img))
            pro_img_name_1.config(text=pro_img.split('/')[-1])
            pro_img_size_1.config(text="(" + "" + img_size + "" + ")")
            

          def add_image_getsize_1(B):
            BYTE = float(B)
            KB = float(1024)
            MB = float(KB**2)

            if BYTE < KB:
              return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
            elif KB <= BYTE < MB:
              return '{0:.2f} KB'.format(BYTE / KB)
            elif MB <= BYTE:
              return '{0:.2f} MB'.format(BYTE / MB)

          
          
          # Remove product image
          def remove_add_img_1():
            try:
              os.remove("images/"+pro_img.split('/')[-1])
              pro_img_name_1.config(text="")
              pro_img_size_1.config(text="")
              add_image_1.destroy()
            except:
              pass


          def add_new_product_1():
            sku = add_pro_code_entry_1.get()
            category = add_pro_category_1.get()
            name = add_pro_name_entry_1.get()
            description = add_pro_des_entry_1.get()
            unitprice = add_pro_unit_entry_1.get()
            peices = add_pro_pcs_entry_1.get()
            cost = add_pro_cost_entry_1.get()
            serviceornot = check_service_1.get()
            if serviceornot == 1:
              priceminuscost = NULL
              stock = NULL
              stocklimit = NULL
              warehouse = NULL
            else:
              priceminuscost = add_pro_price_entry_1.cget("text")
              stock = add_pro_stock_entry_1.get()
              stocklimit = add_pro_low_entry_1.get()
              warehouse = add_pro_ware_entry_1.get()
            privatenote = add_pro_pnote_scroll_1.get("1.0",'end-1c')
            status = checkvarStatus_1.get()
            taxable1 = checkvar_tax1_1.get()
            taxable2 = checkvar_tax2_1.get()
            product_image = pro_img_name_1.cget("text")
            chk_fields_1 = [sku,name,unitprice,cost]
            chk_data_1 = []
            for i in chk_fields_1:
              if i == "":
                chk_data_1.append(i)

            if len(chk_data_1) == 0:
              chk_sql_1 = "SELECT * FROM Productservice WHERE sku=%s or name=%s"
              chk_val_1 = (sku,name)
              fbcursor.execute(chk_sql_1,chk_val_1)
              fbcursor.fetchall()
              chk_row_count_1 = fbcursor.rowcount
              if chk_row_count_1 == 0:
                add_pro_sql='INSERT INTO Productservice (sku,category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,image,status,taxable,serviceornot,tax2) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)' #adding values into db
                add_pro_val=(sku,category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,product_image,status,taxable1,serviceornot,taxable2)
                fbcursor.execute(add_pro_sql,add_pro_val)
                fbilldb.commit()
                top.destroy()
              else:
                messagebox.showinfo("Alert","Entry with same name or SKU already exist.\nTry again.")
            else:
              messagebox.showinfo("Alert","Fields (sku,name,unitprice,cost) cannot be empty.\nTry again.")

            for record in product_sel_tree_1.get_children():
              product_sel_tree_1.delete(record)

            countp = 0
            sql = 'SELECT * FROM Productservice'
            fbcursor.execute(sql)
            product_details = fbcursor.fetchall()
            for p in product_details:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

          # Cancel add new product
          def cancel_add_1():
            top.destroy()

          

          add_pro_ok_btn_1 = Button(innerFrame,compound = LEFT,image=tick , text ="Ok",width=60,command=add_new_product_1)
          add_pro_ok_btn_1.place(x=10,y=475)

          add_pro_cancel_btn_1 = Button(innerFrame,compound = LEFT,image=cancel ,text="Cancel",width=60,command=cancel_add_1)
          add_pro_cancel_btn_1.place(x=519,y=475)

          imageFrame = Frame(tab2, relief=GROOVE,height=580)
          imageFrame.pack(side="top",fill=BOTH)

          pro_img_name_1 = Label(imageFrame,text="")
          pro_img_name_1.place(x=60,y=450)
          pro_img_size_1 = Label(imageFrame,text="")
          pro_img_size_1.place(x=180,y=450)

          browseimg_1=Label(imageFrame,text=" Browse for product image file(recommended image type:JPG,size 480x320 pixels) ",bg='#f5f3f2')
          browseimg_1.place(x=15,y=35)

          add_browsebutton_1=Button(imageFrame,text = 'Browse',command=add_pro_img_1)
          add_browsebutton_1.place(x=500,y=30)
          
          add_removeButton_1 = Button(imageFrame,compound = LEFT,image=cancel, text ="Remove Product Image",width=150,command=remove_add_img_1)
          add_removeButton_1.place(x=400,y=450)

        ############# Edit product ############

        def edit_product_1():
          top_edit = Toplevel()  
          top_edit.title("Edit Product/Service")
          p2 = PhotoImage(file = 'images/fbicon.png')
          top_edit.iconphoto(False, p2)
          top_edit.geometry("600x550+350+15")
          tabControl = ttk.Notebook(top_edit)
          s = ttk.Style()
          s.theme_use('default')
          s.configure('TNotebook.Tab', background="#999999",padding=10,bd=0)
              

          tab1 = ttk.Frame(tabControl)
          tab2 = ttk.Frame(tabControl)
        
          tabControl.add(tab1,compound = LEFT, text ='Product/Service')
          tabControl.add(tab2,compound = LEFT, text ='Product Image')
        
          tabControl.pack(expand = 1, fill ="both")
        
          innerFrame = Frame(tab1,bg="#f5f3f2", relief=GROOVE)
          innerFrame.pack(side="top",fill=BOTH)

          Customerlabelframe = LabelFrame(innerFrame,text="Product/Service",width=580,height=455)
          Customerlabelframe.pack(side="top",fill=BOTH,padx=10,pady=(10,45))

          def edit_service_check_1():
            if check_edit_service_1.get() == 1:
              edit_pro_price_entry_1['state'] = DISABLED
              edit_pro_stock_entry_1['state'] = DISABLED
              edit_pro_low_entry_1['state'] = DISABLED
              edit_pro_ware_entry_1['state'] = DISABLED
            else:
              edit_pro_price_entry_1['state'] = NORMAL
              edit_pro_stock_entry_1['state'] = NORMAL
              edit_pro_low_entry_1['state'] = NORMAL
              edit_pro_ware_entry_1['state'] = NORMAL

          def edit_calc_pricecost_1(event):
            if edit_pro_unit_entry_1.get() == "":
              up = 0
            else:
              up = edit_pro_unit_entry_1.get()
            if edit_pro_cost_entry_1.get() == "":
              cst = 0 
            else:
              cst = edit_pro_cost_entry_1.get()
            price_cost = float(up) - float(cst)
            edit_pro_price_entry_1.config(text=price_cost)

          edit_pro_code_label_1=Label(Customerlabelframe,text="Code or SKU:",fg="blue",pady=10,padx=10)
          edit_pro_code_label_1.place(x=20,y=0)
          edit_pro_code_entry_1 = Entry(Customerlabelframe,width=35)
          edit_pro_code_entry_1.place(x=120,y=8)

          checkvar_edit_Status_1=IntVar()
          edit_pro_status_1=Label(Customerlabelframe,text="Status:")
          edit_pro_status_1.place(x=400,y=8)
          edit_pro_checkbtn_active_1 = Checkbutton(Customerlabelframe,
                            variable = checkvar_edit_Status_1,text="Active",compound="right",
                            onvalue =1 ,
                            offvalue = 0,)

          edit_pro_checkbtn_active_1.place(x=450,y=5)

          edit_pro_cat_1=Label(Customerlabelframe,text="Category:",pady=5,padx=10)
          edit_pro_cat_1.place(x=20,y=40)
          n = StringVar()
          edit_pro_category_1 = ttk.Combobox(Customerlabelframe, width = 40, textvariable = n )
          
          edit_pro_category_1['values'] = ['Default']
          
          edit_pro_category_1.place(x=120,y=45)


          edit_pro_name_label_1=Label(Customerlabelframe,text="Name :",fg="blue",pady=5,padx=10)
          edit_pro_name_label_1.place(x=20,y=70)
          edit_pro_name_entry_1 = Entry(Customerlabelframe,width=70)
          edit_pro_name_entry_1.place(x=120,y=75)

          edit_pro_des_label_1=Label(Customerlabelframe,text="Description :",pady=5,padx=10)
          edit_pro_des_label_1.place(x=20,y=100)
          edit_pro_des_entry_1 = Entry(Customerlabelframe,width=70)
          edit_pro_des_entry_1.place(x=120,y=105)

          # uval = IntVar(Customerlabelframe, value=0)
          edit_pro_unit_label_1=Label(Customerlabelframe,text="Unit Price:",fg="blue",pady=5,padx=10)
          edit_pro_unit_label_1.place(x=20,y=130)
          edit_pro_unit_entry_1 = Entry(Customerlabelframe,width=20,justify="right")
          edit_pro_unit_entry_1.place(x=120,y=135)
          edit_pro_unit_entry_1.bind("<KeyRelease>",edit_calc_pricecost_1)

          # pcsval = IntVar(Customerlabelframe, value='$0.00')
          edit_pro_pcs_label_1=Label(Customerlabelframe,text="Pcs/Weight:",fg="blue",pady=5,padx=10)
          edit_pro_pcs_label_1.place(x=330,y=135)
          edit_pro_pcs_entry_1 = Entry(Customerlabelframe,width=20)
          edit_pro_pcs_entry_1.place(x=420,y=140)

          # costval = IntVar(Customerlabelframe, value=0)
          edit_pro_cost_label_1=Label(Customerlabelframe,text="Cost:",pady=5,padx=10)
          edit_pro_cost_label_1.place(x=20,y=160)
          edit_pro_cost_entry_1 = Entry(Customerlabelframe,width=20,justify="right")
          edit_pro_cost_entry_1.place(x=120,y=165)
          edit_pro_cost_entry_1.bind("<KeyRelease>",edit_calc_pricecost_1)

          # priceval = IntVar(Customerlabelframe, value='$0.00')
          edit_pro_price_label_1=Label(Customerlabelframe,text="(Price - Cost):",pady=5,padx=10)
          edit_pro_price_label_1.place(x=20,y=190)
          edit_pro_price_entry_1 = Label(Customerlabelframe,width=17,bg="white",text="0",anchor="e")
          edit_pro_price_entry_1.place(x=120,y=195)

          checkvar_edit_tax1_1 =IntVar()
          checkvar_edit_tax2_1 =IntVar()

          if not comp_data:
            pass
          elif comp_data[12] == "2":
            pass
          elif comp_data[12] == "2":
            edit_pro_checkbtn_tax1_1 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax1_1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12) 
            edit_pro_checkbtn_tax1_1.place(x=415,y=170)        
          elif comp_data[12] == "3":
            edit_pro_checkbtn_tax1_1 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax1_1,text="Taxable Tax1rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
            edit_pro_checkbtn_tax2_1 = Checkbutton(Customerlabelframe,variable = checkvar_edit_tax2_1,text="Taxable Tax2rate",compound="right",onvalue =0 ,offvalue = 1,height=2,width = 12)
            edit_pro_checkbtn_tax1_1.place(x=415,y=170)
            edit_pro_checkbtn_tax2_1.place(x=415,y=200)
          


          check_edit_service_1=IntVar()
        
          edit_pro_checkbtn_no_1 = Checkbutton(Customerlabelframe,variable = check_edit_service_1,
                            text="This is a service (no stock control)",
                            onvalue =1 ,
                            offvalue = 0,
                            height=3,command=edit_service_check_1)

          edit_pro_checkbtn_no_1.place(x=40,y=220)


          stockval = IntVar(Customerlabelframe)
          edit_pro_stock_label_1=Label(Customerlabelframe,text="Stock:",pady=5,padx=10)
          edit_pro_stock_label_1.place(x=90,y=260)
          edit_pro_stock_entry_1 = Entry(Customerlabelframe,width=15,textvariable=stockval)
          edit_pro_stock_entry_1.place(x=150,y=265)

          lowval = IntVar(Customerlabelframe)
          edit_pro_low_label_1=Label(Customerlabelframe,text="Low Stock Warning Limit:",pady=5,padx=10)
          edit_pro_low_label_1.place(x=270,y=260)
          edit_pro_low_entry_1 = Entry(Customerlabelframe,width=10,textvariable=lowval)
          edit_pro_low_entry_1.place(x=432,y=265)

        
          edit_pro_ware_label_1=Label(Customerlabelframe,text="Warehouse:",pady=5,padx=10)
          edit_pro_ware_label_1.place(x=60,y=290)
          edit_pro_ware_entry_1 = Entry(Customerlabelframe,width=57)
          edit_pro_ware_entry_1.place(x=150,y=295)

          edit_pro_pnote_label_1=Label(Customerlabelframe,text="Private notes(not appears on invoice):",pady=5,padx=10)
          edit_pro_pnote_label_1.place(x=20,y=330)

          edit_pro_pnote_scroll_1 = scrolledtext.ScrolledText(Customerlabelframe, undo=True,width=62,height=4)
          edit_pro_pnote_scroll_1.place(x=32,y=358)

          selected_product = product_sel_tree_1.item(product_sel_tree_1.focus())["values"][0]

          pro_sql = "SELECT * FROM Productservice WHERE sku=%s"
          pro_val = (selected_product,)
          fbcursor.execute(pro_sql,pro_val)
          pro_data = fbcursor.fetchone()

          edit_pro_code_entry_1.delete(0,END)
          edit_pro_code_entry_1.insert(0,pro_data[2])
          if pro_data[6] == "1":
            checkvar_edit_Status_1.set(1)
          else:
            checkvar_edit_Status_1.set(0)
          edit_pro_category_1.delete(0,END)
          edit_pro_category_1.insert(0,pro_data[3])
          edit_pro_name_entry_1.delete(0,END)
          edit_pro_name_entry_1.insert(0,pro_data[4])
          edit_pro_des_entry_1.delete(0,END)
          edit_pro_des_entry_1.insert(0,pro_data[5])
          edit_pro_unit_entry_1.delete(0,END)
          edit_pro_unit_entry_1.insert(0,pro_data[7])
          edit_pro_pcs_entry_1.delete(0,END)
          edit_pro_pcs_entry_1.insert(0,pro_data[8])
          edit_pro_cost_entry_1.delete(0,END)
          edit_pro_cost_entry_1.insert(0,pro_data[9])
          edit_pro_price_entry_1.config(text=pro_data[11])
          if pro_data[10] == "1":
            checkvar_edit_tax1_1.set(1)
          else:
            checkvar_edit_tax1_1.set(0)
          if pro_data[19] == "1":
            checkvar_edit_tax2_1.set(1)
          else:
            checkvar_edit_tax2_1.set(0)
          if pro_data[12] == "1":
            check_edit_service_1.set(1)
            edit_pro_price_entry_1['state'] = DISABLED
            edit_pro_stock_entry_1['state'] = DISABLED
            edit_pro_low_entry_1['state'] = DISABLED
            edit_pro_ware_entry_1['state'] = DISABLED
          else:
            check_edit_service_1.set(0)
          edit_pro_stock_entry_1.delete(0,END)
          edit_pro_stock_entry_1.insert(0,pro_data[13])
          edit_pro_low_entry_1.delete(0,END)
          edit_pro_low_entry_1.insert(0,pro_data[14])
          edit_pro_ware_entry_1.delete(0,END)
          edit_pro_ware_entry_1.insert(0,pro_data[15])
          edit_pro_pnote_scroll_1.delete("1.0",'end-1c')
          edit_pro_pnote_scroll_1.insert("1.0",pro_data[16])
          



          #Add product image
          def edit_pro_img_1():
            global pro_edit_img_1,edit_image_1
            img_type = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
            pro_edit_img_1 = filedialog.askopenfilename(initialdir="/",filetypes=img_type)
            shutil.copyfile(pro_edit_img_1, os.getcwd()+'/images/'+pro_edit_img_1.split('/')[-1])
            open_image = Image.open("images/"+pro_edit_img_1.split('/')[-1])
            resize_img = open_image.resize((480,320))
            edit_img_1 = ImageTk.PhotoImage(resize_img)
            edit_image_1 = Label(edit_imageFrame,image=edit_img_1)
            edit_image_1.photo = edit_img_1
            edit_image_1.place(x=60,y=80)
            img_size = edit_image_getsize_1(os.path.getsize(pro_edit_img_1))
            pro_img_name_edit_1.config(text=pro_edit_img_1.split('/')[-1])
            pro_img_size_edit_1.config(text="(" + "" + img_size + "" + ")")
            

          def edit_image_getsize_1(B):
            BYTE = float(B)
            KB = float(1024)
            MB = float(KB**2)

            if BYTE < KB:
              return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
            elif KB <= BYTE < MB:
              return '{0:.2f} KB'.format(BYTE / KB)
            elif MB <= BYTE:
              return '{0:.2f} MB'.format(BYTE / MB)
          
          # Remove product image
          def remove_edit_img_1():
            try:
              if pro_data[17] != "":
                pro_img_name_edit_1.config(text="")
                pro_img_size_edit_1.config(text="")
                edit_image1_1.destroy()
              else:
                pro_img_name_edit_1.config(text="")
                pro_img_size_edit_1.config(text="")
                edit_image_1.destroy()
            except:
              pass


          def edit_product_1():
            sku = edit_pro_code_entry_1.get()
            category = edit_pro_category_1.get()
            name = edit_pro_name_entry_1.get()
            description = edit_pro_des_entry_1.get()
            unitprice = edit_pro_unit_entry_1.get()
            peices = edit_pro_pcs_entry_1.get()
            cost = edit_pro_cost_entry_1.get()
            serviceornot = check_edit_service_1.get()
            if serviceornot == 1:
              priceminuscost = NULL
              stock = NULL
              stocklimit = NULL
              warehouse = NULL
            else:
              priceminuscost = edit_pro_price_entry_1.cget("text")
              stock = edit_pro_stock_entry_1.get()
              stocklimit = edit_pro_low_entry_1.get()
              warehouse = edit_pro_ware_entry_1.get()
            privatenote = edit_pro_pnote_scroll_1.get("1.0",'end-1c')
            status = checkvar_edit_Status_1.get()
            taxable1 = checkvar_edit_tax1_1.get()
            taxable2 = checkvar_edit_tax2_1.get()
            product_image = pro_img_name_edit_1.cget("text")
            if product_image == "":
              if pro_data[17] == "":
                pass
              else:
                os.remove("images/"+pro_data[17])
            else:
              if product_image == pro_data[17]:
                pass
              else:
                if pro_data[17] == "":
                  pass
                else:
                  os.remove("images/"+pro_data[17])
            edit_chk_fields = [sku,name,unitprice,cost]
            edit_chk_data = []
            for i in edit_chk_fields:
              if i == "":
                edit_chk_data.append(i)
            
            if len(edit_chk_data) == 0:
              edit_pro_sql='UPDATE Productservice SET category=%s,name=%s,description=%s,unitprice=%s,peices=%s,cost=%s,priceminuscost=%s,stock=%s,stocklimit=%s,warehouse=%s,privatenote=%s,image=%s,status=%s,taxable=%s,serviceornot=%s,tax2=%s WHERE sku=%s'
              edit_pro_val=(category,name,description,unitprice,peices,cost,priceminuscost,stock,stocklimit,warehouse,privatenote,product_image,status,taxable1,serviceornot,taxable2,sku)
              fbcursor.execute(edit_pro_sql,edit_pro_val)
              fbilldb.commit()
              top_edit.destroy()
            else:
              messagebox.showinfo("Alert","Fields (sku,name,unitprice,cost) cannot be empty.\nTry again.")

            for record in product_sel_tree_1.get_children():
              product_sel_tree_1.delete(record)

            countp = 0
            sql = 'SELECT * FROM Productservice'
            fbcursor.execute(sql)
            product_details = fbcursor.fetchall()
            for p in product_details:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

          ########### Cancel Edit ###############
          def cancel_edit_1():
            top_edit.destroy()
          

          edit_pro_ok_btn_1 = Button(innerFrame,compound = LEFT,image=tick , text ="Ok",width=60,command=edit_product_1)
          edit_pro_ok_btn_1.place(x=10,y=475)

          edit_pro_cancel_btn_1 = Button(innerFrame,compound = LEFT,image=cancel ,text="Cancel",width=60,command=cancel_edit_1)
          edit_pro_cancel_btn_1.place(x=519,y=475)

          edit_imageFrame = Frame(tab2, relief=GROOVE,height=580)
          edit_imageFrame.pack(side="top",fill=BOTH)

          pro_img_name_edit_1 = Label(edit_imageFrame,text="")
          pro_img_name_edit_1.place(x=60,y=450)
          pro_img_size_edit_1 = Label(edit_imageFrame,text="")
          pro_img_size_edit_1.place(x=180,y=450)

          try:
            edit_open_image_1 = Image.open("images/"+pro_data[17])
            edit_resize_img_1 = edit_open_image_1.resize((480,320))
            edit_img1_1 = ImageTk.PhotoImage(edit_resize_img_1)
            edit_image1_1 = Label(edit_imageFrame,image=edit_img1_1)
            edit_image1_1.photo = edit_img1_1
            edit_image1_1.place(x=60,y=80)
            edit_img_size_1 = edit_image_getsize_1(os.path.getsize("images/"+pro_data[17]))
            pro_img_name_edit_1.config(text=pro_data[17])
            pro_img_size_edit_1.config(text="(" + "" + edit_img_size_1 + "" + ")")
          except:
            pass

          browseimg=Label(edit_imageFrame,text=" Browse for product image file(recommended image type:JPG,size 480x320 pixels) ",bg='#f5f3f2')
          browseimg.place(x=15,y=35)

          edit_browsebutton_1=Button(edit_imageFrame,text = 'Browse',command=edit_pro_img_1)
          edit_browsebutton_1.place(x=500,y=30)
          
          edit_removeButton_1 = Button(edit_imageFrame,compound = LEFT,image=cancel, text ="Remove Product Image",width=150,command=remove_edit_img_1)
          edit_removeButton_1.place(x=400,y=450)




        pro_fil_cat_tree_1=ttk.Treeview(inv_newline_sel_1, height=27)
        pro_fil_cat_tree_1["columns"]=["1"]
        pro_fil_cat_tree_1.column("#0", width=35, minwidth=20)
        pro_fil_cat_tree_1.column("1", width=205, minwidth=25, anchor=CENTER)    
        pro_fil_cat_tree_1.heading("#0",text="", anchor=W)
        pro_fil_cat_tree_1.heading("1",text="View filter by category", anchor=CENTER)
        pro_fil_cat_tree_1.place(x=660, y=45)
        #filter product
        def list_filter_product_1(evet):
          selected_indices_1 = pro_fil_cat_list_1.curselection()
          selected_filter_1 = ",".join([pro_fil_cat_list_1.get(i) for i in selected_indices_1])

          if selected_filter_1 == "               View all Products/Services":
            for record in product_sel_tree_1.get_children():
              product_sel_tree_1.delete(record)
            countp = 0
            pro_ser_sql_1 = "SELECT * FROM Productservice"
            fbcursor.execute(pro_ser_sql_1)
            pro_ser_data_1 = fbcursor.fetchall()
            for p in pro_ser_data_1:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1
          elif selected_filter_1 == "               View all Products":
            for record in product_sel_tree_1.get_children():
              product_sel_tree_1.delete(record)
            countp  = 0
            pro_sql_1 = "SELECT * FROM Productservice WHERE serviceornot=%s"
            pro_val_1 = ('0',)
            fbcursor.execute(pro_sql_1,pro_val_1)
            product_data_1 = fbcursor.fetchall()
            for p in product_data_1:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1
          elif selected_filter_1 == "               View all Services":
            for record in product_sel_tree_1.get_children():
              product_sel_tree_1.delete(record)
            countp = 0
            ser_sql_1 = "SELECT * FROM Productservice WHERE serviceornot=%s"
            ser_val_1 = ('1',)
            fbcursor.execute(ser_sql_1,ser_val_1)
            ser_data_1 = fbcursor.fetchall()
            for p in ser_data_1:
              if p[12] == '1':
                serv_or_not = '🗹'
              else:
                serv_or_not = ''
              currency_sql = "SELECT currencysign,currsignplace FROM company"
              fbcursor.execute(currency_sql,)
              currency_symb = fbcursor.fetchone()
              if not currency_symb: 
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1              
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1
                      
              elif currency_symb[1] == "before amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0]+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "before amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],currency_symb[0] +" "+p[7],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1

              elif currency_symb[1] == "after amount with space":
                if p[13] > p[14]:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('green',))
                  countp += 1
                elif p[12] == '1':
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('blue',))
                  countp += 1
                else:
                  product_sel_tree_1.insert(parent='', index='end', iid=countp, text='', values=(p[2],p[4],p[7]+" "+currency_symb[0],serv_or_not,p[13]),tags=('red',))
                  countp += 1






        pro_fil_cat_list_1 = Listbox(inv_newline_sel_1,height=34,width=40,bg="white",activestyle="dotbox",fg="black",highlightbackground="white")
        pro_fil_cat_list_1.insert(0,"               View all Products/Services")
        pro_fil_cat_list_1.insert(1,"               View all Products")
        pro_fil_cat_list_1.insert(2,"               View all Services")
        pro_fil_cat_list_1.place(x=660,y=63)
        pro_fil_cat_list_1.bind('<<ListboxSelect>>',list_filter_product_1)




        scrollbar = Scrollbar(inv_newline_sel_1)
        scrollbar.place(x=640, y=45, height=560)
        scrollbar.config( command=product_sel_tree_1.yview )
      

        product_ok_btn_1=Button(inv_newline_sel_1,compound = LEFT,image=tick ,text="ok", width=60,command=product_tree_fetch_1)
        product_ok_btn_1.place(x=15, y=610)
        product_edit_btn_1=Button(inv_newline_sel_1,compound = LEFT,image=tick , text="Edit product/Service", width=150,command=edit_product_1)
        product_edit_btn_1.place(x=250, y=610)
        product_add_btn_1=Button(inv_newline_sel_1,compound = LEFT,image=tick , text="Add product/Service", width=150,command=new_product_1)
        product_add_btn_1.place(x=435, y=610)
        product_cancel_btn_1=Button(inv_newline_sel_1,compound = LEFT,image=cancel ,text="Cancel", width=60,command=lambda:inv_newline_sel_1.destroy())
        product_cancel_btn_1.place(x=740, y=610)



      #preview new line
      def previewline_1():
        if len(add_newline_tree_1.get_children()) == 0:
          messagebox.showwarning("F-Billing Revolution","This invoice has no line item(s). \nPlease add line items before printing.")
        else:
          prev_invo = Toplevel()
          prev_invo.title("Preview Invoice")
          p2 = PhotoImage(file = "images/fbicon.png")
          prev_invo.iconphoto(False, p2)
          prev_invo.geometry("1360x730+0+0")
          temp_type = template_entry_1.get()
          if temp_type == 'Professional 1 (logo on left side)':
            frame = Frame(prev_invo, width=953, height=300)
            frame.pack(expand=True, fill=BOTH)
            frame.place(x=5,y=30)
            canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
            
            vertibar=Scrollbar(frame, orient=VERTICAL)
            vertibar.pack(side=RIGHT,fill=Y)
            vertibar.config(command=canvas.yview)
            
            canvas.config(width=1315,height=640)
            canvas.config(yscrollcommand=vertibar.set)
            canvas.pack(expand=True,side=LEFT,fill=BOTH)
            canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
            inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_title_canvas.config(text=title_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 50,window=inv_title_canvas)

            try:
              image = Image.open("images/"+comp_data[13])
              resize_image = image.resize((250, 125))
              logo_img = ImageTk.PhotoImage(resize_image)
              b2 = Label(canvas,image=logo_img, height=125, width=250,)
              b2.photo = logo_img
              canvas.create_window(410, 155,window=b2)
            except:
              pass
            
            canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
            canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
            canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
            canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
            canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
            inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_num_canvas.config(text=inv_number_entry_1.get(),anchor="w")
            canvas.create_window(548, 250,window=inv_num_canvas)
            canvas.create_text(465, 270, text=inv_date_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            canvas.create_text(465, 290, text=inv_duedate_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_terms_canvas.config(text=inv_terms_combo_1.get(),anchor="w")
            canvas.create_window(548, 310,window=inv_terms_canvas)
            inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_ref_canvas.config(text=inv_ref_entry_1.get(),anchor="w")
            canvas.create_window(548, 330,window=inv_ref_canvas) 
            
            canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
            comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
            comp_addr_canvas.insert("1.0",comp_data[2])
            comp_addr_canvas.tag_configure("tag_name", justify='right')
            comp_addr_canvas.tag_add("tag_name", "1.0", "end")
            comp_addr_canvas.config(state=DISABLED)
            canvas.create_window(882, 165,window=comp_addr_canvas)
            inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
            inv_stax_canvas.config(text=comp_data[4],anchor="e")
            canvas.create_window(865, 220,window=inv_stax_canvas)
            canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
            canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
            
            canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
            inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_canv_name.config(text=inv_combo_e1_1.get(),anchor="w",bg="white")
            canvas.create_window(419, 380,window=inv_canv_name)
            inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_addr_canvas.insert("1.0",inv_addr_e2_1.get("1.0",END))
            inv_addr_canvas.config(state=DISABLED)
            canvas.create_window(405, 425, window=inv_addr_canvas)
            canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
            inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_ship_canv_lbl.config(text=inv_shipto_e3_1.get(),anchor="w",bg="white")
            canvas.create_window(751, 380, window=inv_ship_canv_lbl)
            inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_ship_addr_canvas.insert("1.0",inv_addr_e4_1.get("1.0",END))
            inv_ship_addr_canvas.config(state=DISABLED)
            canvas.create_window(736, 425,window=inv_ship_addr_canvas)

            inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_header_canvas.config(text=pageh_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 452,window=inv_header_canvas)
            
            s = ttk.Style()
            s.configure('Treeview.Heading', background='',State='DISABLE')
            inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
            inv_prev_tree["columns"] = ["1","2","3","4","5"]
            inv_prev_tree.column("#0",width=1)
            inv_prev_tree.column("1",width=100,anchor=CENTER)
            inv_prev_tree.column("2",width=343,anchor=CENTER)
            inv_prev_tree.column("3",width=80,anchor=CENTER)
            inv_prev_tree.column("4",width=90,anchor=CENTER)
            inv_prev_tree.column("5",width=80,anchor=CENTER)
            inv_prev_tree.heading("#0",text="")
            inv_prev_tree.heading("1",text="ID/SKU")
            inv_prev_tree.heading("2",text="Product/Service - Description")
            inv_prev_tree.heading("3",text="Quantity")
            inv_prev_tree.heading("4",text="Unit Price")
            inv_prev_tree.heading("5",text="Price")
            window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            
            for record in add_newline_tree_1.get_children():
              prev_data = list(add_newline_tree_1.item(record,'values'))
              if not comp_data:
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "1":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "2":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
              elif comp_data[12] == "3":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
            

            if not comp_data:
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "1":
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "2":
              canvas.create_line(980, 723, 980, 898 )
              canvas.create_line(720, 723, 720, 898 )
              canvas.create_line(860, 723, 860, 898 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
            elif comp_data[12] == "3":
              canvas.create_line(980, 723, 980, 923 )
              canvas.create_line(720, 723, 720, 923 )
              canvas.create_line(860, 723, 860, 923 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )
              canvas.create_line(980, 923, 720, 923 )
                
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0]+str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)

            inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
            bg="white",cursor="arrow",bd=0)
            inv_prev_comments.insert("1.0",comment_txt_1.get("1.0",END))
            inv_prev_comments.config(state=DISABLED)
            canvas.create_window(635, 980,window=inv_prev_comments)
            
            canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
            canvas.create_line(290, 1090, 982, 1090)

            inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
            inv_prev_terms.insert("1.0",term_txt_1.get("1.0",END))
            inv_prev_terms.tag_configure("tag_name", justify='left')
            inv_prev_terms.tag_add("tag_name", "1.0", "end")
            inv_prev_terms.config(state=DISABLED)
            canvas.create_window(642, 1125,window=inv_prev_terms)
            canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
            inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_prev_salesp.config(text=sales_per_entry_1.get(),anchor="w",bg="white")
            canvas.create_window(502, 1165, window = inv_prev_salesp)
            inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_footer_canvas.config(text=footer_txt_combo_1.get(),anchor="w",bg="white")
            canvas.create_window(413, 1185,window=inv_footer_canvas)
        #----------------Professional 2 (logo on right side)------------------
          elif temp_type == 'Professional 2 (logo on right side)':
            frame = Frame(prev_invo, width=953, height=300)
            frame.pack(expand=True, fill=BOTH)
            frame.place(x=5,y=30)
            canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
            
            vertibar=Scrollbar(frame, orient=VERTICAL)
            vertibar.pack(side=RIGHT,fill=Y)
            vertibar.config(command=canvas.yview)
            
            canvas.config(width=1315,height=640)
            canvas.config(yscrollcommand=vertibar.set)
            canvas.pack(expand=True,side=LEFT,fill=BOTH)
            canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
            inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_title_canvas.config(text=title_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 50,window=inv_title_canvas)

            try:
              image = Image.open("images/"+comp_data[13])
              resize_image = image.resize((250, 125))
              logo_img = ImageTk.PhotoImage(resize_image)
              b2 = Label(canvas,image=logo_img, height=125, width=250,)
              b2.photo = logo_img
              canvas.create_window(860, 155,window=b2)
            except:
              pass
            
            canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
            canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
            canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
            canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
            canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
            inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_num_canvas.config(text=inv_number_entry_1.get(),anchor="w")
            canvas.create_window(918, 250,window=inv_num_canvas)
            canvas.create_text(856, 270, text=inv_date_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            canvas.create_text(856, 290, text=inv_duedate_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_terms_canvas.config(text=inv_terms_combo_1.get(),anchor="w")
            canvas.create_window(918, 310,window=inv_terms_canvas)
            inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_ref_canvas.config(text=inv_ref_entry_1.get(),anchor="w")
            canvas.create_window(918, 330,window=inv_ref_canvas)
            
            canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
            comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
            comp_addr_canvas.insert("1.0",comp_data[2])
            comp_addr_canvas.tag_configure("tag_name", justify='left')
            comp_addr_canvas.tag_add("tag_name", "1.0", "end")
            comp_addr_canvas.config(state=DISABLED)
            canvas.create_window(392, 165,window=comp_addr_canvas)
            inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg='white')
            inv_stax_canvas.config(text=comp_data[4],anchor="w")
            canvas.create_window(405, 220,window=inv_stax_canvas)
            canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
            canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
            
            canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
            inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_canv_name.config(text=inv_combo_e1_1.get(),anchor="w",bg="white")
            canvas.create_window(409, 370,window=inv_canv_name)
            inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_addr_canvas.insert("1.0",inv_addr_e2_1.get("1.0",END))
            inv_addr_canvas.config(state=DISABLED)
            canvas.create_window(395, 415, window=inv_addr_canvas)
            canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
            inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_ship_canv_lbl.config(text=inv_shipto_e3_1.get(),anchor="w",bg="white")
            canvas.create_window(751, 370, window=inv_ship_canv_lbl)
            inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_ship_addr_canvas.insert("1.0",inv_addr_e4_1.get("1.0",END))
            inv_ship_addr_canvas.config(state=DISABLED)
            canvas.create_window(736, 415,window=inv_ship_addr_canvas)

            inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_header_canvas.config(text=pageh_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 452,window=inv_header_canvas)
            
            s = ttk.Style()
            s.configure('Treeview.Heading', background='',State='DISABLE')
            inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
            inv_prev_tree["columns"] = ["1","2","3","4","5"]
            inv_prev_tree.column("#0",width=1)
            inv_prev_tree.column("1",width=100,anchor=CENTER)
            inv_prev_tree.column("2",width=343,anchor=CENTER)
            inv_prev_tree.column("3",width=80,anchor=CENTER)
            inv_prev_tree.column("4",width=90,anchor=CENTER)
            inv_prev_tree.column("5",width=80,anchor=CENTER)
            inv_prev_tree.heading("#0",text="")
            inv_prev_tree.heading("1",text="ID/SKU")
            inv_prev_tree.heading("2",text="Product/Service - Description")
            inv_prev_tree.heading("3",text="Quantity")
            inv_prev_tree.heading("4",text="Unit Price")
            inv_prev_tree.heading("5",text="Price")
            window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            
            for record in add_newline_tree_1.get_children():
              prev_data = list(add_newline_tree_1.item(record,'values'))
              if not comp_data:
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "1":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "2":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
              elif comp_data[12] == "3":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[0],prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
            

            if not comp_data:
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "1":
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "2":
              canvas.create_line(980, 723, 980, 898 )
              canvas.create_line(720, 723, 720, 898 )
              canvas.create_line(860, 723, 860, 898 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
            elif comp_data[12] == "3":
              canvas.create_line(980, 723, 980, 923 )
              canvas.create_line(720, 723, 720, 923 )
              canvas.create_line(860, 723, 860, 923 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )
              canvas.create_line(980, 923, 720, 923 )
                
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0]+str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)

            inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
            bg="white",cursor="arrow",bd=0)
            inv_prev_comments.insert("1.0",comment_txt_1.get("1.0",END))
            inv_prev_comments.config(state=DISABLED)
            canvas.create_window(635, 980,window=inv_prev_comments)
            
            canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
            canvas.create_line(290, 1090, 982, 1090)
            
            inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
            inv_prev_terms.insert("1.0",term_txt_1.get("1.0",END))
            inv_prev_terms.tag_configure("tag_name", justify='left')
            inv_prev_terms.tag_add("tag_name", "1.0", "end")
            inv_prev_terms.config(state=DISABLED)
            canvas.create_window(642, 1125,window=inv_prev_terms)
            canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
            inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_prev_salesp.config(text=sales_per_entry_1.get(),anchor="w",bg="white")
            canvas.create_window(502, 1165, window = inv_prev_salesp)
            inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_footer_canvas.config(text=footer_txt_combo_1.get(),anchor="w",bg="white")
            canvas.create_window(413, 1185,window=inv_footer_canvas)
        #----------------Simplified 1 (logo on left side)------------------ 
          elif temp_type == 'Simplified 1 (logo on left side)':
            frame = Frame(prev_invo, width=953, height=300)
            frame.pack(expand=True, fill=BOTH)
            frame.place(x=5,y=30)
            canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
            
            vertibar=Scrollbar(frame, orient=VERTICAL)
            vertibar.pack(side=RIGHT,fill=Y)
            vertibar.config(command=canvas.yview)
            
            canvas.config(width=1315,height=640)
            canvas.config(yscrollcommand=vertibar.set)
            canvas.pack(expand=True,side=LEFT,fill=BOTH)
            canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
            inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_title_canvas.config(text=title_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 50,window=inv_title_canvas)

            try:
              image = Image.open("images/"+comp_data[13])
              resize_image = image.resize((250, 125))
              logo_img = ImageTk.PhotoImage(resize_image)
              b2 = Label(canvas,image=logo_img, height=125, width=250,)
              b2.photo = logo_img
              canvas.create_window(410, 155,window=b2)
            except:
              pass
            
            canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
            canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
            canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
            canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
            canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
            inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_num_canvas.config(text=inv_number_entry_1.get(),anchor="w")
            canvas.create_window(548, 250,window=inv_num_canvas)
            canvas.create_text(465, 270, text=inv_date_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            canvas.create_text(465, 290, text=inv_duedate_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_terms_canvas.config(text=inv_terms_combo_1.get(),anchor="w")
            canvas.create_window(548, 310,window=inv_terms_canvas)
            inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
            inv_ref_canvas.config(text=inv_ref_entry_1.get(),anchor="w")
            canvas.create_window(548, 330,window=inv_ref_canvas)   
            
            canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
            comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
            comp_addr_canvas.insert("1.0",comp_data[2])
            comp_addr_canvas.tag_configure("tag_name", justify='right')
            comp_addr_canvas.tag_add("tag_name", "1.0", "end")
            comp_addr_canvas.config(state=DISABLED)
            canvas.create_window(882, 165,window=comp_addr_canvas)
            inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
            inv_stax_canvas.config(text=comp_data[4],anchor="e")
            canvas.create_window(865, 220,window=inv_stax_canvas)
            canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
            canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
            
            canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
            inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_canv_name.config(text=inv_combo_e1_1.get(),anchor="w",bg="white")
            canvas.create_window(419, 380,window=inv_canv_name)
            inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_addr_canvas.insert("1.0",inv_addr_e2_1.get("1.0",END))
            inv_addr_canvas.config(state=DISABLED)
            canvas.create_window(405, 425, window=inv_addr_canvas)
            canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
            inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_ship_canv_lbl.config(text=inv_shipto_e3_1.get(),anchor="w",bg="white")
            canvas.create_window(751, 380, window=inv_ship_canv_lbl)
            inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_ship_addr_canvas.insert("1.0",inv_addr_e4_1.get("1.0",END))
            inv_ship_addr_canvas.config(state=DISABLED)
            canvas.create_window(736, 425,window=inv_ship_addr_canvas)

            inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_header_canvas.config(text=pageh_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 452,window=inv_header_canvas)
            
            s = ttk.Style()
            s.configure('Treeview.Heading', background='',State='DISABLE')
            inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
            inv_prev_tree["columns"] = ["1","2","3"]
            inv_prev_tree.column("#0",width=1)
            inv_prev_tree.column("1",width=394,anchor=CENTER)
            inv_prev_tree.column("2",width=150,anchor=CENTER)
            inv_prev_tree.column("3",width=150,anchor=CENTER)
            inv_prev_tree.heading("#0",text="")
            inv_prev_tree.heading("1",text="Product/Service - Description")
            inv_prev_tree.heading("2",text="Quantity")
            inv_prev_tree.heading("3",text="Price")
            window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            
            for record in add_newline_tree_1.get_children():
              prev_data = list(add_newline_tree_1.item(record,'values'))
              if not comp_data:
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
              elif comp_data[12] == "1":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
              elif comp_data[12] == "2":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[7]))
              elif comp_data[12] == "3":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[8]))
            

            if not comp_data:
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "1":
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "2":
              canvas.create_line(980, 723, 980, 898 )
              canvas.create_line(720, 723, 720, 898 )
              canvas.create_line(860, 723, 860, 898 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
            elif comp_data[12] == "3":
              canvas.create_line(980, 723, 980, 923 )
              canvas.create_line(720, 723, 720, 923 )
              canvas.create_line(860, 723, 860, 923 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )
              canvas.create_line(980, 923, 720, 923 )
                
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0]+str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)

            inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
            bg="white",cursor="arrow",bd=0)
            inv_prev_comments.insert("1.0",comment_txt_1.get("1.0",END))
            inv_prev_comments.config(state=DISABLED)
            canvas.create_window(635, 980,window=inv_prev_comments)
            
            canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
            canvas.create_line(290, 1090, 982, 1090)
            
            inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
            inv_prev_terms.insert("1.0",term_txt_1.get("1.0",END))
            inv_prev_terms.tag_configure("tag_name", justify='left')
            inv_prev_terms.tag_add("tag_name", "1.0", "end")
            inv_prev_terms.config(state=DISABLED)
            canvas.create_window(642, 1125,window=inv_prev_terms)
            canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
            inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_prev_salesp.config(text=sales_per_entry_1.get(),anchor="w",bg="white")
            canvas.create_window(502, 1165, window = inv_prev_salesp)
            inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_footer_canvas.config(text=footer_txt_combo_1.get(),anchor="w",bg="white")
            canvas.create_window(413, 1185,window=inv_footer_canvas)
        #----------------Simplified 2 (logo on right side)------------------ 
          elif temp_type == 'Simplified 2 (logo on right side)':
            frame = Frame(prev_invo, width=953, height=300)
            frame.pack(expand=True, fill=BOTH)
            frame.place(x=5,y=30)
            canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
            
            vertibar=Scrollbar(frame, orient=VERTICAL)
            vertibar.pack(side=RIGHT,fill=Y)
            vertibar.config(command=canvas.yview)
            
            canvas.config(width=1315,height=640)
            canvas.config(yscrollcommand=vertibar.set)
            canvas.pack(expand=True,side=LEFT,fill=BOTH)
            canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
            inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_title_canvas.config(text=title_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 50,window=inv_title_canvas)

            try:
              image = Image.open("images/"+comp_data[13])
              resize_image = image.resize((250, 125))
              logo_img = ImageTk.PhotoImage(resize_image)
              b2 = Label(canvas,image=logo_img, height=125, width=250,)
              b2.photo = logo_img
              canvas.create_window(860, 155,window=b2)
            except:
              pass
            
            canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
            canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
            canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
            canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
            canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
            inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_num_canvas.config(text=inv_number_entry_1.get(),anchor="w")
            canvas.create_window(918, 250,window=inv_num_canvas)
            canvas.create_text(856, 270, text=inv_date_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            canvas.create_text(856, 290, text=inv_duedate_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_terms_canvas.config(text=inv_terms_combo_1.get(),anchor="w")
            canvas.create_window(918, 310,window=inv_terms_canvas)
            inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_ref_canvas.config(text=inv_ref_entry_1.get(),anchor="w")
            canvas.create_window(918, 330,window=inv_ref_canvas)   
            
            canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
            comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
            comp_addr_canvas.insert("1.0",comp_data[2])
            comp_addr_canvas.tag_configure("tag_name", justify='left')
            comp_addr_canvas.tag_add("tag_name", "1.0", "end")
            comp_addr_canvas.config(state=DISABLED)
            canvas.create_window(392, 165,window=comp_addr_canvas)
            inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
            inv_stax_canvas.config(text=comp_data[4],anchor="w")
            canvas.create_window(405, 220,window=inv_stax_canvas)
            canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
            canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
            
            canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
            inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_canv_name.config(text=inv_combo_e1_1.get(),anchor="w",bg="white")
            canvas.create_window(409, 370,window=inv_canv_name)
            inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_addr_canvas.insert("1.0",inv_addr_e2_1.get("1.0",END))
            inv_addr_canvas.config(state=DISABLED)
            canvas.create_window(395, 415, window=inv_addr_canvas)
            canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
            inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_ship_canv_lbl.config(text=inv_shipto_e3_1.get(),anchor="w",bg="white")
            canvas.create_window(751, 370, window=inv_ship_canv_lbl)
            inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_ship_addr_canvas.insert("1.0",inv_addr_e4_1.get("1.0",END))
            inv_ship_addr_canvas.config(state=DISABLED)
            canvas.create_window(736, 415,window=inv_ship_addr_canvas)

            inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_header_canvas.config(text=pageh_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(637, 452,window=inv_header_canvas)
            
            s = ttk.Style()
            s.configure('Treeview.Heading', background='',State='DISABLE')
            inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
            inv_prev_tree["columns"] = ["1","2","3"]
            inv_prev_tree.column("#0",width=1)
            inv_prev_tree.column("1",width=394,anchor=CENTER)
            inv_prev_tree.column("2",width=150,anchor=CENTER)
            inv_prev_tree.column("3",width=150,anchor=CENTER)
            inv_prev_tree.heading("#0",text="")
            inv_prev_tree.heading("1",text="Product/Service - Description")
            inv_prev_tree.heading("2",text="Quantity")
            inv_prev_tree.heading("3",text="Price")
            window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            
            for record in add_newline_tree_1.get_children():
              prev_data = list(add_newline_tree_1.item(record,'values'))
              if not comp_data:
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
              elif comp_data[12] == "1":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[6]))
              elif comp_data[12] == "2":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[7]))
              elif comp_data[12] == "3":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1] + "  -  " + prev_data[2],prev_data[4],prev_data[8]))
            

            if not comp_data:
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "1":
              canvas.create_line(980, 723, 980, 873 )
              canvas.create_line(720, 723, 720, 873 )
              canvas.create_line(860, 723, 860, 873 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,786,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,811,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,836,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,861,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_bal1_canvas)
            elif comp_data[12] == "2":
              canvas.create_line(980, 723, 980, 898 )
              canvas.create_line(720, 723, 720, 898 )
              canvas.create_line(860, 723, 860, 898 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,811,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,836,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,861,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,886,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_bal1_canvas)
            elif comp_data[12] == "3":
              canvas.create_line(980, 723, 980, 923 )
              canvas.create_line(720, 723, 720, 923 )
              canvas.create_line(860, 723, 860, 923 )#1st
              canvas.create_line(980, 723, 720, 723 )
              canvas.create_line(980, 748, 720, 748 )
              canvas.create_line(980, 773, 720, 773 ) 
              canvas.create_line(980, 798, 720, 798 )
              canvas.create_line(980, 823, 720, 823 )
              canvas.create_line(980, 848, 720, 848 )
              canvas.create_line(980, 873, 720, 873 )
              canvas.create_line(980, 898, 720, 898 )
              canvas.create_line(980, 923, 720, 923 )
                
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0]+str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(790,737,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,737,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="center")
                canvas.create_window(790,761,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,761,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="center")
                canvas.create_window(790,786,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,786,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="center")
                canvas.create_window(790,811,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,811,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="center")
                canvas.create_window(790,836,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,836,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="center")
                canvas.create_window(790,861,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,861,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="center")
                canvas.create_window(790,886,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,886,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="center")
                canvas.create_window(790,911,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(925,911,window=inv_bal1_canvas)

            inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
            bg="white",cursor="arrow",bd=0)
            inv_prev_comments.insert("1.0",comment_txt_1.get("1.0",END))
            inv_prev_comments.config(state=DISABLED)
            canvas.create_window(635, 980,window=inv_prev_comments)
            
            canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
            canvas.create_line(290, 1090, 982, 1090)
            
            inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
            inv_prev_terms.insert("1.0",term_txt_1.get("1.0",END))
            inv_prev_terms.tag_configure("tag_name", justify='left')
            inv_prev_terms.tag_add("tag_name", "1.0", "end")
            inv_prev_terms.config(state=DISABLED)
            canvas.create_window(642, 1125,window=inv_prev_terms)
            canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
            inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_prev_salesp.config(text=sales_per_entry_1.get(),anchor="w",bg="white")
            canvas.create_window(502, 1165, window = inv_prev_salesp)
            inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_footer_canvas.config(text=footer_txt_combo_1.get(),anchor="w",bg="white")
            canvas.create_window(413, 1185,window=inv_footer_canvas)
        #----------------Business Classic------------------ 
          elif temp_type == 'Business Classic':
            frame = Frame(prev_invo, width=953, height=300)
            frame.pack(expand=True, fill=BOTH)
            frame.place(x=5,y=30)
            canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
            
            vertibar=Scrollbar(frame, orient=VERTICAL)
            vertibar.pack(side=RIGHT,fill=Y)
            vertibar.config(command=canvas.yview)
            
            canvas.config(width=1315,height=640)
            canvas.config(yscrollcommand=vertibar.set)
            canvas.pack(expand=True,side=LEFT,fill=BOTH)
            canvas.create_rectangle(235, 25, 1080, 1430 , outline='yellow',fill='white')
            inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_title_canvas.config(text=title_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(657, 50,window=inv_title_canvas)
            canvas.create_line(290, 70, 1025, 70, fill='orange')

            try:
              image = Image.open("images/"+comp_data[13])
              resize_image = image.resize((250, 125))
              logo_img = ImageTk.PhotoImage(resize_image)
              b2 = Label(canvas,image=logo_img, height=125, width=250,)
              b2.photo = logo_img
              canvas.create_window(417, 155,window=b2)
            except:
              pass
            canvas.create_text(629, 110, text=comp_data[1], fill="black", font=('Helvetica 10 bold'))
            comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=21,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
            comp_addr_canvas.insert("1.0",comp_data[2])
            comp_addr_canvas.tag_configure("tag_name", justify='left')
            comp_addr_canvas.tag_add("tag_name", "1.0", "end")
            comp_addr_canvas.config(state=DISABLED)
            canvas.create_window(628, 165,window=comp_addr_canvas)
            inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=21,bg="white")
            inv_stax_canvas.config(text=comp_data[4],anchor="w")
            canvas.create_window(638, 220,window=inv_stax_canvas)
            

            inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_canv_name.config(text=inv_combo_e1_1.get(),anchor="w",bg="white")
            canvas.create_window(868, 110,window=inv_canv_name)
            inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=3,bd=0,fg= "black",
            bg="white",cursor="arrow")
            inv_addr_canvas.insert("1.0",inv_addr_e2_1.get("1.0",END))
            inv_addr_canvas.config(state=DISABLED)
            canvas.create_window(853, 157, window=inv_addr_canvas)
            
            canvas.create_text(765, 190, text="Invoice", fill="black", font=('Helvetica 10'))
            canvas.create_text(780, 210, text="Invoice date", fill="black", font=('Helvetica 10'))
            canvas.create_text(772, 230, text="Due date", fill="black", font=('Helvetica 10'))
            canvas.create_text(763, 250, text="Terms", fill="black", font=('Helvetica 10'))
            canvas.create_text(779, 270, text="Invoice ref.#", fill="black", font=('Helvetica 10'))
            inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_num_canvas.config(text=inv_number_entry_1.get(),anchor="w")
            canvas.create_window(963, 190,window=inv_num_canvas)
            canvas.create_text(900, 210, text=inv_date_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            canvas.create_text(900, 230, text=inv_duedate_entry_1.get_date(), fill="black", font=('Helvetica 11'))
            inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_terms_canvas.config(text=inv_terms_combo_1.get(),anchor="w")
            canvas.create_window(963, 250,window=inv_terms_canvas)
            inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
            inv_ref_canvas.config(text=inv_ref_entry_1.get(),anchor="w")
            canvas.create_window(963, 270,window=inv_ref_canvas) 

            inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_header_canvas.config(text=pageh_txt_combo_1.get(),anchor="center",bg="white")
            canvas.create_window(657, 290,window=inv_header_canvas)


            s = ttk.Style()
            s.configure('Treeview.Heading', background='',State='DISABLE')
            inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
            inv_prev_tree["columns"] = ["1","2","3","4","5"]
            inv_prev_tree.column("#0",width=1)
            inv_prev_tree.column("1",width=240,anchor=CENTER)
            inv_prev_tree.column("2",width=220,anchor=CENTER)
            inv_prev_tree.column("3",width=90,anchor=CENTER)
            inv_prev_tree.column("4",width=100,anchor=CENTER)
            inv_prev_tree.column("5",width=90,anchor=CENTER)
            inv_prev_tree.heading("#0",text="")
            inv_prev_tree.heading("1",text="Product/Service")
            inv_prev_tree.heading("2",text="Description")
            inv_prev_tree.heading("3",text="Quantity")
            inv_prev_tree.heading("4",text="Unit Price")
            inv_prev_tree.heading("5",text="Price")
            window = canvas.create_window(285, 300, anchor="nw", window=inv_prev_tree)
            
            
            currency_sql = "SELECT currencysign,currsignplace FROM company"
            fbcursor.execute(currency_sql,)
            currency_symb = fbcursor.fetchone()
            
            for record in add_newline_tree_1.get_children():
              prev_data = list(add_newline_tree_1.item(record,'values'))
              if not comp_data:
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "1":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[6]))
              elif comp_data[12] == "2":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[7]))
              elif comp_data[12] == "3":
                inv_prev_tree.insert(parent='', index='end',text='', values=(prev_data[1],prev_data[2],prev_data[4],prev_data[3],prev_data[8]))
            
            if not comp_data:
              canvas.create_line(1027, 560, 1027, 710 )
              canvas.create_line(720, 560, 720, 710 )
              canvas.create_line(1027, 560, 720, 560 )
              canvas.create_line(1027, 585, 720, 585 )
              canvas.create_line(1027, 610, 720, 610 ) 
              canvas.create_line(1027, 635, 720, 635 )
              canvas.create_line(1027, 660, 720, 660 )
              canvas.create_line(1027, 685, 720, 685 )
              canvas.create_line(1027, 710, 720, 710 )
              
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="center")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='w')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
            elif comp_data[12] == "1":
              canvas.create_line(1027, 560, 1027, 710 )
              canvas.create_line(720, 560, 720, 710 )
              canvas.create_line(1027, 560, 720, 560 )
              canvas.create_line(1027, 585, 720, 585 )
              canvas.create_line(1027, 610, 720, 610 ) 
              canvas.create_line(1027, 635, 720, 635 )
              canvas.create_line(1027, 660, 720, 660 )
              canvas.create_line(1027, 685, 720, 685 )
              canvas.create_line(1027, 710, 720, 710 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,624,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,649,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,674,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,699,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_bal1_canvas)
            elif comp_data[12] == "2":
              canvas.create_line(1027, 560, 1027, 735 )
              canvas.create_line(720, 560, 720, 735 )
              canvas.create_line(1027, 560, 720, 560 )
              canvas.create_line(1027, 585, 720, 585 )
              canvas.create_line(1027, 610, 720, 610 ) 
              canvas.create_line(1027, 635, 720, 635 )
              canvas.create_line(1027, 660, 720, 660 )
              canvas.create_line(1027, 685, 720, 685 )
              canvas.create_line(1027, 710, 720, 710 )
              canvas.create_line(1027, 735, 720, 735 )

              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,649,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,674,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,699,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,724,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,724,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,649,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,674,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,699,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,724,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,724,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,649,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,674,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,699,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,724,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,724,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,649,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,674,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,699,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,724,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,724,window=inv_bal1_canvas)
            elif comp_data[12] == "3":
              canvas.create_line(1027, 560, 1027, 760 )
              canvas.create_line(720, 560, 720, 760 )
              canvas.create_line(1027, 560, 720, 560 )
              canvas.create_line(1027, 585, 720, 585 )
              canvas.create_line(1027, 610, 720, 610 ) 
              canvas.create_line(1027, 635, 720, 635 )
              canvas.create_line(1027, 660, 720, 660 )
              canvas.create_line(1027, 685, 720, 685 )
              canvas.create_line(1027, 710, 720, 710 )
              canvas.create_line(1027, 735, 720, 735 )
              canvas.create_line(1027, 760, 720, 760)
                
              if currency_symb[1] == "before amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0]+str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0]+str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0]+str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="w")
                canvas.create_window(784,649,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0]+str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,674,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0]+str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(971,674,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,699,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0]+str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,724,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0]+str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,724,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,749,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0]+str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,749,window=inv_bal1_canvas)
              elif currency_symb[1] == "before amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=currency_symb[0] + " " + str(discount1_1.cget("text")),anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=currency_symb[0] + " " + str(sub1_1.cget("text")),anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(tax1_1.cget("text")),anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="w")
                canvas.create_window(784,649,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(tax2_1.cget("text")),anchor="e")
                canvas.create_window(971,649,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,674,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=currency_symb[0] + " " + str(cost1_1.cget("text")),anchor="e")
                canvas.create_window(984,674,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,699,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=currency_symb[0] + " " + str(invoicetot1_1.cget("text")),anchor="e")
                canvas.create_window(971,699,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,724,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=currency_symb[0] + " " + str(total1_1.cget("text")),anchor="e")
                canvas.create_window(971,724,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,749,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=currency_symb[0] + " " + str(balance1_1.cget("text")),anchor="e")
                canvas.create_window(971,749,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="w")
                canvas.create_window(784,649,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,674,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,699,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,724,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,724,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,749,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+currency_symb[0],anchor="e")
                canvas.create_window(971,749,window=inv_bal1_canvas)
              elif currency_symb[1] == "after amount with space":
                inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_dis_canvas.config(text=discount_1.cget("text"),anchor="w")
                canvas.create_window(784,574,window=inv_dis_canvas)
                inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_dis1_canvas.config(text=str(discount1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,574,window=inv_dis1_canvas)

                inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_sub_canvas.config(text="Subtotal",anchor="w")
                canvas.create_window(784,599,window=inv_sub_canvas)
                inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_sub1_canvas.config(text=str(sub1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,599,window=inv_sub1_canvas)

                inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX1_canvas.config(text="TAX1",anchor="w")
                canvas.create_window(784,624,window=inv_TAX1_canvas)
                inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_1_canvas.config(text=str(tax1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,624,window=inv_tax_1_canvas)

                inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_TAX2_canvas.config(text="TAX2",anchor="w")
                canvas.create_window(784,649,window=inv_TAX2_canvas)
                inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_tax_2_canvas.config(text=str(tax2_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,649,window=inv_tax_2_canvas)

                inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
                inv_excname_canvas.config(text=ex_costn_combo_1.get(),anchor="w")
                canvas.create_window(784,674,window=inv_excname_canvas)
                inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
                inv_excost_canvas.config(text=str(cost1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,674,window=inv_excost_canvas)

                inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_tot_canvas.config(text="Invoice Total",anchor="w")
                canvas.create_window(784,699,window=inv_tot_canvas)
                inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_tot1_canvas.config(text=str(invoicetot1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,699,window=inv_tot1_canvas)

                inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_totp_canvas.config(text="Total Paid",anchor="w")
                canvas.create_window(784,724,window=inv_totp_canvas)
                inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_totp1_canvas.config(text=str(total1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,724,window=inv_totp1_canvas)

                inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
                inv_bal_canvas.config(text="Balance",anchor="w")
                canvas.create_window(784,749,window=inv_bal_canvas)
                inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
                inv_bal1_canvas.config(text=str(balance1_1.cget("text"))+ " " +currency_symb[0],anchor="e")
                canvas.create_window(971,749,window=inv_bal1_canvas)

            canvas.create_line(290, 810, 1030, 810, fill='orange')
            inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=106,height=6,fg= "black",
            bg="white",cursor="arrow",bd=0)
            inv_prev_comments.insert("1.0",comment_txt_1.get("1.0",END))
            inv_prev_comments.config(state=DISABLED)
            canvas.create_window(661, 860,window=inv_prev_comments)

            canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
            canvas.create_line(290, 1090, 1030, 1090, fill='orange')
            
            inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=106,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
            inv_prev_terms.insert("1.0",term_txt_1.get("1.0",END))
            inv_prev_terms.tag_configure("tag_name", justify='left')
            inv_prev_terms.tag_add("tag_name", "1.0", "end")
            inv_prev_terms.config(state=DISABLED)
            canvas.create_window(661, 1125,window=inv_prev_terms)
            canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
            inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
            inv_prev_salesp.config(text=sales_per_entry_1.get(),anchor="w",bg="white")
            canvas.create_window(502, 1165, window = inv_prev_salesp)
            inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
            inv_footer_canvas.config(text=footer_txt_combo_1.get(),anchor="w",bg="white")
            canvas.create_window(413, 1185,window=inv_footer_canvas)
          else:
              pass


      ########################### Print Invoice #######################
      def printinvoice_1():
        if len(add_newline_tree_1.get_children()) == 0:
          messagebox.showwarning("F-Billing Revolution 2022","This invoice has no line items.\nPlease add line item(s) before printing.")
        else:
          from reportlab.pdfgen import canvas
          invnumber = inv_number_entry_1.get().split('/')[0]
          pdf = canvas.Canvas("Invoice Documents/"+invnumber+".pdf", pagesize=letter)

          type_temp = template_entry_1.get()
          if type_temp == 'Professional 1 (logo on left side)':
            pdf.setFont('Helvetica',12)
            pdf.drawCentredString(302,770,title_txt_combo_1.get())
            pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
            pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

            pdf.drawString(30,635,"Invoice#")
            pdf.drawString(30,620,"Invoice date")
            pdf.drawString(30,605,"Due date")
            pdf.drawString(30,590,"Terms")
            pdf.drawString(30,575,"Invoice ref#")

            pdf.drawString(140,635,inv_number_entry_1.get())
            pdf.drawString(140,620,str(inv_date_entry_1.get_date()))
            pdf.drawString(140,605,str(inv_duedate_entry_1.get_date()))
            pdf.drawString(140,590,inv_terms_combo_1.get())
            pdf.drawString(140,575,inv_ref_entry_1.get())

            pdf.drawString(60,550,"Invoice to")
            pdf.line(60,548,112,548)
            pdf.drawString(60,535,inv_combo_e1_1.get())
            invto_addr = inv_addr_e2_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(invto_addr,40))
            a  = wraped_text.split('\n')
                
            addr = len(a)
            if addr > 0:
              pdf.drawString(60,520,a[0])
              if addr > 1:
                pdf.drawString(60,505,a[1])
                if addr > 2:
                  pdf.drawString(60,490,a[2])
                  if addr > 3:
                    pdf.drawString(60,475,a[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(300,550,"Ship to")
            pdf.line(300,548,338,548)
            pdf.drawString(300,535,inv_shipto_e3_1.get())
            shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(shipto_addr,40))
            a1  = wraped_text.split('\n')
                
            addr1 = len(a1)
            if addr1 > 0:
              pdf.drawString(300,520,a1[0])
              if addr1 > 1:
                pdf.drawString(300,505,a1[1])
                if addr1 > 2:
                  pdf.drawString(300,490,a1[2])
                  if addr1 > 3:
                    pdf.drawString(300,475,a1[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass


            pdf.setFont('Helvetica-Bold',12)
            pdf.drawRightString(580,745, comp_data[1])
            pdf.setFont('Helvetica',12)
            text=comp_data[2]
            wraped_text="\n".join(wrap(text,30))
            htg=wraped_text.split('\n')
                
            vg=len(htg)
            if vg>0:
              pdf.drawAlignedString(582,730,htg[0])
              if vg>1:
                pdf.drawAlignedString(582,715,htg[1])
                if vg>2:
                  pdf.drawAlignedString(582,700,htg[2])
                  if vg>3:
                    pdf.drawAlignedString(582,685,htg[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawAlignedString(582,660, comp_data[4])
            pdf.setFont('Helvetica-Bold',16)
            pdf.drawAlignedString(582,620, "Invoice")

            pdf.setFont('Helvetica',12)
            pdf.drawAlignedString(582,580,"TAX EXEMPTED")


            pdf.setLineWidth(.3)
            pdf.line(30,470,30,450)
            pdf.line(580,470,580,450)
            pdf.line(130,470,130,450)
            pdf.line(310,470,310,450) #vertical lines
            pdf.line(400,470,400,450)
            pdf.line(490,470,490,450)
            #------------------------#
            pdf.line(30,450,580,450)
            pdf.line(30,470,580,470)


            pdf.drawString(60,455,"ID/SKU")
            pdf.drawString(175,455,"Product/Service")
            pdf.drawString(332,455,"Quantity")
            pdf.drawString(420,455,"Unit Price")
            pdf.drawString(523,455,"Price")

            y1 = 430 
            y2 = 430
            v1 = 450
            v2 = 430
            for i in add_newline_tree_1.get_children():
              if y1 <= 40:
                pdf.showPage()
                y1 = 730
                y2 = 730
                v1 = 750
                v2 = 730
                pdf.line(30,y1,580,y2)
                pdf.line(30,y1+20,580,y2+20)
              else:
                pass
              pdf.line(30,y1,580,y2)
              if comp_data[12] == "1":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "2":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "3":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
            
            calc_y1 = y1
            calc_y2 = y2        

            if comp_data[12] == "1":
              if calc_y1-100 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
            elif comp_data[12] == "2":
              if calc_y1-120 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  print(comp_data[6])
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')

                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            elif comp_data[12] == "3":
              if calc_y1-140 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')


                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
              
            
            if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
              pdf.showPage()
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
            else:
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
          elif type_temp == 'Professional 2 (logo on right side)':
            pdf.setFont('Helvetica',12)
            pdf.drawCentredString(302,770,title_txt_combo_1.get())
            pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
            pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

            pdf.drawString(340,635,"Invoice#")
            pdf.drawString(340,620,"Invoice date")
            pdf.drawString(340,605,"Due date")
            pdf.drawString(340,590,"Terms")
            pdf.drawString(340,575,"Invoice ref#")

            pdf.drawString(450,635,inv_number_entry_1.get())
            pdf.drawString(450,620,str(inv_date_entry_1.get_date()))
            pdf.drawString(450,605,str(inv_duedate_entry_1.get_date()))
            pdf.drawString(450,590,inv_terms_combo_1.get())
            pdf.drawString(450,575,inv_ref_entry_1.get())

            pdf.drawString(60,550,"Invoice to")
            pdf.line(60,548,112,548)
            pdf.drawString(60,535,inv_combo_e1_1.get())
            invto_addr = inv_addr_e2_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(invto_addr,30))
            a  = wraped_text.split('\n')
                
            addr = len(a)
            if addr > 0:
              pdf.drawString(60,520,a[0])
              if addr > 1:
                pdf.drawString(60,505,a[1])
                if addr > 2:
                  pdf.drawString(60,490,a[2])
                  if addr > 3:
                    pdf.drawString(60,475,a[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(300,550,"Ship to")
            pdf.line(300,548,338,548)
            pdf.drawString(300,535,inv_shipto_e3_1.get())
            shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(shipto_addr,30))
            a1  = wraped_text.split('\n')
                
            addr1 = len(a1)
            if addr1 > 0:
              pdf.drawString(300,520,a1[0])
              if addr1 > 1:
                pdf.drawString(300,505,a1[1])
                if addr1 > 2:
                  pdf.drawString(300,490,a1[2])
                  if addr1 > 3:
                    pdf.drawString(300,475,a1[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.setFont('Helvetica-Bold',12)
            pdf.drawString(30,745, comp_data[1])
            pdf.setFont('Helvetica',12)
            text=comp_data[2]
            wraped_text="\n".join(wrap(text,30))
            htg=wraped_text.split('\n')
                
            vg=len(htg)
            if vg>0:
              pdf.drawString(30,730,htg[0])
              if vg>1:
                pdf.drawString(30,715,htg[1])
                if vg>2:
                  pdf.drawString(30,700,htg[2])
                  if vg>3:
                    pdf.drawString(30,685,htg[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(30,660, comp_data[4])
            pdf.setFont('Helvetica-Bold',16)
            pdf.drawString(30,620, "Invoice")

            pdf.setFont('Helvetica',12)
            pdf.drawString(30,580,"TAX EXEMPTED")


            pdf.setLineWidth(.3)
            pdf.line(30,470,30,450)
            pdf.line(580,470,580,450)
            pdf.line(130,470,130,450)
            pdf.line(310,470,310,450) #vertical lines
            pdf.line(400,470,400,450)
            pdf.line(490,470,490,450)
            #------------------------#
            pdf.line(30,450,580,450)
            pdf.line(30,470,580,470)


            pdf.drawString(60,455,"ID/SKU")
            pdf.drawString(175,455,"Product/Service")
            pdf.drawString(332,455,"Quantity")
            pdf.drawString(420,455,"Unit Price")
            pdf.drawString(523,455,"Price")

            y1 = 430 
            y2 = 430
            v1 = 450
            v2 = 430
            for i in add_newline_tree_1.get_children():
              if y1 <= 40:
                pdf.showPage()
                y1 = 730
                y2 = 730
                v1 = 750
                v2 = 730
                pdf.line(30,y1,580,y2)
                pdf.line(30,y1+20,580,y2+20)
              else:
                pass
              pdf.line(30,y1,580,y2)
              if comp_data[12] == "1":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "2":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "3":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
                pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(130,v1,130,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
            
            calc_y1 = y1
            calc_y2 = y2        

            if comp_data[12] == "1":
              if calc_y1-100 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
            elif comp_data[12] == "2":
              if calc_y1-120 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  print(comp_data[6])
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')

                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            elif comp_data[12] == "3":
              if calc_y1-140 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')


                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
              
            
            if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
              pdf.showPage()
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
            else:
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
          elif type_temp == 'Simplified 1 (logo on left side)':
            pdf.setFont('Helvetica',12)
            pdf.drawCentredString(302,770,title_txt_combo_1.get())
            pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
            pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

            pdf.drawString(30,635,"Invoice#")
            pdf.drawString(30,620,"Invoice date")
            pdf.drawString(30,605,"Due date")
            pdf.drawString(30,590,"Terms")
            pdf.drawString(30,575,"Invoice ref#")

            pdf.drawString(140,635,inv_number_entry_1.get())
            pdf.drawString(140,620,str(inv_date_entry_1.get_date()))
            pdf.drawString(140,605,str(inv_duedate_entry_1.get_date()))
            pdf.drawString(140,590,inv_terms_combo_1.get())
            pdf.drawString(140,575,inv_ref_entry_1.get())

            pdf.drawString(60,550,"Invoice to")
            pdf.line(60,548,112,548)
            pdf.drawString(60,535,inv_combo_e1_1.get())
            invto_addr = inv_addr_e2_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(invto_addr,30))
            a  = wraped_text.split('\n')
                
            addr = len(a)
            if addr > 0:
              pdf.drawString(60,520,a[0])
              if addr > 1:
                pdf.drawString(60,505,a[1])
                if addr > 2:
                  pdf.drawString(60,490,a[2])
                  if addr > 3:
                    pdf.drawString(60,475,a[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(300,550,"Ship to")
            pdf.line(300,548,338,548)
            pdf.drawString(300,535,inv_shipto_e3_1.get())
            shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(shipto_addr,30))
            a1  = wraped_text.split('\n')
                
            addr1 = len(a1)
            if addr1 > 0:
              pdf.drawString(300,520,a1[0])
              if addr1 > 1:
                pdf.drawString(300,505,a1[1])
                if addr1 > 2:
                  pdf.drawString(300,490,a1[2])
                  if addr1 > 3:
                    pdf.drawString(300,475,a1[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass


            pdf.setFont('Helvetica-Bold',12)
            pdf.drawRightString(580,745, comp_data[1])
            pdf.setFont('Helvetica',12)
            text=comp_data[2]
            wraped_text="\n".join(wrap(text,30))
            htg=wraped_text.split('\n')
                
            vg=len(htg)
            if vg>0:
              pdf.drawAlignedString(582,730,htg[0])
              if vg>1:
                pdf.drawAlignedString(582,715,htg[1])
                if vg>2:
                  pdf.drawAlignedString(582,700,htg[2])
                  if vg>3:
                    pdf.drawAlignedString(582,685,htg[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawAlignedString(582,660, comp_data[4])
            pdf.setFont('Helvetica-Bold',16)
            pdf.drawAlignedString(582,620, "Invoice")

            pdf.setFont('Helvetica',12)
            pdf.drawAlignedString(582,580,"TAX EXEMPTED")


            pdf.setLineWidth(.3)
            pdf.line(30,470,30,450)
            pdf.line(580,470,580,450)
            pdf.line(310,470,310,450) #vertical lines
            pdf.line(450,470,450,450)
            #------------------------#
            pdf.line(30,450,580,450)
            pdf.line(30,470,580,470)


            pdf.drawString(130,455,"Product/Service")
            pdf.drawString(357,455,"Quantity")
            pdf.drawString(505,455,"Price")

            y1 = 430 
            y2 = 430
            v1 = 450
            v2 = 430
            for i in add_newline_tree_1.get_children():
              if y1 <= 40:
                pdf.showPage()
                y1 = 730
                y2 = 730
                v1 = 750
                v2 = 730
                pdf.line(30,y1,580,y2)
                pdf.line(30,y1+20,580,y2+20)
              else:
                pass
              pdf.line(30,y1,580,y2)
              if comp_data[12] == "1":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "2":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "3":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
            
            calc_y1 = y1
            calc_y2 = y2

            if comp_data[12] == "1":
              if calc_y1-100 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
            elif comp_data[12] == "2":
              if calc_y1-120 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  print(comp_data[6])
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')

                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            elif comp_data[12] == "3":
              if calc_y1-140 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')


                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
              
            
            if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
              pdf.showPage()
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
            else:
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
          elif type_temp == 'Simplified 2 (logo on right side)':
            pdf.setFont('Helvetica',12)
            pdf.drawCentredString(302,770,title_txt_combo_1.get())
            pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
            pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

            pdf.drawString(340,635,"Invoice#")
            pdf.drawString(340,620,"Invoice date")
            pdf.drawString(340,605,"Due date")
            pdf.drawString(340,590,"Terms")
            pdf.drawString(340,575,"Invoice ref#")

            pdf.drawString(450,635,inv_number_entry_1.get())
            pdf.drawString(450,620,str(inv_date_entry_1.get_date()))
            pdf.drawString(450,605,str(inv_duedate_entry_1.get_date()))
            pdf.drawString(450,590,inv_terms_combo_1.get())
            pdf.drawString(450,575,inv_ref_entry_1.get())

            pdf.drawString(60,550,"Invoice to")
            pdf.line(60,548,112,548)
            pdf.drawString(60,535,inv_combo_e1_1.get())
            invto_addr = inv_addr_e2_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(invto_addr,30))
            a  = wraped_text.split('\n')
                
            addr = len(a)
            if addr > 0:
              pdf.drawString(60,520,a[0])
              if addr > 1:
                pdf.drawString(60,505,a[1])
                if addr > 2:
                  pdf.drawString(60,490,a[2])
                  if addr > 3:
                    pdf.drawString(60,475,a[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(300,550,"Ship to")
            pdf.line(300,548,338,548)
            pdf.drawString(300,535,inv_shipto_e3_1.get())
            shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(shipto_addr,30))
            a1  = wraped_text.split('\n')
                
            addr1 = len(a1)
            if addr1 > 0:
              pdf.drawString(300,520,a1[0])
              if addr1 > 1:
                pdf.drawString(300,505,a1[1])
                if addr1 > 2:
                  pdf.drawString(300,490,a1[2])
                  if addr1 > 3:
                    pdf.drawString(300,475,a1[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.setFont('Helvetica-Bold',12)
            pdf.drawString(30,745, comp_data[1])
            pdf.setFont('Helvetica',12)
            text=comp_data[2]
            wraped_text="\n".join(wrap(text,30))
            htg=wraped_text.split('\n')
                
            vg=len(htg)
            if vg>0:
              pdf.drawString(30,730,htg[0])
              if vg>1:
                pdf.drawString(30,715,htg[1])
                if vg>2:
                  pdf.drawString(30,700,htg[2])
                  if vg>3:
                    pdf.drawString(30,685,htg[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(30,660, comp_data[4])
            pdf.setFont('Helvetica-Bold',16)
            pdf.drawString(30,620, "Invoice")

            pdf.setFont('Helvetica',12)
            pdf.drawString(30,580,"TAX EXEMPTED")


            pdf.setLineWidth(.3)
            pdf.line(30,470,30,450)
            pdf.line(580,470,580,450)
            pdf.line(310,470,310,450) #vertical lines
            pdf.line(450,470,450,450)
            #------------------------#
            pdf.line(30,450,580,450)
            pdf.line(30,470,580,470)


            pdf.drawString(130,455,"Product/Service")
            pdf.drawString(357,455,"Quantity")
            pdf.drawString(505,455,"Price")

            y1 = 430 
            y2 = 430
            v1 = 450
            v2 = 430
            for i in add_newline_tree_1.get_children():
              if y1 <= 40:
                pdf.showPage()
                y1 = 730
                y2 = 730
                v1 = 750
                v2 = 730
                pdf.line(30,y1,580,y2)
                pdf.line(30,y1+20,580,y2+20)
              else:
                pass
              pdf.line(30,y1,580,y2)
              if comp_data[12] == "1":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "2":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "3":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(450,v1,450,v2)
                v1 -= 20
                v2 -= 20
            
            calc_y1 = y1
            calc_y2 = y2

            if comp_data[12] == "1":
              if calc_y1-100 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])
                  
                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                pdf.line(465,calc_y1-100,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
            elif comp_data[12] == "2":
              if calc_y1-120 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  print(comp_data[6])
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                pdf.line(465,calc_y1-120,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')

                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            elif comp_data[12] == "3":
              if calc_y1-140 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                pdf.line(465,calc_y1-140,465,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')


                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":            
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
              
            
            if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
              pdf.showPage()
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
            else:
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')
                  
              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
          elif type_temp == 'Business Classic':
            pdf.setStrokeColorRGB(255,10,0)
            pdf.line(30,762,580,762)
            pdf.setFont('Helvetica',12)
            pdf.drawCentredString(302,770,title_txt_combo_1.get())
            pdf.drawCentredString(302,585,pageh_txt_combo_1.get())
            pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

            pdf.setFont('Helvetica-Bold',12)
            pdf.drawString(240,735, comp_data[1])
            pdf.setFont('Helvetica',12)
            text=comp_data[2]
            wraped_text="\n".join(wrap(text,30))
            htg=wraped_text.split('\n')
                
            vg=len(htg)
            if vg>0:
              pdf.drawString(240,720,htg[0])
              if vg>1:
                pdf.drawString(240,705,htg[1])
                if vg>2:
                  pdf.drawString(240,690,htg[2])
                  if vg>3:
                    pdf.drawString(240,675,htg[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.drawString(240,650, comp_data[4])

            pdf.drawString(390,665,"Invoice#")
            pdf.drawString(390,650,"Invoice date")
            pdf.drawString(390,635,"Due date")
            pdf.drawString(390,620,"Terms")
            pdf.drawString(390,605,"Invoice ref#")

            pdf.drawString(480,665,inv_number_entry_1.get())
            pdf.drawString(480,650,str(inv_date_entry_1.get_date()))
            pdf.drawString(480,635,str(inv_duedate_entry_1.get_date()))
            pdf.drawString(480,620,inv_terms_combo_1.get())
            pdf.drawString(480,605,inv_ref_entry_1.get())

            pdf.drawString(390,735,inv_combo_e1_1.get())
            invto_addr = inv_addr_e2_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(invto_addr,30))
            a  = wraped_text.split('\n')
                
            addr = len(a)
            if addr > 0:
              pdf.drawString(390,720,a[0])
              if addr > 1:
                pdf.drawString(390,705,a[1])
                if addr > 2:
                  pdf.drawString(390,590,a[2])
                  if addr > 3:
                    pdf.drawString(390,575,a[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass

            pdf.setStrokeColorRGB(0,0,0)
            pdf.setLineWidth(.3)
            pdf.line(30,580,30,560)
            pdf.line(580,580,580,560)
            pdf.line(310,580,310,560) #vertical lines
            pdf.line(400,580,400,560)
            pdf.line(490,580,490,560)
            #------------------------#
            pdf.line(30,560,580,560)
            pdf.line(30,580,580,580)


            pdf.drawString(130,565,"Product/Service")
            pdf.drawString(332,565,"Quantity")
            pdf.drawString(420,565,"Unit Price")
            pdf.drawString(523,565,"Price")

            y1 = 540 
            y2 = 540
            v1 = 560
            v2 = 540
            for i in add_newline_tree_1.get_children():
              if y1 <= 40:
                pdf.showPage()
                y1 = 730
                y2 = 730
                v1 = 750
                v2 = 730
                pdf.line(30,y1,580,y2)
                pdf.line(30,y1+20,580,y2+20)
              else:
                pass
              pdf.line(30,y1,580,y2)
              if comp_data[12] == "1":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "2":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
              elif comp_data[12] == "3":
                pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
                pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
                pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
                pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
                y1 -= 20
                y2 -= 20

                pdf.line(30,v1,30,v2)
                pdf.line(580,v1,580,v2)
                pdf.line(310,v1,310,v2) #vertical lines
                pdf.line(400,v1,400,v2)
                pdf.line(490,v1,490,v2)
                v1 -= 20
                v2 -= 20
            
            calc_y1 = y1
            calc_y2 = y2

            if comp_data[12] == "1":
              if calc_y1-100 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-100,350,calc_y1+20)
                pdf.line(580,calc_y1-100,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-170 <= 40:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-125,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-140,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-155,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-170,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
            elif comp_data[12] == "2":
              if calc_y1-120 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-120,350,calc_y1+20)
                pdf.line(580,calc_y1-120,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
      
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-190 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-145,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-160,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-175,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-190,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            elif comp_data[12] == "3":
              if calc_y1-140 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1+20,580,calc_y2+20)
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              else:
                pdf.line(350,calc_y1-140,350,calc_y1+20)
                pdf.line(580,calc_y1-140,580,calc_y1+20)
                #-----------------------------------
                pdf.line(350,calc_y1,580,calc_y2)
                pdf.line(350,calc_y1-20,580,calc_y2-20)
                pdf.line(350,calc_y1-40,580,calc_y2-40)
                pdf.line(350,calc_y1-60,580,calc_y2-60)
                pdf.line(350,calc_y1-80,580,calc_y2-80)
                pdf.line(350,calc_y1-100,580,calc_y2-100)
                pdf.line(350,calc_y1-120,580,calc_y2-120)
                pdf.line(350,calc_y1-140,580,calc_y2-140)
                if comp_data[7] == "before amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "before amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                elif comp_data[7] == "after amount with space":
                  pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                  pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                  pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                  pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                  pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                  pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                  pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                  pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                  pdf.drawString(352,(calc_y1-140)+5,"Balance")
                  pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                  pdf.setStrokeColorRGB(255,10,0)
                  pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                  comment_text = comment_txt_1.get("1.0","end-1c")
                  wraped_text = "\n".join(wrap(comment_text,102))
                  c  = wraped_text.split('\n')
                      
                  if calc_y1-210 <= 45:
                    pdf.showPage()
                    calc_y1 = 730
                    calc_y2 = 730   
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-15,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-30,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-45,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass 
                  else:
                    comm = len(c)
                    if comm > 0:
                      pdf.drawString(32,calc_y1-165,c[0])
                      if comm > 1:
                        pdf.drawString(32,calc_y1-180,c[1])
                        if comm > 2:
                          pdf.drawString(32,calc_y1-195,c[2])
                          if comm > 3:
                            pdf.drawString(32,calc_y1-210,c[3])
                          else:
                            pass
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass

            if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
              pdf.showPage() 
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')

              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())
            else:
              pdf.drawCentredString(302,115,"Terms and Conditions")
              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,110,580,110)
              term_text = term_txt_1.get("1.0","end-1c")
              wraped_text = "\n".join(wrap(term_text,102))
              t  = wraped_text.split('\n')

              term = len(t)
              if term > 0:
                pdf.drawString(32,95,t[0])
                if term > 1:
                  pdf.drawString(32,80,t[1])
                  if term > 2:
                    pdf.drawString(32,65,t[2])
                    if term > 3:
                      pdf.drawString(32,50,t[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
              
              pdf.drawString(32,30,"Sales Person :")
              pdf.drawString(115,30,sales_per_entry_1.get())
              pdf.drawString(32,15,footer_txt_combo_1.get())


          pdf.save()
          win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+invnumber+".pdf",None,".",0)


      
      #sms notification
      def sms1():
        send_SMS=Toplevel()
        send_SMS.geometry("700x480+240+150")
        send_SMS.title("Send SMS notification")

        style = ttk.Style()
        style.theme_use('default')
        style.configure('TNotebook.Tab', background="#999999", padding=5)
        sms_Notebook = ttk.Notebook(send_SMS)
        SMS_Notification = Frame(sms_Notebook, height=470, width=700)
        SMS_Service_Account = Frame(sms_Notebook, height=470, width=700)
        sms_Notebook.add(SMS_Notification, text="SMS Notification")
        sms_Notebook.add(SMS_Service_Account, text="SMS Service Account")
        sms_Notebook.place(x=0, y=0)

        numlbel=Label(SMS_Notification, text="SMS number or comma seperated SMS number list(Please start each SMS number with the country code)")
        numlbel.place(x=10, y=10)
        numentry=Entry(SMS_Notification, width=92).place(x=10, y=30)
        stexbel=Label(SMS_Notification, text="SMS Text").place(x=10, y=60)
        stex=Entry(SMS_Notification, width=40).place(x=10, y=85,height=120)
        
        dclbel=Label(SMS_Notification, text="Double click to insert into text")
        dclbel.place(x=410, y=60)
        dcl=Entry(SMS_Notification, width=30)
        dcl.place(x=400, y=85,height=200)
        
        smstype=LabelFrame(SMS_Notification, text="SMS message type", width=377, height=60)
        smstype.place(x=10, y=223)
        snuvar=IntVar()
        normal_rbtn=Radiobutton(smstype, text="Normal SMS(160 chars)", variable=snuvar, value=1)
        normal_rbtn.place(x=5, y=5)
        unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)", variable=snuvar, value=2)
        unicode_rbtn.place(x=190, y=5)
        tiplbf=LabelFrame(SMS_Notification, text="Tips", width=680, height=120)
        tiplbf.place(x=10, y=290)
        tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="Always start the SMS nymber with the country code. Do not use the + sign at the beginning(example\nUS number:8455807546). Do not use any special characters in your normal SMS text. Please use the\nstndard SMS characters or the English alphabet and numbers only. Otherwise the SMS will be\nunreadable or undeliverable. If you need to enter international characters, accents,email address, or\nspecial characters to the SMS text field then choose the Unicode SMS format.")
        tiplabl.place(x=5, y=5)

        btn1=Button(SMS_Notification, width=20, text="Send SMS notification").place(x=10, y=420)
        btn2=Button(SMS_Notification, width=25, text="Confirm SMS cost before sending").place(x=280, y=420)
        btn3=Button(SMS_Notification, width=15, text="Cancel").place(x=550, y=420)
        

        smstype=LabelFrame(SMS_Service_Account, text="Select the notification service provider", width=670, height=65)
        smstype.place(x=10, y=5)
        snumvar=IntVar()
        normal_rbtn=Radiobutton(smstype,text="BULKSMS(www.bulksms.com)",variable=snumvar,value=1,)
        normal_rbtn.place(x=5, y=5)
        unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)-Recommended", variable=snumvar, value=2)
        unicode_rbtn.place(x=290, y=5)

        sms1type=LabelFrame(SMS_Service_Account, text="Your BULKSMS.COM Account", width=670, height=100)
        sms1type.place(x=10, y=80)
        name=Label(sms1type, text="Username").place(x=10, y=5)
        na=Entry(sms1type, width=20).place(x=100, y=5)
        password=Label(sms1type, text="Password").place(x=10, y=45)
        pas=Entry(sms1type, width=20).place(x=100, y=45)
        combo=Label(sms1type, text="Route").place(x=400, y=5)
        n = StringVar()
        combo1 = ttk.Combobox(sms1type, width = 20, textvariable = n ).place(x=450,y=5)
        btn1=Button(sms1type, width=10, text="Save settings").place(x=550, y=45)

        
        tiplbf=LabelFrame(SMS_Service_Account, text="Terms of service", width=680, height=250)
        tiplbf.place(x=10, y=190)
        tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="The SMS notification service is not free.This service costs you creadit.You must have your own account\nat BULKSMS.COM and you need to have sufficient creadit and an active internet connection to use\nthis feature.Please review all fields in this form for accuracy")
        tiplabl.place(x=0, y=5)
        tiplabl1=Label(tiplbf,justify=LEFT,fg="black",  text="visit www.bulksms.com website to create your own account.please make sure the BULKSMS .COM\n service works well in your country before you busy creadit")
        tiplabl1.place(x=0, y=60)
        tiplabl2=Label(tiplbf,justify=LEFT,fg="black",  text="Our SMS notification tool comes without any warranty.our software only forwards your SMS message\nthe BULKSMS API server .The BULKSMS API server will try to sent SMS message your recipient")
        tiplabl2.place(x=0, y=100)
        tiplabl3=Label(tiplbf,justify=LEFT,fg="red",  text="Please note that you access and use the SMS notification tool your own risk.F-Billing software is not\nresponsible for any type of loss or damage or undelivered SMS massage which you may as a result\nof accessing and using the SMS notification service.")
        tiplabl3.place(x=0, y=140)
        checkvar1=IntVar()
        chkbtn1=Checkbutton(tiplbf,text="I have read and agree to the terms of service above",variable=checkvar1,onvalue=1,offvalue=0).place(x=70, y=200) 

      
      def recalc_dis_1(event):
        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc 
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
            

      def recalc_exc_1(event):
        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal) 
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal) 

      
      ############## Record New Payment ###############
      def record_newpay_1():
        inv_as_paid_1.destroy()
        newpay_inv_1=Toplevel()
        newpay_inv_1.geometry("700x480+240+150")
        newpay_inv_1.title("Record Payement for Invoice") 

        global discount_rate,total_cost,dis_rate,exc,tax1_rate

        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal) 
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
            
        def add_newline_pay_1():
          if inv_pby_combo_1.get() == '':
            messagebox.showinfo("F-Billing Revolution 2022",'Please fill out "Paid by" field!')
          else:
            pay_amnt = inv_amnt_entry_1.get()
            pay_date = inv_pdate_entry_1.get_date()
            pay_by = inv_pby_combo_1.get()
            pay_desc = inv_des_entry_1.get()
            pay_inv_number = inv_number_entry_1.get()
            pay_full = checkvar_1.get()
            pay_recp = checkvar1_1.get()
            pay_att_up = checkvar2_1.get()
            pay_sql = "INSERT INTO payments(payment_date,paid_by,description,amount,invoice_number,paid_n_close,payment_reciept,updated_invoice) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
            pay_val = (pay_date,pay_by,pay_desc,pay_amnt,pay_inv_number,pay_full,pay_recp,pay_att_up,)
            fbcursor.execute(pay_sql,pay_val)
            fbilldb.commit()

            pay_get_sql = "SELECT * FROM payments ORDER BY payment_id DESC LIMIT 1"
            fbcursor.execute(pay_get_sql)
            pay_data = fbcursor.fetchone()
            pay_tree_1.insert(parent='',index='end',iid=pay_data[0],text='',values=(pay_data[0],pay_data[1],pay_data[2],pay_data[3],pay_data[4]))

            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
            newpay_inv_1.destroy()


            def inv_send_mail_1(file=None):
              try:
                # sender_mail = your_cemail_entry.get()
                sender_mail = "infoxfbilling77@gmail.com"
                # sender_password = your_cpass_entry.get()
                sender_password = "dinkiurlziohgfok"

                server = smtplib.SMTP('smtp.gmail.com', 587)
                print("login successfull")
                server.starttls()
                print("login successfull2")
                server.login(sender_mail,sender_password)
                print("login successfull3")

                carbon_info = email_carbon.get()
                msg = MIMEMultipart()
                msg['Subject'] = email_subject.get()
                mail_content = email_ltr_scroll.get("1.0",'end-1c')
                msg['From'] = email_from.get()
                msg['To'] = email_to.get()

                gettingimg = lstfrm.get()
                lst_data = gettingimg[1:-1].split(',')
                
                msg.attach(MIMEText(mail_content, 'plain'))
                
                for i in lst_data:
                  if len(i.strip()[1:-1])>1:
                    with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                        # MIME attachment is a binary file for that content type "application/octet-stream" is used
                      part = MIMEBase("application", "octet-stream")
                      part.set_payload(attachment.read())
                    # encode into base64 
                      encoders.encode_base64(part) 
                
                      part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

                    # attach the instance 'part' to instance 'message' 
                      msg.attach(part)
                  # message_body = email_body.get()

                server.sendmail(email_from.get(),email_to.get(),msg.as_string())
                server.sendmail(email_from.get(), carbon_info,msg.as_string())

                date = dt.datetime.now().date()
                never1_label_1.config(text=date)
                print("message sent")
              except:
                pass



            if checkvar1_1.get() == 1:
              send_precp = Toplevel()
              p2 = PhotoImage(file = "images/fbicon.png")
              send_precp.iconphoto(False, p2)
              send_precp.geometry("1030x490+150+120")
              send_precp.title("Payment reciept E-mail")

              # def my_SMTP():
              #     if True:
              #         em_ser_conbtn.destroy()
              #         mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
              #         mysmtpservercon.place(x=610, y=110)
              #         lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
              #         hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
              #         lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
              #         portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
              #         lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
              #         unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
              #         lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
              #         pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
              #         ssl_chkvar=IntVar()
              #         ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
              #         ssl_chkbtn.place(x=50, y=110)
              #         em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
              #     else:
              #         pass


              def inv_empsfile_image_1(event):
                global yawn
                for i in  attach_list.curselection():
                  print("hloo", attach_list.get(i))
                  yawn= attach_list.get(i)        
                  edit_window_img = Toplevel()
                  edit_window_img.title("View Image")
                  edit_window_img.geometry("700x500")
                  image = Image.open("images/"+yawn)
                  resize_image = image.resize((700, 500))
                  image = ImageTk.PhotoImage(resize_image)
                  psimage = Label(edit_window_img,image=image)
                  psimage.photo = image
                  psimage.pack()
              
              def inv_UploadAction_1(event=None):
                global filenamez

                filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
                shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
                attach_list.insert(0, filenamez.split('/')[-1])


              def inv_deletefile_1():
                inv_remove=attach_list.curselection()
                yawn=attach_list.get(inv_remove) 
                print(yawn)       
                attach_list.delete(ACTIVE)

              style = ttk.Style()
              style.theme_use('default')
              style.configure('TNotebook.Tab', background="#999999", padding=5)
              email_Notebook = ttk.Notebook(send_precp)
              email_Frame = Frame(email_Notebook, height=500, width=1080)
              account_Frame = Frame(email_Notebook, height=550, width=1080)
              email_Notebook.add(email_Frame, text="E-mail")
              email_Notebook.add(account_Frame, text="Account")
              email_Notebook.place(x=0, y=0)
              messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
              messagelbframe.place(x=5, y=5)
              global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
              email_to = StringVar()
              email_subject = StringVar()
              email_from = StringVar()
              email_passw = StringVar()
              email_carbon = StringVar()
              email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
              email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
              email_to_addr_entry.place(x=120, y=5)
              email_addr = inv_email_e5_1.get()
              email_to_addr_entry.delete(0,END)
              email_to_addr_entry.insert(0,email_addr)
              send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail_1)
              send_email_btn.place(x=600, y=10)
              carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
              carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
              carbon_entry.place(x=120, y=32)
              subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
              subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
              subject_entry.place(x=120, y=59)
              subject = inv_number_entry_1.get()
              subject_entry.delete(0,END)
              subject_entry.insert(0,"Payment reciept for Invoice" + " " + "(" + subject + ")")

              style = ttk.Style()
              style.theme_use('default')
              style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
              mess_Notebook = ttk.Notebook(messagelbframe)
              emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
              htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
              mess_Notebook.add(emailmessage_Frame, text="E-mail message")
              mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
              mess_Notebook.place(x=5, y=90)

              email_ltr_scroll=scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True)
              email_ltr_scroll.place(x=0, y=28)
              pay_name = inv_combo_e1_1.get()
              email_ltr_scroll.delete("1.0",END)
              email_ltr_scroll.insert("1.0","\n\n  Dear" + " " + pay_name + "," + "\n\n  This message is to inform you that your payment of" + " " + str(pay_amnt) + " " + "for Invoice#" + " " + pay_inv_number + " " + "\n  has been received \n\n  Payment ID: RCPT" + "" + str(pay_data[0]) + "" + "\n  Invoice ID: " + "" + pay_inv_number + "" + "\n  Payment Date: " + "" + str(pay_date) + "" + "\n  Amount: " + "" + str(pay_amnt) + "" + "\n  Paid by: " + "" + pay_by + "" + "\n  Description: " + "" + pay_desc + "" + "\n\n  Thank you for your business.\n  Your Company Name")

              sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
              sel_all_btn.place(x=0, y=1)  
              cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
              cut_btn.place(x=36, y=1)
              copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
              copy_btn.place(x=73, y=1)
              paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
              paste_btn.place(x=105, y=1)
              undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
              undo_btn.place(x=140, y=1)
              redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
              redo_btn.place(x=175, y=1)

              def bold_text():
                bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                bold_font.configure(weight="bold")

                email_ltr_scroll.tag_configure("bold", font=bold_font)

                current_tags = email_ltr_scroll.tag_names("sel.first")

                if "bold" in current_tags:
                  email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
                else:
                  email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
              bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
              bold_btn.place(x=210, y=1)

              def italic_text():
                italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                italic_font.configure(slant="italic")

                email_ltr_scroll.tag_configure("italic", font=italic_font)

                current_tags = email_ltr_scroll.tag_names("sel.first")

                if "italic" in current_tags:
                  email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
                else:
                  email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
              italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
              italic_btn.place(x=245, y=1)

              def underline_text():
                try:
                  if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
                      email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
                  else:
                      email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
                      email_ltr_scroll.tag_configure('underline_selection', underline=True)
                except TclError:
                    pass
              underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
              underline_btn.place(x=280, y=1)

              def align_left():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('left',justify=LEFT)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'left')
              align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
              align_lbtn.place(x=315, y=1)

              def align_right():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('right',justify=RIGHT)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'right')
              align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
              align_rbtn.place(x=350, y=1)

              def align_center():
                data = email_ltr_scroll.get(0.0,END)
                email_ltr_scroll.tag_config('center',justify=CENTER)
                email_ltr_scroll.delete(0.0,END)
                email_ltr_scroll.insert(INSERT,data,'center')
              align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
              align_cbtn.place(x=385, y=1)
              hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
              hyper_btn.place(x=420, y=1)
              remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
              remove_btn.place(x=455, y=1)

              def color_text():
                color = colorchooser.askcolor()[1]
                if color:
                  color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

                  email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

                  current_tags = email_ltr_scroll.tag_names("sel.first")

                  if "colored" in current_tags:
                    email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
                  else:
                    email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
              color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
              color_btn.place(x=490, y=1)

              fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=3)
              fontsize_combo.place(x=600, y=5)
              fontsize_combo['values'] = ('1','2','3','4','5','6','7')
              fontsize_combo.current(0)
              btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
              btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
              btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
              btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
              email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
              email_html_scroll.place(x=0, y=28)
              attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
              attachlbframe.place(x=740, y=5)
              lstfrm = StringVar()
              attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
              attach_list.place(x=5, y=3)
              attach_list.bind('<Double-Button-1>',inv_empsfile_image_1)
              lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
              btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction_1)
              btn17.place(x=60, y=260)
              btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile_1)
              btn18.place(x=60, y=295)
              lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
              lbl_tt_info.place(x=740, y=370)

              ready_frame=Frame(send_precp, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
              
              sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
              sendatalbframe.place(x=5, y=5)
              your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
              your_cemail_entry = Entry(sendatalbframe, width=40)
              your_cemail_entry.place(x=195, y=30)

              your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
              your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
              your_cpass_entry.place(x=195, y=60)
            else:
              pass
          
        def cancel_newline_pay_1():
          newpay_inv_1.destroy()


        style = ttk.Style()
        style.theme_use('default')
        style.configure('TNotebook.Tab', background="#999999", padding=5)
        mark_Notebook = ttk.Notebook(newpay_inv_1)
        Mark_Invoice = Frame(mark_Notebook, height=470, width=750)
        mark_Notebook.add(Mark_Invoice, text="Mark Invoice")
        mark_Notebook.place(x=0, y=0)

        inv_bal_label_1=Label(Mark_Invoice, text="Invoice Balance").place(x=10, y=10)
        inv_bal_entry_1=Label(Mark_Invoice, width=25,fg="red",bg="white",text=bal,font=("Arial",10,"bold"))
        inv_bal_entry_1.place(x=130, y=10)
        labelframe5 = LabelFrame(Mark_Invoice,text="Payement Record Details",bg="#f5f3f2")
        labelframe5.place(x=10,y=60,width=670,height=250)
        inv_amnt_entry_1 = Entry(labelframe5,width=28)
        inv_amnt_entry_1.place(x=30,y=45)
        inv_amnt_entry_1.delete(0,END)
        inv_amnt_entry_1.insert(0,bal)
        inv_pdate_label_1 = Label(labelframe5, text="Payement Date:",bg="#f5f3f2").place(x=250,y=20)
        inv_pdate_entry_1 = DateEntry(labelframe5,width=28)
        inv_pdate_entry_1.place(x=220,y=45)
        inv_pby_label_1 = Label(labelframe5, text="Paid By:",bg="#f5f3f2").place(x=450,y=20)
        term_sql_1 = "SELECT terms_of_payment FROM terms_of_payment"
        fbcursor.execute(term_sql_1,)
        term_data_1 = fbcursor.fetchall()
        tdata_1 = []
        for i in term_data_1:
          tdata_1.append(i[0])
        inv_pby_combo_1 = ttk.Combobox(labelframe5, value=tdata_1)
        inv_pby_combo_1.place(x=450,y=45)
        inv_pby_combo_1.bind("<<ComboboxSelected>>")
        inv_des_label_1=Label(labelframe5, text="Description").place(x=30, y=80)
        inv_des_entry_1=Entry(labelframe5, width=100)
        inv_des_entry_1.place(x=30, y=120)
        checkvar_1=IntVar()
        inv_pfull_check_1 = Checkbutton(labelframe5,text="Paid in full and close invoice",variable=checkvar_1,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_pfull_check_1.place(x=30 ,y=150)
        inv_precp_label_1 = Label(labelframe5,text="Payement Reciepts",bg="#f5f3f2").place(x=300,y=145)
        checkvar1_1=IntVar()
        inv_send_precp_1 = Checkbutton(labelframe5,text="Send Payement Reciept",variable=checkvar1_1,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_send_precp_1.place(x=320 ,y=170)
        checkvar2_1=IntVar()
        inv_att_upinv_1 = Checkbutton(labelframe5,text="Attach updated invoice",variable=checkvar2_1,onvalue=1,offvalue=0,bg="#f5f3f2")
        inv_att_upinv_1.place(x=320 ,y=200)

        inv_pok_btn_1 =Button(Mark_Invoice,compound = LEFT,image=tick , text="Save payement", width=100,command=add_newline_pay_1)
        inv_pok_btn_1.place(x=10, y=350)
        inv_pcan_btn_1 =Button(Mark_Invoice,compound = LEFT,image=cancel, text="Cancel", width=100,command=cancel_newline_pay_1)
        inv_pcan_btn_1.place(x=500, y=350)

      #mark invoice
      def markinvo_1():
        pay_sel_sql = "SELECT * FROM payments WHERE invoice_number=%s"
        pay_sel_val = (edit_inv_data[1],)
        fbcursor.execute(pay_sel_sql,pay_sel_val)
        pay_sel_data = fbcursor.fetchall()
        if pay_sel_data:
          pay_list = []
          for p in pay_sel_data:
            pay_list.append(p)
          pd = pay_list[-1]
        else:
          pd = 0
        check_newline = add_newline_tree_1.get_children()

        def markas_paid_1():
          invoice_number_1 = inv_number_entry_1.get()
          invodate_1 = inv_date_entry_1.get_date()
          if checkvarStatus5_1.get() == 0:
            duedate_1 = NULL
          else:
            duedate_1 = inv_duedate_entry_1.get_date()
          term_of_payment_1 = inv_terms_combo_1.get()
          ref_1 = inv_ref_entry_1.get()
          status_1 = draft_label_1.cget("text")
          emailon_1 = never1_label_1.cget("text")
          printon_1 = never2_label_1.cget("text")
          # smson = 
          subtotal_1 = sub1_1.cget("text")
          invoicetot_1 = invoicetot1_1.cget("text")
          totpaid_1 = total1_1.cget("text")
          balance_1 = balance1_1.cget("text")
          extracostname_1 = ex_costn_combo_1.get()
          extracost_1 = cost1_1.cget("text")
          template_1 = template_entry_1.get()
          salesper_1 = sales_per_entry_1.get()
          discourate_1 = dis_rate_entry_1.get()
          discount_1 = discount1_1.cget("text")
          tax1_01 = tax1_1.cget("text")
          category_1 = category_entry_1.get()
          businessname_1 = inv_combo_e1_1.get()
          businessaddress_1 = inv_addr_e2_1.get("1.0",END)
          shipname_1 = inv_shipto_e3_1.get()
          shipaddress_1 = inv_addr_e4_1.get("1.0",END)
          cpemail_1 = inv_email_e5_1.get()
          cpmobileforsms_1 = inv_sms_e6_1.get()
          if checkrecStatus_1.get() == 0 :
            next_invoice_1 = NULL
            stop_recurring_1 = NULL
            recurring_period_1 = NULL
            recurring_period_month_1 = NULL
            recurring_check_1 = checkrecStatus_1.get()
          else:
            next_invoice_1 = recur_nxt_inv_date_1.get_date()
            stop_recurring_1 = recur_stop_date_1.get_date()
            recurring_period_1 = recur_period_entry_1.get()
            recurring_period_month_1 = recur_month_combo_1.get()
            recurring_check_1 = checkrecStatus_1.get()
          title_text_1 = title_txt_combo_1.get()
          header_text_1 = pageh_txt_combo_1.get()
          footer_text_1 = footer_txt_combo_1.get()
          tax2_01 = tax2_1.cget("text")
          comments_1 = comment_txt_1.get("1.0",END)
          privatenotes_1 = private_note_txt_1.get("1.0",END)
          terms_1 = term_txt_1.get("1.0",END)
          paid_n_closed = 1
          doc_get_1 = doc_tree_1.get_children()
          for qn in add_newline_tree_1.get_children():
            quantity_1 = add_newline_tree_1.item(qn)["values"][4]

          del_storp_sql = "DELETE FROM storingproduct WHERE invoice_number=%s"
          del_storp_val = (invoice_number_1,)
          fbcursor.execute(del_storp_sql,del_storp_val)
          fbilldb.commit()

          comp_sql = "SELECT * FROM company"
          fbcursor.execute(comp_sql,)
          comp_data_1 = fbcursor.fetchone()
          for record in add_newline_tree_1.get_children():
            storingproduct = add_newline_tree_1.item(record)["values"]
            if not comp_data_1:
              storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
              storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
              fbcursor.execute(storepro_sql,storepro_val)
              fbilldb.commit()
            elif comp_data_1[12] == "1":
              storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
              storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
              fbcursor.execute(storepro_sql,storepro_val)
              fbilldb.commit()
            elif comp_data_1[12] == "2":
              storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
              storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
              fbcursor.execute(storepro_sql,storepro_val)
              fbilldb.commit()
            elif comp_data_1[12] == "3":
              storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
              storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
              fbcursor.execute(storepro_sql,storepro_val)
              fbilldb.commit()
              
        
          del_file_sql = "DELETE FROM documents WHERE invoice_number=%s"
          del_file_val = (invoice_number_1,)
          fbcursor.execute(del_file_sql,del_file_val)
          fbilldb.commit()
          for f in doc_get_1:
            files = doc_tree_1.item(f)["values"][1]
            file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
            file_val = (invoice_number_1,files)
            fbcursor.execute(file_sql,file_val)
            fbilldb.commit()

          
          inv_sql='UPDATE invoice SET invodate=%s,duedate=%s,status=%s,emailon=%s,printon=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s,extracostname=%s,extracost=%s,template=%s,salesper=%s,discourate=%s,tax1=%s,category=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,cpemail=%s,cpmobileforsms=%s,recurring_period=%s,recurring_period_month=%s,next_invoice=%s,stop_recurring=%s,discount=%s,terms=%s,tax2=%s,quantity=%s,title_text=%s,header_text=%s,footer_text=%s,term_of_payment=%s,ref=%s,comments=%s,privatenotes=%s,recurring_check=%s,paid_n_closed=%s WHERE invoice_number=%s' #adding values into db
          inv_val=(invodate_1,duedate_1,status_1,emailon_1,printon_1,subtotal_1,invoicetot_1,totpaid_1,balance_1,extracostname_1,extracost_1,template_1,salesper_1,discourate_1,tax1_01,category_1,businessname_1,businessaddress_1,shipname_1,shipaddress_1,cpemail_1,cpmobileforsms_1,recurring_period_1,recurring_period_month_1,next_invoice_1,stop_recurring_1,discount_1,terms_1,tax2_01,quantity_1,title_text_1,header_text_1,footer_text_1,term_of_payment_1,ref_1,comments_1,privatenotes_1,recurring_check_1,paid_n_closed,invoice_number_1,)
          fbcursor.execute(inv_sql,inv_val)
          fbilldb.commit()


          select_customer_btn_1["state"] = DISABLED
          add_newline_btn_1['state'] = DISABLED
          del_line_item_btn_1['state'] = DISABLED
          mark_inv_paid_1['state'] = DISABLED
          save_invoice_1["state"] = DISABLED
          inv_combo_e1_1['state'] = DISABLED
          inv_addr_e2_1['state'] = DISABLED
          inv_shipto_e3_1['state'] = DISABLED
          inv_addr_e4_1['state'] = DISABLED
          inv_email_e5_1['state'] = DISABLED
          inv_sms_e6_1['state'] = DISABLED
          inv_number_entry_1['state'] = DISABLED
          inv_duedate_check_1["state"] = DISABLED
          inv_date_entry_1['state'] = DISABLED
          inv_duedate_entry_1['state'] = DISABLED
          inv_terms_combo_1['state'] = DISABLED
          inv_ref_entry_1['state'] = DISABLED
          ex_costn_combo_1['state'] = DISABLED
          dis_rate_entry_1['state'] = DISABLED
          ex_cost_entry_1['state'] = DISABLED
          if comp_data[12] == "1":
            pass
          elif comp_data[12] == "2":
            tax1_entry_1['state'] = DISABLED
          elif comp_data[12] == "3":
            tax1_entry_1['state'] = DISABLED
            tax2_entry_1['state'] = DISABLED
          template_entry_1['state'] = DISABLED
          recur_check_btn_1['state'] = DISABLED
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
          pay_plus_1['state'] = DISABLED
          pay_minus_1['state'] = DISABLED
          title_txt_combo_1['state'] = DISABLED
          pageh_txt_combo_1['state'] = DISABLED
          footer_txt_combo_1['state'] = DISABLED
          term_txt_1['state'] = DISABLED
          comment_txt_1['state'] = DISABLED
          doc_plus_btn_1['state'] = DISABLED
          doc_minus_btn_1['state'] = DISABLED
          btn_linedown_1['state'] = DISABLED
          btn_lineup_1['state'] = DISABLED
          inv_as_paid_1.destroy()
        if inv_combo_e1_1.get() == '':
          messagebox.showwarning("F-Billing Revolution","Customer required, please select customer first.")
        elif len(check_newline) == 0:
          messagebox.showwarning("F-Billing Revolution","This invoice has no line items. \nPlease add line item(s) first.")
        elif pd != 0 and pd[6] == 1:
          global inv_as_paid_1
          inv_as_paid_1 =Toplevel()
          inv_as_paid_1.geometry("350x200+450+200")
          inv_as_paid_1.title("Record Payement")
          inv_as_paid_1.configure(bg="white")
          
          what_label_1 = Label(inv_as_paid_1,text="What would like to do?",bg="white",fg="#1a3365",font=("sans-serif",12)).place(x=50,y=10)
          fully_label_1 = Label(inv_as_paid_1,text="This invoice looks like fully paid.",bg="white").place(x=50,y=40)
          qstn_label_1 = Label(inv_as_paid_1,image=question,borderwidth=0,bg="white").place(x=10,y=10)
          mark_as_paid_btn_1 = Button(inv_as_paid_1,text='🡢 Marked as "Paid" and close invoice',fg="#0077b3",bg="white",border=0,font=("sans-serif",12),command=markas_paid_1)
          mark_as_paid_btn_1.place(x=50,y=80)
          rec_new_btn_1 = Button(inv_as_paid_1,text='🡢 Record new payment',fg="#0077b3",bg="white",border=0,font=("sans-serif",12),command=record_newpay_1)
          rec_new_btn_1.place(x=50,y=120)
          cancel_as_paid_1 = Button(inv_as_paid_1,text="Cancel",bg="white",borderwidth=1,width=8,command=lambda:inv_as_paid_1.destroy())
          cancel_as_paid_1.place(x=270,y=168)
        else:
          mark_inv_1=Toplevel()
          mark_inv_1.geometry("700x480+240+150")
          mark_inv_1.title("Record Payement for Invoice") 

          global discount_rate,total_cost,dis_rate,exc,tax1_rate

          if comp_data[12] == "1":
            price = 0.0
            total_cost = 0.0
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            for i in add_newline_tree_1.get_children():
              price += float(add_newline_tree_1.item(i,'values')[6])
            discount_rate = (price*dis_rate)/100
            total_cost += (price - discount_rate) + exc
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round((price - discount_rate),2)
            sub1_1.config(text=sub_tot)
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4])
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
          elif comp_data[12] == "2":
            price = 0.0
            p = 0.0
            total_cost = 0.0
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            tx1 = float(tax1_entry_1.get())
            for i in add_newline_tree_1.get_children():
              if add_newline_tree_1.item(i,'values')[6] == "No":
                p += float(add_newline_tree_1.item(i,'values')[3])
              else:
                price += float(add_newline_tree_1.item(i,'values')[7])
            discount_rate = ((price + p) * dis_rate)/100
            dis_price = (price * dis_rate)/100
            dis_p = (p * dis_rate)/100
            tax1_rate = ((price - dis_price)*tx1)/100
            tx_calc = (price - dis_price) + tax1_rate
            tx_calc1 = p - dis_p
            total_cost += (tx_calc + tx_calc1) + exc
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round(((price + p) - discount_rate),2)
            sub1_1.config(text=sub_tot)
            tax1_1.config(text=round(tax1_rate,2))
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal) 
          elif comp_data[12] == "3":
            price = 0.0
            p1 = 0.0
            p2 = 0.0
            p3 = 0.0
            total_cost = 0.0
            tx1 = float(tax1_entry_1.get())
            tx2 = float(tax2_entry_1.get())
            exc = float(ex_cost_entry_1.get())
            dis_rate = float(dis_rate_entry_1.get())
            for i in add_newline_tree_1.get_children():
              if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
                p1 += float(add_newline_tree_1.item(i,'values')[3])
              elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
                p2 += float(add_newline_tree_1.item(i,'values')[3])
              elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
                p3 += float(add_newline_tree_1.item(i,'values')[3])
              else:
                price += float(add_newline_tree_1.item(i,'values')[8])
            discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
            dis_p2 = (p2 * dis_rate)/100
            tax1_rate = ((p2 - dis_p2) * tx1)/100
            dis_price = (price * dis_rate)/100
            tax2_rate = ((price - dis_price) * tx1)/100
            tax3_rate = ((price - dis_price) * tx2)/100
            dis_p3= (p3 * dis_rate)/100
            tax4_rate = ((p3 - dis_p3) * tx2)/100
            dis_p4 = (p1 * dis_rate)/100
            tx_calc1 = (p2 - dis_p2) + tax1_rate
            tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
            tx_calc3 = (p3 - dis_p3) + tax4_rate
            tx_calc4 = (p1 - dis_p4)
            total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
            discount_1.config(text= str(dis_rate) + "" +"% Discount")
            discount1_1.config(text=round(discount_rate,2))
            sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
            sub1_1.config(text=sub_tot)
            tax1_1.config(text=round((tax1_rate + tax2_rate),2))
            tax2_1.config(text=round((tax3_rate + tax4_rate),2))
            cost1_1.config(text=round(exc,2))
            invoicetot1_1.config(text=round(total_cost,2))
            tot_paid = 0.0
            for tp in pay_tree_1.get_children():
              tot_paid += float(pay_tree_1.item(tp,'values')[4])
            total1_1.config(text=round(tot_paid,2))
            bal = round((total_cost - tot_paid),2)
            balance1_1.config(text=bal)
              
          def add_newline_pay_1():
            if inv_pby_combo_1.get() == '':
              messagebox.showinfo("F-Billing Revolution 2022",'Please fill out "Paid by" field!')
            else:
              pay_amnt = inv_amnt_entry_1.get()
              pay_date = inv_pdate_entry_1.get_date()
              pay_by = inv_pby_combo_1.get()
              pay_desc = inv_des_entry_1.get()
              pay_inv_number = inv_number_entry_1.get()
              pay_full = checkvar_1.get()
              pay_recp = checkvar1_1.get()
              pay_att_up = checkvar2_1.get()
              pay_sql = "INSERT INTO payments(payment_date,paid_by,description,amount,invoice_number,paid_n_close,payment_reciept,updated_invoice) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
              pay_val = (pay_date,pay_by,pay_desc,pay_amnt,pay_inv_number,pay_full,pay_recp,pay_att_up,)
              fbcursor.execute(pay_sql,pay_val)
              fbilldb.commit()

              pay_get_sql = "SELECT * FROM payments ORDER BY payment_id DESC LIMIT 1"
              fbcursor.execute(pay_get_sql)
              pay_data = fbcursor.fetchone()
              pay_tree_1.insert(parent='',index='end',iid=pay_data[0],text='',values=(pay_data[0],pay_data[1],pay_data[2],pay_data[3],pay_data[4]))

              tot_paid = 0.0
              for tp in pay_tree_1.get_children():
                tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
              total1_1.config(text=round(tot_paid,2))
              bal = round((total_cost - tot_paid),2)
              balance1_1.config(text=bal)
              mark_inv_1.destroy()


              def inv_send_mail_1(file=None):
                try:
                  # sender_mail = your_cemail_entry.get()
                  sender_mail = "infoxfbilling77@gmail.com"
                  # sender_password = your_cpass_entry.get()
                  sender_password = "dinkiurlziohgfok"

                  server = smtplib.SMTP('smtp.gmail.com', 587)
                  print("login successfull")
                  server.starttls()
                  print("login successfull2")
                  server.login(sender_mail,sender_password)
                  print("login successfull3")

                  carbon_info = email_carbon.get()
                  msg = MIMEMultipart()
                  msg['Subject'] = email_subject.get()
                  mail_content = email_ltr_scroll.get("1.0",'end-1c')
                  msg['From'] = email_from.get()
                  msg['To'] = email_to.get()

                  gettingimg = lstfrm.get()
                  lst_data = gettingimg[1:-1].split(',')
                  
                  msg.attach(MIMEText(mail_content, 'plain'))
                  
                  for i in lst_data:
                    if len(i.strip()[1:-1])>1:
                      with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                          # MIME attachment is a binary file for that content type "application/octet-stream" is used
                        part = MIMEBase("application", "octet-stream")
                        part.set_payload(attachment.read())
                      # encode into base64 
                        encoders.encode_base64(part) 
                  
                        part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

                      # attach the instance 'part' to instance 'message' 
                        msg.attach(part)
                    # message_body = email_body.get()

                  server.sendmail(email_from.get(),email_to.get(),msg.as_string())
                  server.sendmail(email_from.get(), carbon_info,msg.as_string())

                  date = dt.datetime.now().date()
                  never1_label_1.config(text=date)
                  print("message sent")
                except:
                  pass



              if checkvar1_1.get() == 1:
                send_precp = Toplevel()
                p2 = PhotoImage(file = "images/fbicon.png")
                send_precp.iconphoto(False, p2)
                send_precp.geometry("1030x490+150+120")
                send_precp.title("Payment reciept E-mail")

                # def my_SMTP():
                #     if True:
                #         em_ser_conbtn.destroy()
                #         mysmtpservercon=LabelFrame(account_Frame,text="SMTP server connection(ask your ISP for your SMTP settings)", height=165, width=380)
                #         mysmtpservercon.place(x=610, y=110)
                #         lbl_hostn=Label(mysmtpservercon, text="Hostname").place(x=5, y=10)
                #         hostnent=Entry(mysmtpservercon, width=30).place(x=80, y=10)
                #         lbl_portn=Label(mysmtpservercon, text="Port").place(x=5, y=35)
                #         portent=Entry(mysmtpservercon, width=30).place(x=80, y=35)
                #         lbl_usn=Label(mysmtpservercon, text="Username").place(x=5, y=60)
                #         unament=Entry(mysmtpservercon, width=30).place(x=80, y=60)
                #         lbl_pasn=Label(mysmtpservercon, text="Password").place(x=5, y=85)
                #         pwdent=Entry(mysmtpservercon, width=30).place(x=80, y=85)
                #         ssl_chkvar=IntVar()
                #         ssl_chkbtn=Checkbutton(mysmtpservercon, variable=ssl_chkvar, text="This server requires a secure connection(SSL)", onvalue=1, offvalue=0)
                #         ssl_chkbtn.place(x=50, y=110)
                #         em_ser_conbtn1=Button(account_Frame, text="Test E-mail Server Connection").place(x=610, y=285)
                #     else:
                #         pass


                def inv_empsfile_image_1(event):
                  global yawn
                  for i in  attach_list.curselection():
                    print("hloo", attach_list.get(i))
                    yawn= attach_list.get(i)        
                    edit_window_img = Toplevel()
                    edit_window_img.title("View Image")
                    edit_window_img.geometry("700x500")
                    image = Image.open("images/"+yawn)
                    resize_image = image.resize((700, 500))
                    image = ImageTk.PhotoImage(resize_image)
                    psimage = Label(edit_window_img,image=image)
                    psimage.photo = image
                    psimage.pack()
                
                def inv_UploadAction_1(event=None):
                  global filenamez

                  filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
                  shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
                  attach_list.insert(0, filenamez.split('/')[-1])


                def inv_deletefile_1():
                  inv_remove=attach_list.curselection()
                  yawn=attach_list.get(inv_remove) 
                  print(yawn)       
                  attach_list.delete(ACTIVE)

                style = ttk.Style()
                style.theme_use('default')
                style.configure('TNotebook.Tab', background="#999999", padding=5)
                email_Notebook = ttk.Notebook(send_precp)
                email_Frame = Frame(email_Notebook, height=500, width=1080)
                account_Frame = Frame(email_Notebook, height=550, width=1080)
                email_Notebook.add(email_Frame, text="E-mail")
                email_Notebook.add(account_Frame, text="Account")
                email_Notebook.place(x=0, y=0)
                messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
                messagelbframe.place(x=5, y=5)
                global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
                email_to = StringVar()
                email_subject = StringVar()
                email_from = StringVar()
                email_passw = StringVar()
                email_carbon = StringVar()
                email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
                email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
                email_to_addr_entry.place(x=120, y=5)
                email_addr = inv_email_e5_1.get()
                email_to_addr_entry.delete(0,END)
                email_to_addr_entry.insert(0,email_addr)
                send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail_1)
                send_email_btn.place(x=600, y=10)
                carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
                carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
                carbon_entry.place(x=120, y=32)
                subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
                subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
                subject_entry.place(x=120, y=59)
                subject = inv_number_entry_1.get()
                subject_entry.delete(0,END)
                subject_entry.insert(0,"Payment reciept for Invoice" + " " + "(" + subject + ")")

                style = ttk.Style()
                style.theme_use('default')
                style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
                mess_Notebook = ttk.Notebook(messagelbframe)
                emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
                htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
                mess_Notebook.add(emailmessage_Frame, text="E-mail message")
                mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
                mess_Notebook.place(x=5, y=90)

                email_ltr_scroll=scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True)
                email_ltr_scroll.place(x=0, y=28)
                pay_name = inv_combo_e1_1.get()
                email_ltr_scroll.delete("1.0",END)
                email_ltr_scroll.insert("1.0","\n\n  Dear" + " " + pay_name + "," + "\n\n  This message is to inform you that your payment of" + " " + str(pay_amnt) + " " + "for Invoice#" + " " + pay_inv_number + " " + "\n  has been received \n\n  Payment ID: RCPT" + "" + str(pay_data[0]) + "" + "\n  Invoice ID: " + "" + pay_inv_number + "" + "\n  Payment Date: " + "" + str(pay_date) + "" + "\n  Amount: " + "" + str(pay_amnt) + "" + "\n  Paid by: " + "" + pay_by + "" + "\n  Description: " + "" + pay_desc + "" + "\n\n  Thank you for your business.\n  Your Company Name")

                sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
                sel_all_btn.place(x=0, y=1)  
                cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
                cut_btn.place(x=36, y=1)
                copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
                copy_btn.place(x=73, y=1)
                paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
                paste_btn.place(x=105, y=1)
                undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
                undo_btn.place(x=140, y=1)
                redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
                redo_btn.place(x=175, y=1)

                def bold_text():
                  bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                  bold_font.configure(weight="bold")

                  email_ltr_scroll.tag_configure("bold", font=bold_font)

                  current_tags = email_ltr_scroll.tag_names("sel.first")

                  if "bold" in current_tags:
                    email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
                  else:
                    email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
                bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
                bold_btn.place(x=210, y=1)

                def italic_text():
                  italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
                  italic_font.configure(slant="italic")

                  email_ltr_scroll.tag_configure("italic", font=italic_font)

                  current_tags = email_ltr_scroll.tag_names("sel.first")

                  if "italic" in current_tags:
                    email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
                  else:
                    email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
                italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
                italic_btn.place(x=245, y=1)

                def underline_text():
                  try:
                    if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
                        email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
                    else:
                        email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
                        email_ltr_scroll.tag_configure('underline_selection', underline=True)
                  except TclError:
                      pass
                underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
                underline_btn.place(x=280, y=1)

                def align_left():
                  data = email_ltr_scroll.get(0.0,END)
                  email_ltr_scroll.tag_config('left',justify=LEFT)
                  email_ltr_scroll.delete(0.0,END)
                  email_ltr_scroll.insert(INSERT,data,'left')
                align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
                align_lbtn.place(x=315, y=1)

                def align_right():
                  data = email_ltr_scroll.get(0.0,END)
                  email_ltr_scroll.tag_config('right',justify=RIGHT)
                  email_ltr_scroll.delete(0.0,END)
                  email_ltr_scroll.insert(INSERT,data,'right')
                align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
                align_rbtn.place(x=350, y=1)

                def align_center():
                  data = email_ltr_scroll.get(0.0,END)
                  email_ltr_scroll.tag_config('center',justify=CENTER)
                  email_ltr_scroll.delete(0.0,END)
                  email_ltr_scroll.insert(INSERT,data,'center')
                align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
                align_cbtn.place(x=385, y=1)
                hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
                hyper_btn.place(x=420, y=1)
                remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
                remove_btn.place(x=455, y=1)

                def color_text():
                  color = colorchooser.askcolor()[1]
                  if color:
                    color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

                    email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

                    current_tags = email_ltr_scroll.tag_names("sel.first")

                    if "colored" in current_tags:
                      email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
                    else:
                      email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
                color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
                color_btn.place(x=490, y=1)

                fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=3)
                fontsize_combo.place(x=600, y=5)
                fontsize_combo['values'] = ('1','2','3','4','5','6','7')
                fontsize_combo.current(0)
                btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
                btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
                btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
                btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
                email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
                email_html_scroll.place(x=0, y=28)
                attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
                attachlbframe.place(x=740, y=5)
                lstfrm = StringVar()
                attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
                attach_list.place(x=5, y=3)
                attach_list.bind('<Double-Button-1>',inv_empsfile_image_1)
                lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
                btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction_1)
                btn17.place(x=60, y=260)
                btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile_1)
                btn18.place(x=60, y=295)
                lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
                lbl_tt_info.place(x=740, y=370)

                ready_frame=Frame(send_precp, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
                
                sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
                sendatalbframe.place(x=5, y=5)
                your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
                your_cemail_entry = Entry(sendatalbframe, width=40)
                your_cemail_entry.place(x=195, y=30)

                your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
                your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
                your_cpass_entry.place(x=195, y=60)
              else:
                pass
            
          def cancel_newline_pay_1():
            mark_inv_1.destroy()


          style = ttk.Style()
          style.theme_use('default')
          style.configure('TNotebook.Tab', background="#999999", padding=5)
          mark_Notebook = ttk.Notebook(mark_inv_1)
          Mark_Invoice = Frame(mark_Notebook, height=470, width=750)
          mark_Notebook.add(Mark_Invoice, text="Mark Invoice")
          mark_Notebook.place(x=0, y=0)

          inv_bal_label_1=Label(Mark_Invoice, text="Invoice Balance").place(x=10, y=10)
          inv_bal_entry_1=Label(Mark_Invoice, width=25,fg="red",bg="white",text=bal,font=("Arial",10,"bold"))
          inv_bal_entry_1.place(x=130, y=10)
          labelframe5 = LabelFrame(Mark_Invoice,text="Payement Record Details",bg="#f5f3f2")
          labelframe5.place(x=10,y=60,width=670,height=250)
          inv_amnt_entry_1 = Entry(labelframe5,width=28)
          inv_amnt_entry_1.place(x=30,y=45)
          inv_amnt_entry_1.delete(0,END)
          inv_amnt_entry_1.insert(0,bal)
          inv_pdate_label_1 = Label(labelframe5, text="Payement Date:",bg="#f5f3f2").place(x=250,y=20)
          inv_pdate_entry_1 = DateEntry(labelframe5,width=28)
          inv_pdate_entry_1.place(x=220,y=45)
          inv_pby_label_1 = Label(labelframe5, text="Paid By:",bg="#f5f3f2").place(x=450,y=20)
          term_sql_1 = "SELECT terms_of_payment FROM terms_of_payment"
          fbcursor.execute(term_sql_1,)
          term_data_1 = fbcursor.fetchall()
          tdata_1 = []
          for i in term_data_1:
            tdata_1.append(i[0])
          inv_pby_combo_1 = ttk.Combobox(labelframe5, value=tdata_1)
          inv_pby_combo_1.place(x=450,y=45)
          inv_pby_combo_1.bind("<<ComboboxSelected>>")
          inv_des_label_1=Label(labelframe5, text="Description").place(x=30, y=80)
          inv_des_entry_1=Entry(labelframe5, width=100)
          inv_des_entry_1.place(x=30, y=120)
          checkvar_1=IntVar()
          inv_pfull_check_1 = Checkbutton(labelframe5,text="Paid in full and close invoice",variable=checkvar_1,onvalue=1,offvalue=0,bg="#f5f3f2")
          inv_pfull_check_1.place(x=30 ,y=150)
          inv_precp_label_1 = Label(labelframe5,text="Payement Reciepts",bg="#f5f3f2").place(x=300,y=145)
          checkvar1_1=IntVar()
          inv_send_precp_1 = Checkbutton(labelframe5,text="Send Payement Reciept",variable=checkvar1_1,onvalue=1,offvalue=0,bg="#f5f3f2")
          inv_send_precp_1.place(x=320 ,y=170)
          checkvar2_1=IntVar()
          inv_att_upinv_1 = Checkbutton(labelframe5,text="Attach updated invoice",variable=checkvar2_1,onvalue=1,offvalue=0,bg="#f5f3f2")
          inv_att_upinv_1.place(x=320 ,y=200)

          inv_pok_btn_1 =Button(Mark_Invoice,compound = LEFT,image=tick , text="Save payement", width=100,command=add_newline_pay_1)
          inv_pok_btn_1.place(x=10, y=350)
          inv_pcan_btn_1 =Button(Mark_Invoice,compound = LEFT,image=cancel, text="Cancel", width=100,command=cancel_newline_pay_1)
          inv_pcan_btn_1.place(x=500, y=350)

      ################## delete newline payment ###################
      def delete_newline_pay_1():
        selected_pay_item = pay_tree_1.selection()[0]
        pay_tree_1.delete(selected_pay_item)
        del_pay_sql = "DELETE FROM payments WHERE payment_id=%s"
        del_pay_val = (selected_pay_item,)
        fbcursor.execute(del_pay_sql,del_pay_val)
        fbilldb.commit()
        tot_paid = 0.0
        for tp in pay_tree_1.get_children():
          tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
        total1_1.config(text=round(tot_paid,2))
        bal = round((total_cost - tot_paid),2)
        balance1_1.config(text=bal)

        
      #voidinvoice
      def voidinvoice_1():
        void_msg_1 = messagebox.askyesno("F-Billing Revolution","Are you sure to avoid this invoice?\nAll products will be placed back into stock and all payemnts will be voided.")
        if void_msg_1 == YES:
          draft_label_1.config(text="Void")
          if draft_label_1["text"] == "Void":
            if edit_inv_data[48] == 1:
              status_1 = draft_label_1.cget("text")
              subtotal_1 = 0
              invoicetot_1 = 0
              totpaid_1 = 0
              balance_1 = 0
              inv_sql = "UPDATE invoice SET status=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s WHERE invoice_number=%s"
              inv_val = (status_1,subtotal_1,invoicetot_1,totpaid_1,balance_1,edit_inv_data[1])
              fbcursor.execute(inv_sql,inv_val)
              fbilldb.commit()
            else:
              invoice_number_1 = inv_number_entry_1.get()
              invodate_1 = inv_date_entry_1.get_date()
              if checkvarStatus5_1.get() == 0:
                duedate_1 = NULL
              else:
                duedate_1 = inv_duedate_entry_1.get_date()
              term_of_payment_1 = inv_terms_combo_1.get()
              ref_1 = inv_ref_entry_1.get()
              status_1 = draft_label_1.cget("text")
              emailon_1 = never1_label_1.cget("text")
              printon_1 = never2_label_1.cget("text")
              # smson = 
              subtotal_1 = 0
              invoicetot_1 = 0
              totpaid_1 = 0
              balance_1 = 0
              extracostname_1 = ex_costn_combo_1.get()
              extracost_1 = cost1_1.cget("text")
              template_1 = template_entry_1.get()
              salesper_1 = sales_per_entry_1.get()
              discourate_1 = dis_rate_entry_1.get()
              discount_1 = discount1_1.cget("text")
              tax1_01 = tax1_1.cget("text")
              category_1 = category_entry_1.get()
              businessname_1 = inv_combo_e1_1.get()
              businessaddress_1 = inv_addr_e2_1.get("1.0",END)
              shipname_1 = inv_shipto_e3_1.get()
              shipaddress_1 = inv_addr_e4_1.get("1.0",END)
              cpemail_1 = inv_email_e5_1.get()
              cpmobileforsms_1 = inv_sms_e6_1.get()
              if checkrecStatus_1.get() == 0 :
                next_invoice_1 = NULL
                stop_recurring_1 = NULL
                recurring_period_1 = NULL
                recurring_period_month_1 = NULL
                recurring_check_1 = checkrecStatus_1.get()
              else:
                next_invoice_1 = recur_nxt_inv_date_1.get_date()
                stop_recurring_1 = recur_stop_date_1.get_date()
                recurring_period_1 = recur_period_entry_1.get()
                recurring_period_month_1 = recur_month_combo_1.get()
                recurring_check_1 = checkrecStatus_1.get()
              title_text_1 = title_txt_combo_1.get()
              header_text_1 = pageh_txt_combo_1.get()
              footer_text_1 = footer_txt_combo_1.get()
              tax2_01 = tax2_1.cget("text")
              comments_1 = comment_txt_1.get("1.0",END)
              privatenotes_1 = private_note_txt_1.get("1.0",END)
              terms_1 = term_txt_1.get("1.0",END)
              doc_get_1 = doc_tree_1.get_children()
              for qn in add_newline_tree_1.get_children():
                quantity_1 = add_newline_tree_1.item(qn)["values"][4]

              comp_sql = "SELECT * FROM company"
              fbcursor.execute(comp_sql,)
              comp_data_1 = fbcursor.fetchone()

              del_storp_sql = "DELETE FROM storingproduct WHERE invoice_number=%s"
              del_storp_val = (invoice_number_1,)
              fbcursor.execute(del_storp_sql,del_storp_val)
              fbilldb.commit()
              for record in add_newline_tree_1.get_children():
                storingproduct = add_newline_tree_1.item(record)["values"]
                if not comp_data_1:
                  storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                  storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                  fbcursor.execute(storepro_sql,storepro_val)
                  fbilldb.commit()
                elif comp_data_1[12] == "1":
                  storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s)"
                  storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6])
                  fbcursor.execute(storepro_sql,storepro_val)
                  fbilldb.commit()
                elif comp_data_1[12] == "2":
                  storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                  storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7])
                  fbcursor.execute(storepro_sql,storepro_val)
                  fbilldb.commit()
                elif comp_data_1[12] == "3":
                  storepro_sql = "INSERT INTO storingproduct(invoice_number,sku,name,description,unitprice,quantity,peices,tax1,tax2,price) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
                  storepro_val = (invoice_number_1,storingproduct[0],storingproduct[1],storingproduct[2],storingproduct[3],storingproduct[4],storingproduct[5],storingproduct[6],storingproduct[7],storingproduct[8])
                  fbcursor.execute(storepro_sql,storepro_val)
                  fbilldb.commit()
                  
            
              del_file_sql = "DELETE FROM documents WHERE invoice_number=%s"
              del_file_val = (invoice_number_1,)
              fbcursor.execute(del_file_sql,del_file_val)
              fbilldb.commit()
              for f in doc_get_1:
                files = doc_tree_1.item(f)["values"][1]
                file_sql = "INSERT INTO documents(invoice_number,documents) VALUES(%s,%s)"
                file_val = (invoice_number_1,files)
                fbcursor.execute(file_sql,file_val)
                fbilldb.commit()

              inv_sql='UPDATE invoice SET invodate=%s,duedate=%s,status=%s,emailon=%s,printon=%s,subtotal=%s,invoicetot=%s,totpaid=%s,balance=%s,extracostname=%s,extracost=%s,template=%s,salesper=%s,discourate=%s,tax1=%s,category=%s,businessname=%s,businessaddress=%s,shipname=%s,shipaddress=%s,cpemail=%s,cpmobileforsms=%s,recurring_period=%s,recurring_period_month=%s,next_invoice=%s,stop_recurring=%s,discount=%s,terms=%s,tax2=%s,quantity=%s,title_text=%s,header_text=%s,footer_text=%s,term_of_payment=%s,ref=%s,comments=%s,privatenotes=%s,recurring_check=%s WHERE invoice_number=%s' #adding values into db
              inv_val=(invodate_1,duedate_1,status_1,emailon_1,printon_1,subtotal_1,invoicetot_1,totpaid_1,balance_1,extracostname_1,extracost_1,template_1,salesper_1,discourate_1,tax1_01,category_1,businessname_1,businessaddress_1,shipname_1,shipaddress_1,cpemail_1,cpmobileforsms_1,recurring_period_1,recurring_period_month_1,next_invoice_1,stop_recurring_1,discount_1,terms_1,tax2_01,quantity_1,title_text_1,header_text_1,footer_text_1,term_of_payment_1,ref_1,comments_1,privatenotes_1,recurring_check_1,invoice_number_1,)
              fbcursor.execute(inv_sql,inv_val)
              fbilldb.commit()
          else:
            pass


          select_customer_btn_1['state'] = DISABLED
          add_newline_btn_1['state'] = DISABLED
          del_line_item_btn_1['state'] = DISABLED
          mark_inv_paid_1['state'] = DISABLED
          void_invoice_1['state'] = DISABLED
          save_invoice_1['state'] = DISABLED
          inv_combo_e1_1['state'] = DISABLED
          inv_addr_e2_1['state'] = DISABLED
          inv_shipto_e3_1['state'] = DISABLED
          inv_addr_e4_1['state'] = DISABLED
          inv_email_e5_1['state'] = DISABLED
          inv_sms_e6_1['state'] = DISABLED
          inv_number_entry_1['state'] = DISABLED
          inv_date_entry_1['state'] = DISABLED
          inv_duedate_check_1['state'] = DISABLED
          inv_duedate_entry_1['state'] = DISABLED
          inv_terms_combo_1['state'] = DISABLED
          inv_ref_entry_1['state'] = DISABLED
          ex_costn_combo_1['state'] = DISABLED
          dis_rate_entry_1['state'] = DISABLED
          ex_cost_entry_1['state'] = DISABLED
          if comp_data[12] == "1":
            pass
          elif comp_data[12] == "2":
            tax1_entry_1['state'] = DISABLED
          elif comp_data[12] == "3":
            tax1_entry_1['state'] = DISABLED
            tax2_entry_1['state'] = DISABLED
          template_entry_1['state'] = DISABLED
          recur_check_btn_1['state'] = DISABLED
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
          pay_plus_1['state'] = DISABLED
          pay_minus_1['state'] = DISABLED
          title_txt_combo_1['state'] = DISABLED
          pageh_txt_combo_1['state'] = DISABLED
          footer_txt_combo_1['state'] = DISABLED
          term_txt_1['state'] = DISABLED
          comment_txt_1['state'] = DISABLED
          doc_plus_btn_1['state'] = DISABLED
          doc_minus_btn_1['state'] = DISABLED
          btn_linedown_1['state'] = DISABLED
          btn_lineup_1['state'] = DISABLED

          def inv_reactivate_1():
            select_customer_btn_1['state'] = NORMAL
            add_newline_btn_1['state'] = NORMAL
            del_line_item_btn_1['state'] = NORMAL
            mark_inv_paid_1['state'] = NORMAL
            void_invoice_1['state'] = NORMAL
            save_invoice_1['state'] = NORMAL
            inv_combo_e1_1['state'] = NORMAL
            inv_addr_e2_1['state'] = NORMAL
            inv_shipto_e3_1['state'] = NORMAL
            inv_addr_e4_1['state'] = NORMAL
            inv_email_e5_1['state'] = NORMAL
            inv_sms_e6_1['state'] = NORMAL
            inv_number_entry_1['state'] = NORMAL
            inv_date_entry_1['state'] = NORMAL
            inv_duedate_check_1['state'] = NORMAL
            inv_duedate_entry_1['state'] = NORMAL
            inv_terms_combo_1['state'] = NORMAL
            inv_ref_entry_1['state'] = NORMAL
            ex_costn_combo_1['state'] = NORMAL
            dis_rate_entry_1['state'] = NORMAL
            ex_cost_entry_1['state'] = NORMAL
            if comp_data[12] == "1":
              pass
            elif comp_data[12] == "2":
              tax1_entry_1['state'] = NORMAL
            elif comp_data[12] == "3":
              tax1_entry_1['state'] = NORMAL
              tax2_entry_1['state'] = NORMAL
            template_entry_1['state'] = NORMAL
            recur_check_btn_1['state'] = NORMAL
            recur_period_entry_1['state'] = NORMAL
            recur_month_combo_1['state'] = NORMAL
            recur_nxt_inv_date_1['state'] = NORMAL
            recur_stop_check_1['state'] = NORMAL
            recur_stop_date_1['state'] = NORMAL
            recur_recalc_1['state'] = NORMAL
            pay_plus_1['state'] = NORMAL
            pay_minus_1['state'] = NORMAL
            title_txt_combo_1['state'] = NORMAL
            pageh_txt_combo_1['state'] = NORMAL
            footer_txt_combo_1['state'] = NORMAL
            term_txt_1['state'] = NORMAL
            comment_txt_1['state'] = NORMAL
            doc_plus_btn_1['state'] = NORMAL
            doc_minus_btn_1['state'] = NORMAL
            btn_linedown_1['state'] = NORMAL
            btn_lineup_1['state'] = NORMAL
            draft_label_1.config(text="Draft")
            if draft_label_1['text'] == "Draft":
              reactivate_invoice_1.destroy()
              status_sql = "UPDATE invoice SET status=%s WHERE invoice_number=%s"
              status_val = ("Draft",invoice_number_1)
              fbcursor.execute(status_sql,status_val)
              fbilldb.commit()
            else:
              pass

          reactivate_invoice_1 = Button(inv_first_frame2,compound="top", text="Reactivate",relief=RAISED, image=unlock,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_reactivate_1)
          reactivate_invoice_1.pack(side="left", pady=3, ipadx=4)
        else:
          pass
      
      #delete line item  
      def delete_line_item_1():
        selected_line_item_1 = add_newline_tree_1.selection()[0]
        add_newline_tree_1.delete(selected_line_item_1)
        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=price)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal) 
          totalprice_view_1.config(text=round((price + p),2))
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=round((price + p1 + p2 + p3),2))


      ############# Email Invoice ######################

      def inv_send_mail_1(file=None):
        try:
          # sender_mail = your_cemail_entry.get()
          sender_mail = "infoxfbilling77@gmail.com"
          # sender_password = your_cpass_entry.get()
          sender_password = "dinkiurlziohgfok"

          server = smtplib.SMTP('smtp.gmail.com', 587)
          print("login successfull")
          server.starttls()
          print("login successfull2")
          server.login(sender_mail,sender_password)
          print("login successfull3")

          carbon_info = email_carbon.get()
          msg = MIMEMultipart()
          msg['Subject'] = email_subject.get()
          mail_content = email_ltr_scroll.get("1.0",'end-1c')
          msg['From'] = email_from.get()
          msg['To'] = email_to.get()

          gettingimg = lstfrm.get()
          lst_data = gettingimg[1:-1].split(',')
          
          msg.attach(MIMEText(mail_content, 'plain'))
          
          for i in lst_data:
            if len(i.strip()[1:-1])>1:
              if (i.strip()[1:-1]).lower().endswith(('.png','.jpg','.jpeg')):
                with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                    # MIME attachment is a binary file for that content type "application/octet-stream" is used
                  part = MIMEBase("application", "octet-stream")
                  part.set_payload(attachment.read())
                # encode into base64 
                  encoders.encode_base64(part) 
            
                  part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

                # attach the instance 'part' to instance 'message' 
                  msg.attach(part)
              # message_body = email_body.get()
              else:
                with open('Invoice Documents/'+ inv_number_entry_1.get().split('/')[0]+".pdf", "rb") as attachment:
                  pdf = MIMEBase("application", "octet-stream")
                  pdf.set_payload(attachment.read())
                  encoders.encode_base64(pdf) 
                  pdf.add_header('Content-Disposition', "attachment; filename= %s" % 'Invoice Documents/'+ inv_number_entry_1.get().split('/')[0]+".pdf") 
                  msg.attach(pdf)

          server.sendmail(email_from.get(),email_to.get(),msg.as_string())
          server.sendmail(email_from.get(), carbon_info,msg.as_string())

          date = dt.datetime.now().date()
          never1_label_1.config(text=date)
          print("message sent")
        except:
          pass


      #email
            
      def email_invoice_1():
        from reportlab.pdfgen import canvas
        invnumber = inv_number_entry_1.get().split('/')[0]
        pdf = canvas.Canvas("Invoice Documents/"+invnumber+".pdf", pagesize=letter)

        type_temp = template_entry_1.get()
        if type_temp == 'Professional 1 (logo on left side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo_1.get())
          pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
          pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

          pdf.drawString(30,635,"Invoice#")
          pdf.drawString(30,620,"Invoice date")
          pdf.drawString(30,605,"Due date")
          pdf.drawString(30,590,"Terms")
          pdf.drawString(30,575,"Invoice ref#")

          pdf.drawString(140,635,inv_number_entry_1.get())
          pdf.drawString(140,620,str(inv_date_entry_1.get_date()))
          pdf.drawString(140,605,str(inv_duedate_entry_1.get_date()))
          pdf.drawString(140,590,inv_terms_combo_1.get())
          pdf.drawString(140,575,inv_ref_entry_1.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1_1.get())
          invto_addr = inv_addr_e2_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,40))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3_1.get())
          shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,40))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass


          pdf.setFont('Helvetica-Bold',12)
          pdf.drawRightString(580,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawAlignedString(582,730,htg[0])
            if vg>1:
              pdf.drawAlignedString(582,715,htg[1])
              if vg>2:
                pdf.drawAlignedString(582,700,htg[2])
                if vg>3:
                  pdf.drawAlignedString(582,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawAlignedString(582,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawAlignedString(582,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawAlignedString(582,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(130,470,130,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(400,470,400,450)
          pdf.line(490,470,490,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(60,455,"ID/SKU")
          pdf.drawString(175,455,"Product/Service")
          pdf.drawString(332,455,"Quantity")
          pdf.drawString(420,455,"Unit Price")
          pdf.drawString(523,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree_1.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2        

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
              
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')

                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')


                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
            
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
        elif type_temp == 'Professional 2 (logo on right side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo_1.get())
          pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
          pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

          pdf.drawString(340,635,"Invoice#")
          pdf.drawString(340,620,"Invoice date")
          pdf.drawString(340,605,"Due date")
          pdf.drawString(340,590,"Terms")
          pdf.drawString(340,575,"Invoice ref#")

          pdf.drawString(450,635,inv_number_entry_1.get())
          pdf.drawString(450,620,str(inv_date_entry_1.get_date()))
          pdf.drawString(450,605,str(inv_duedate_entry_1.get_date()))
          pdf.drawString(450,590,inv_terms_combo_1.get())
          pdf.drawString(450,575,inv_ref_entry_1.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1_1.get())
          invto_addr = inv_addr_e2_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3_1.get())
          shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(30,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(30,730,htg[0])
            if vg>1:
              pdf.drawString(30,715,htg[1])
              if vg>2:
                pdf.drawString(30,700,htg[2])
                if vg>3:
                  pdf.drawString(30,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(30,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawString(30,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawString(30,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(130,470,130,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(400,470,400,450)
          pdf.line(490,470,490,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(60,455,"ID/SKU")
          pdf.drawString(175,455,"Product/Service")
          pdf.drawString(332,455,"Quantity")
          pdf.drawString(420,455,"Unit Price")
          pdf.drawString(523,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree_1.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[0])
              pdf.drawString(132,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(355,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(130,v1,130,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2        

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
              
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')

                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')


                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
            
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
        elif type_temp == 'Simplified 1 (logo on left side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo_1.get())
          pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
          pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

          pdf.drawString(30,635,"Invoice#")
          pdf.drawString(30,620,"Invoice date")
          pdf.drawString(30,605,"Due date")
          pdf.drawString(30,590,"Terms")
          pdf.drawString(30,575,"Invoice ref#")

          pdf.drawString(140,635,inv_number_entry_1.get())
          pdf.drawString(140,620,str(inv_date_entry_1.get_date()))
          pdf.drawString(140,605,str(inv_duedate_entry_1.get_date()))
          pdf.drawString(140,590,inv_terms_combo_1.get())
          pdf.drawString(140,575,inv_ref_entry_1.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1_1.get())
          invto_addr = inv_addr_e2_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3_1.get())
          shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass


          pdf.setFont('Helvetica-Bold',12)
          pdf.drawRightString(580,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawAlignedString(582,730,htg[0])
            if vg>1:
              pdf.drawAlignedString(582,715,htg[1])
              if vg>2:
                pdf.drawAlignedString(582,700,htg[2])
                if vg>3:
                  pdf.drawAlignedString(582,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawAlignedString(582,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawAlignedString(582,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawAlignedString(582,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(450,470,450,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(130,455,"Product/Service")
          pdf.drawString(357,455,"Quantity")
          pdf.drawString(505,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree_1.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
              
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')

                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')


                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
            
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
        elif type_temp == 'Simplified 2 (logo on right side)':
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo_1.get())
          pdf.drawCentredString(302,475,pageh_txt_combo_1.get())
          pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

          pdf.drawString(340,635,"Invoice#")
          pdf.drawString(340,620,"Invoice date")
          pdf.drawString(340,605,"Due date")
          pdf.drawString(340,590,"Terms")
          pdf.drawString(340,575,"Invoice ref#")

          pdf.drawString(450,635,inv_number_entry_1.get())
          pdf.drawString(450,620,str(inv_date_entry_1.get_date()))
          pdf.drawString(450,605,str(inv_duedate_entry_1.get_date()))
          pdf.drawString(450,590,inv_terms_combo_1.get())
          pdf.drawString(450,575,inv_ref_entry_1.get())

          pdf.drawString(60,550,"Invoice to")
          pdf.line(60,548,112,548)
          pdf.drawString(60,535,inv_combo_e1_1.get())
          invto_addr = inv_addr_e2_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(60,520,a[0])
            if addr > 1:
              pdf.drawString(60,505,a[1])
              if addr > 2:
                pdf.drawString(60,490,a[2])
                if addr > 3:
                  pdf.drawString(60,475,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(300,550,"Ship to")
          pdf.line(300,548,338,548)
          pdf.drawString(300,535,inv_shipto_e3_1.get())
          shipto_addr = inv_addr_e4_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(shipto_addr,30))
          a1  = wraped_text.split('\n')
              
          addr1 = len(a1)
          if addr1 > 0:
            pdf.drawString(300,520,a1[0])
            if addr1 > 1:
              pdf.drawString(300,505,a1[1])
              if addr1 > 2:
                pdf.drawString(300,490,a1[2])
                if addr1 > 3:
                  pdf.drawString(300,475,a1[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(30,745, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(30,730,htg[0])
            if vg>1:
              pdf.drawString(30,715,htg[1])
              if vg>2:
                pdf.drawString(30,700,htg[2])
                if vg>3:
                  pdf.drawString(30,685,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(30,660, comp_data[4])
          pdf.setFont('Helvetica-Bold',16)
          pdf.drawString(30,620, "Invoice")

          pdf.setFont('Helvetica',12)
          pdf.drawString(30,580,"TAX EXEMPTED")


          pdf.setLineWidth(.3)
          pdf.line(30,470,30,450)
          pdf.line(580,470,580,450)
          pdf.line(310,470,310,450) #vertical lines
          pdf.line(450,470,450,450)
          #------------------------#
          pdf.line(30,450,580,450)
          pdf.line(30,470,580,470)


          pdf.drawString(130,455,"Product/Service")
          pdf.drawString(357,455,"Quantity")
          pdf.drawString(505,455,"Price")

          y1 = 430 
          y2 = 430
          v1 = 450
          v2 = 430
          for i in add_newline_tree_1.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(380,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(450,v1,450,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
              
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])
                
                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              pdf.line(465,calc_y1-100,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                print(comp_data[6])
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              pdf.line(465,calc_y1-120,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')

                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              pdf.line(465,calc_y1-140,465,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')


                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":            
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6]) 

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
            
          
          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage()
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')
                
            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
        elif type_temp == 'Business Classic':
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,762,580,762)
          pdf.setFont('Helvetica',12)
          pdf.drawCentredString(302,770,title_txt_combo_1.get())
          pdf.drawCentredString(302,585,pageh_txt_combo_1.get())
          pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

          pdf.setFont('Helvetica-Bold',12)
          pdf.drawString(240,735, comp_data[1])
          pdf.setFont('Helvetica',12)
          text=comp_data[2]
          wraped_text="\n".join(wrap(text,30))
          htg=wraped_text.split('\n')
              
          vg=len(htg)
          if vg>0:
            pdf.drawString(240,720,htg[0])
            if vg>1:
              pdf.drawString(240,705,htg[1])
              if vg>2:
                pdf.drawString(240,690,htg[2])
                if vg>3:
                  pdf.drawString(240,675,htg[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.drawString(240,650, comp_data[4])

          pdf.drawString(390,665,"Invoice#")
          pdf.drawString(390,650,"Invoice date")
          pdf.drawString(390,635,"Due date")
          pdf.drawString(390,620,"Terms")
          pdf.drawString(390,605,"Invoice ref#")

          pdf.drawString(480,665,inv_number_entry_1.get())
          pdf.drawString(480,650,str(inv_date_entry_1.get_date()))
          pdf.drawString(480,635,str(inv_duedate_entry_1.get_date()))
          pdf.drawString(480,620,inv_terms_combo_1.get())
          pdf.drawString(480,605,inv_ref_entry_1.get())

          pdf.drawString(390,735,inv_combo_e1_1.get())
          invto_addr = inv_addr_e2_1.get("1.0","end-1c")
          wraped_text = "\n".join(wrap(invto_addr,30))
          a  = wraped_text.split('\n')
              
          addr = len(a)
          if addr > 0:
            pdf.drawString(390,720,a[0])
            if addr > 1:
              pdf.drawString(390,705,a[1])
              if addr > 2:
                pdf.drawString(390,590,a[2])
                if addr > 3:
                  pdf.drawString(390,575,a[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass

          pdf.setStrokeColorRGB(0,0,0)
          pdf.setLineWidth(.3)
          pdf.line(30,580,30,560)
          pdf.line(580,580,580,560)
          pdf.line(310,580,310,560) #vertical lines
          pdf.line(400,580,400,560)
          pdf.line(490,580,490,560)
          #------------------------#
          pdf.line(30,560,580,560)
          pdf.line(30,580,580,580)


          pdf.drawString(130,565,"Product/Service")
          pdf.drawString(332,565,"Quantity")
          pdf.drawString(420,565,"Unit Price")
          pdf.drawString(523,565,"Price")

          y1 = 540 
          y2 = 540
          v1 = 560
          v2 = 540
          for i in add_newline_tree_1.get_children():
            if y1 <= 40:
              pdf.showPage()
              y1 = 730
              y2 = 730
              v1 = 750
              v2 = 730
              pdf.line(30,y1,580,y2)
              pdf.line(30,y1+20,580,y2+20)
            else:
              pass
            pdf.line(30,y1,580,y2)
            if comp_data[12] == "1":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[6])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "2":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[7])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
            elif comp_data[12] == "3":
              pdf.drawString(32,y1+5,add_newline_tree_1.item(i,'value')[1])
              pdf.drawCentredString(357,y1+5,add_newline_tree_1.item(i,'value')[4])
              pdf.drawRightString(488,y1+5,add_newline_tree_1.item(i,'value')[3])
              pdf.drawRightString(578,y1+5,add_newline_tree_1.item(i,'value')[8])
              y1 -= 20
              y2 -= 20

              pdf.line(30,v1,30,v2)
              pdf.line(580,v1,580,v2)
              pdf.line(310,v1,310,v2) #vertical lines
              pdf.line(400,v1,400,v2)
              pdf.line(490,v1,490,v2)
              v1 -= 20
              v2 -= 20
          
          calc_y1 = y1
          calc_y2 = y2

          if comp_data[12] == "1":
            if calc_y1-100 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-100,350,calc_y1+20)
              pdf.line(580,calc_y1-100,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-60)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-80)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-100)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-110),580,(calc_y1-110))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-170 <= 40:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-125,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-140,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-155,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-170,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
          elif comp_data[12] == "2":
            if calc_y1-120 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-120,350,calc_y1+20)
              pdf.line(580,calc_y1-120,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
    
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-80)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-100)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-120)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-130),580,(calc_y1-130))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-190 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-145,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-160,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-175,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-190,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          elif comp_data[12] == "3":
            if calc_y1-140 <= 40:
              pdf.showPage()
              calc_y1 = 730
              calc_y2 = 730
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1+20,580,calc_y2+20)
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            else:
              pdf.line(350,calc_y1-140,350,calc_y1+20)
              pdf.line(580,calc_y1-140,580,calc_y1+20)
              #-----------------------------------
              pdf.line(350,calc_y1,580,calc_y2)
              pdf.line(350,calc_y1-20,580,calc_y2-20)
              pdf.line(350,calc_y1-40,580,calc_y2-40)
              pdf.line(350,calc_y1-60,580,calc_y2-60)
              pdf.line(350,calc_y1-80,580,calc_y2-80)
              pdf.line(350,calc_y1-100,580,calc_y2-100)
              pdf.line(350,calc_y1-120,580,calc_y2-120)
              pdf.line(350,calc_y1-140,580,calc_y2-140)
              if comp_data[7] == "before amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + "" + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + "" + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "before amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(discount1_1.cget("text")))

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(sub1_1.cget("text")))

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(cost1_1.cget("text")))

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(tax1_1.cget("text")))

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(tax2_1.cget("text")))

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invoicetot1_1.cget("text")))

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(total1_1.cget("text")))

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(balance1_1.cget("text")))

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
              elif comp_data[7] == "after amount with space":
                pdf.drawString(352,calc_y1+5,discount_1.cget("text"))
                pdf.drawRightString(578,calc_y1+5,str(discount1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
                pdf.drawRightString(578,(calc_y1-20)+5,str(sub1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-40)+5,ex_costn_combo_1.get())
                pdf.drawRightString(578,(calc_y1-40)+5,str(cost1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-60)+5,"TAX1")
                pdf.drawRightString(578,(calc_y1-60)+5,str(tax1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-80)+5,"TAX2")
                pdf.drawRightString(578,(calc_y1-80)+5,str(tax2_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
                pdf.drawRightString(578,(calc_y1-100)+5,str(invoicetot1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
                pdf.drawRightString(578,(calc_y1-120)+5,str(total1_1.cget("text")) + " " + comp_data[6])

                pdf.drawString(352,(calc_y1-140)+5,"Balance")
                pdf.drawRightString(578,(calc_y1-140)+5,str(balance1_1.cget("text")) + " " + comp_data[6])

                pdf.setStrokeColorRGB(255,10,0)
                pdf.line(30,(calc_y1-150),580,(calc_y1-150))

                comment_text = comment_txt_1.get("1.0","end-1c")
                wraped_text = "\n".join(wrap(comment_text,102))
                c  = wraped_text.split('\n')
                    
                if calc_y1-210 <= 45:
                  pdf.showPage()
                  calc_y1 = 730
                  calc_y2 = 730   
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-15,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-30,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-45,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass 
                else:
                  comm = len(c)
                  if comm > 0:
                    pdf.drawString(32,calc_y1-165,c[0])
                    if comm > 1:
                      pdf.drawString(32,calc_y1-180,c[1])
                      if comm > 2:
                        pdf.drawString(32,calc_y1-195,c[2])
                        if comm > 3:
                          pdf.drawString(32,calc_y1-210,c[3])
                        else:
                          pass
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass

          if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
            pdf.showPage() 
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.setStrokeColorRGB(255,10,0)
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')

            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())
          else:
            pdf.drawCentredString(302,115,"Terms and Conditions")
            pdf.setStrokeColorRGB(255,10,0)
            pdf.line(30,110,580,110)
            term_text = term_txt_1.get("1.0","end-1c")
            wraped_text = "\n".join(wrap(term_text,102))
            t  = wraped_text.split('\n')

            term = len(t)
            if term > 0:
              pdf.drawString(32,95,t[0])
              if term > 1:
                pdf.drawString(32,80,t[1])
                if term > 2:
                  pdf.drawString(32,65,t[2])
                  if term > 3:
                    pdf.drawString(32,50,t[3])
                  else:
                    pass
                else:
                  pass
              else:
                pass
            else:
              pass
            
            pdf.drawString(32,30,"Sales Person :")
            pdf.drawString(115,30,sales_per_entry_1.get())
            pdf.drawString(32,15,footer_txt_combo_1.get())


        pdf.save()

        mail_invo =Toplevel()
        mail_invo.title("E-Mail Invoice List")
        p2 = PhotoImage(file = "images/fbicon.png")
        mail_invo.iconphoto(False, p2)
        mail_invo.geometry("1030x490+150+120")
      
        
        def inv_UploadAction_1(event=None):
          global filenamez

          filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
          shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
          attach_list.insert(0, filenamez.split('/')[-1])


        def inv_deletefile_1():
          inv_remove=attach_list.curselection()
          yawn=attach_list.get(inv_remove) 
          print(yawn)       
          attach_list.delete(ACTIVE)

        def show_listbox_file(event):
          import win32api
          try:
            for i in attach_list.curselection():
              listboxfile = attach_list.get(i)
              if listboxfile.lower().endswith(('.png','.jpg','.jpeg')):
                win32api.ShellExecute(0,"",os.getcwd()+"/images/"+listboxfile,None,".",0)
              else:
                win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+listboxfile,None,".",0)
          except:
            pass

        style = ttk.Style()
        style.theme_use('default')
        style.configure('TNotebook.Tab', background="#999999", padding=5)
        email_Notebook = ttk.Notebook(mail_invo)
        email_Frame = Frame(email_Notebook, height=500, width=1080)
        account_Frame = Frame(email_Notebook, height=550, width=1080)
        email_Notebook.add(email_Frame, text="E-mail")
        email_Notebook.add(account_Frame, text="Account")
        email_Notebook.place(x=0, y=0)
        messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
        messagelbframe.place(x=5, y=5)
        global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
        email_to = StringVar()
        email_subject = StringVar()
        email_from = StringVar()
        email_passw = StringVar()
        email_carbon = StringVar()
        email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
        email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
        email_to_addr_entry.place(x=120, y=5)
        email_addr = inv_email_e5_1.get()
        email_to_addr_entry.delete(0,END)
        email_to_addr_entry.insert(0,email_addr)
        send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail_1)
        send_email_btn.place(x=600, y=10)
        carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
        carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
        carbon_entry.place(x=120, y=32)
        subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
        subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
        subject_entry.place(x=120, y=59)
        subject = inv_number_entry_1.get()
        subject_entry.delete(0,END)
        subject_entry.insert(0,"Invoice" + " " + "(" + subject + ")")

        style = ttk.Style()
        style.theme_use('default')
        style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
        mess_Notebook = ttk.Notebook(messagelbframe)
        emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
        htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
        mess_Notebook.add(emailmessage_Frame, text="E-mail message")
        mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
        mess_Notebook.place(x=5, y=90)

        email_ltr_scroll=scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True,exportselection=False)
        email_ltr_scroll.config(inactiveselectbackground=email_ltr_scroll.cget("selectbackground"))
        email_ltr_scroll.place(x=0, y=28)

        sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
        sel_all_btn.place(x=0, y=1)  
        cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
        cut_btn.place(x=36, y=1)
        copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
        copy_btn.place(x=73, y=1)
        paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
        paste_btn.place(x=105, y=1)
        undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
        undo_btn.place(x=140, y=1)
        redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
        redo_btn.place(x=175, y=1)

        def bold_text():
          bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
          bold_font.configure(weight="bold")

          email_ltr_scroll.tag_configure("bold", font=bold_font)

          current_tags = email_ltr_scroll.tag_names("sel.first")

          if "bold" in current_tags:
            email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
          else:
            email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
        
        bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
        bold_btn.place(x=210, y=1)

        def italic_text():
          italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
          italic_font.configure(slant="italic")

          email_ltr_scroll.tag_configure("italic", font=italic_font)

          current_tags = email_ltr_scroll.tag_names("sel.first")

          if "italic" in current_tags:
            email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
          else:
            email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
        italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
        italic_btn.place(x=245, y=1)

        def underline_text():
          try:
            if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
                email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
            else:
                email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
                email_ltr_scroll.tag_configure('underline_selection', underline=True)
          except TclError:
              pass
        underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
        underline_btn.place(x=280, y=1)

        def align_left():
          data = email_ltr_scroll.get(0.0,END)
          email_ltr_scroll.tag_config('left',justify=LEFT)
          email_ltr_scroll.delete(0.0,END)
          email_ltr_scroll.insert(INSERT,data,'left')
        align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
        align_lbtn.place(x=315, y=1)

        def align_right():
          data = email_ltr_scroll.get(0.0,END)
          email_ltr_scroll.tag_config('right',justify=RIGHT)
          email_ltr_scroll.delete(0.0,END)
          email_ltr_scroll.insert(INSERT,data,'right')
        align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
        align_rbtn.place(x=350, y=1)

        def align_center():
          data = email_ltr_scroll.get(0.0,END)
          email_ltr_scroll.tag_config('center',justify=CENTER)
          email_ltr_scroll.delete(0.0,END)
          email_ltr_scroll.insert(INSERT,data,'center')
        align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
        align_cbtn.place(x=385, y=1)
        hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
        hyper_btn.place(x=420, y=1)
        remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
        remove_btn.place(x=455, y=1)


        def color_text():
          color = colorchooser.askcolor()[1]
          if color:
            color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

            email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

            current_tags = email_ltr_scroll.tag_names("sel.first")

            if "colored" in current_tags:
              email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
            else:
              email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
        color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
        color_btn.place(x=490, y=1)

        def fontsize_chooser(event):
          font_size = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
          font_size.configure(size=int(fontsize_combo.get())*7)

          email_ltr_scroll.tag_configure("size", font=font_size)
          current_tags = email_ltr_scroll.tag_names("sel.first")

          email_ltr_scroll.tag_add("size", "sel.first", "sel.last")

        
        fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=10)
        fontsize_combo.place(x=600, y=5)
        fontsize_combo['values'] = ("1","2","3","4","5","6","7")
        fontsize_combo.current(0)
        fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
        btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
        btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
        btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
        btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
        email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
        email_html_scroll.place(x=0, y=28)
        attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
        attachlbframe.place(x=740, y=5)
        lstfrm = StringVar()
        attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
        attach_list.place(x=5, y=5)
        attach_list.insert(0,inv_number_entry_1.get().split('/')[0] + ".pdf")
        attach_list.bind('<Double-Button-1>',show_listbox_file)
        lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
        btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction_1)
        btn17.place(x=60, y=260)
        btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile_1)
        btn18.place(x=60, y=295)
        lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
        lbl_tt_info.place(x=740, y=370)

        ready_frame=Frame(mail_invo, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
        
        sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
        sendatalbframe.place(x=5, y=5)
        your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
        your_cemail_entry = Entry(sendatalbframe, width=40)
        your_cemail_entry.place(x=195, y=30)

        your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
        your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
        your_cpass_entry.place(x=195, y=60)
        
        
        

      inv_first_frame2=Frame(pop_1, bg="#f5f3f2", height=60)
      inv_first_frame2.pack(side="top", fill=X)

      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      select_customer_btn_1 = Button(inv_first_frame2,compound="top", text="Select\nCustomer",relief=RAISED, image=customer,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_sel_customer_1)
      select_customer_btn_1.pack(side="left", pady=3, ipadx=4)


      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      add_newline_btn_1 = Button(inv_first_frame2,compound="top", text="Add new\nline item",relief=RAISED, image=photo,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_newline_1)
      add_newline_btn_1.pack(side="left", pady=3, ipadx=4)

      del_line_item_btn_1= Button(inv_first_frame2,compound="top", text="Delete line\nitem",relief=RAISED, image=photo2,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=delete_line_item_1)
      del_line_item_btn_1.pack(side="left", pady=3, ipadx=4)

      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      prev_invoice_1= Button(inv_first_frame2,compound="top", text="Preview\nInvoice",relief=RAISED, image=photo4,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=previewline_1)
      prev_invoice_1.pack(side="left", pady=3, ipadx=4)

      print_invoice_1= Button(inv_first_frame2,compound="top", text="Print \nInvoice",relief=RAISED, image=photo5,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=printinvoice_1)
      print_invoice_1.pack(side="left", pady=3, ipadx=4)

      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      mail_invoice_1= Button(inv_first_frame2,compound="top", text="Email\nInvoice",relief=RAISED, image=photo6,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=email_invoice_1)
      mail_invoice_1.pack(side="left", pady=3, ipadx=4)

      sms1= Button(inv_first_frame2,compound="top", text="Send SMS\nnotification",relief=RAISED, image=photo10,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=sms1)
      sms1.pack(side="left", pady=3, ipadx=4)

      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      mark_inv_paid_1= Button(inv_first_frame2,compound="top", text="Mark invoice\nas 'Paid'",relief=RAISED, image=mark1,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=markinvo_1)
      mark_inv_paid_1.pack(side="left", pady=3, ipadx=4)

      void_invoice_1= Button(inv_first_frame2,compound="top", text="Void\ninvoice",relief=RAISED, image=mark2,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=voidinvoice_1)
      void_invoice_1.pack(side="left", pady=3, ipadx=4)


      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      open_calc_1= Button(inv_first_frame2,compound="top", text="Open\nCalculator",relief=RAISED, image=photo9,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=lambda:os.system('C:\Windows\System32\calc.exe'))
      open_calc_1.pack(side="left", pady=3, ipadx=4)

      w = Canvas(inv_first_frame2, width=1, height=65, bg="#b3b3b3", bd=0)
      w.pack(side="left", padx=5)

      save_invoice_1 = Button(inv_first_frame2,compound="top", text="Save",relief=RAISED, image=tick,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=edit_invoice)
      save_invoice_1.pack(side="right", pady=3, ipadx=4)

      inv_first_frame2_1=Frame(pop_1, height=180,bg="#f5f3f2")
      inv_first_frame2_1.pack(side="top", fill=X)

      labelframe1 = LabelFrame(inv_first_frame2_1,text="Customers",font=("arial",15))
      labelframe1.place(x=10,y=5,width=640,height=160)

      def inv_to_combo_1(event):
        global inv_sel_combo_1
        inv_to_str_1 = inv_to_1.get()
        sql = "SELECT * FROM Customer WHERE businessname=%s"
        val = (inv_to_str_1,)
        fbcursor.execute(sql,val)
        inv_sel_combo_1 = fbcursor.fetchone()
        inv_addr_e2_1.delete('1.0',END)
        inv_addr_e2_1.insert('1.0',inv_sel_combo_1[5])
        inv_shipto_e3_1.delete(0, END)
        inv_shipto_e3_1.insert(0, inv_sel_combo_1[6])
        inv_addr_e4_1.delete('1.0',END)
        inv_addr_e4_1.insert('1.0',inv_sel_combo_1[7])
        inv_email_e5_1.delete(0,END)
        inv_email_e5_1.insert(0,inv_sel_combo_1[9])
        inv_sms_e6_1.delete(0,END)
        inv_sms_e6_1.insert(0,inv_sel_combo_1[12])

      def copy_cust_details_1():
        inv_to_str_2 = inv_to_1.get()
        if inv_to_str_2 != "":
          sql = "SELECT * FROM Customer WHERE businessname=%s"
          val = (inv_to_str_2,)
          fbcursor.execute(sql,val)
          inv_sel_combo_2 = fbcursor.fetchone()
          inv_shipto_e3_1.delete(0, END)
          inv_shipto_e3_1.insert(0, inv_sel_combo_2[6])
          inv_addr_e4_1.delete('1.0',END)
          inv_addr_e4_1.insert('1.0',inv_sel_combo_2[7])
        else:
          inv_shipto_e3_1.delete(0, END)
          inv_shipto_e3_1.insert(0, edit_inv_data[20])
          inv_addr_e4_1.delete('1.0',END)
          inv_addr_e4_1.insert('1.0',edit_inv_data[21])


      sql = "select businessname from Customer"
      fbcursor.execute(sql,)
      cdata = fbcursor.fetchall()

      global inv_combo_e1_1,inv_addr_e2_1,inv_shipto_e3_1,inv_addr_e4_1,inv_email_e5_1,inv_sms_e6_1,inv_number_entry_1

      invoice_to_1 = Label(labelframe1, text="Invoice to").place(x=10,y=5)
      inv_to_1 = StringVar()
      inv_combo_e1_1 = ttk.Combobox(labelframe1,width=28,textvariable=inv_to_1)
      inv_combo_e1_1.place(x=80,y=5)
      inv_combo_e1_1['values'] = cdata
      inv_combo_e1_1.bind("<<ComboboxSelected>>", inv_to_combo_1)
      inv_address_1=Label(labelframe1,text="Address").place(x=10,y=30)
      inv_addr_e2_1=scrolledtext.Text(labelframe1, undo=True,width=23)
      inv_addr_e2_1.place(x=80,y=30,height=70)
      inv_ship_to_1=Label(labelframe1,text="Ship to").place(x=342,y=5)
      inv_shipto_e3_1=Entry(labelframe1,width=30)
      inv_shipto_e3_1.place(x=402,y=3)
      inv_address1_1=Label(labelframe1,text="Address").place(x=340,y=30)
      inv_addr_e4_1=scrolledtext.Text(labelframe1, undo=True,width=23)
      inv_addr_e4_1.place(x=402,y=30,height=70)

      inv_copy_cust_1 =Button(labelframe1,width=3,height=2,compound = LEFT,text=">>",command=copy_cust_details_1)
      inv_copy_cust_1.place(x=280, y=50)
      
      labelframe2 = LabelFrame(inv_first_frame2_1,text="")
      labelframe2.place(x=10,y=130,width=640,height=42)
      inv_email_1=Label(labelframe2,text="Email").place(x=10,y=5)
      inv_email_e5_1=Entry(labelframe2,width=30)
      inv_email_e5_1.place(x=80,y=5)
      inv_sms_1=Label(labelframe2,text="SMS Number").place(x=328,y=5)
      inv_sms_e6_1=Entry(labelframe2,width=30)
      inv_sms_e6_1.place(x=402,y=5)
      
      if edit_inv_data[48] == 1 and edit_inv_data[4] != "Void":
        inv_combo_e1_1.delete(0,END)
        inv_combo_e1_1.insert(0,edit_inv_data[18])
        inv_addr_e2_1.delete('1.0',END)
        inv_addr_e2_1.insert('1.0',edit_inv_data[19])
        inv_shipto_e3_1.delete(0, END)
        inv_shipto_e3_1.insert(0, edit_inv_data[20])
        inv_addr_e4_1.delete('1.0',END)
        inv_addr_e4_1.insert('1.0',edit_inv_data[21])
        inv_email_e5_1.delete(0,END)
        inv_email_e5_1.insert(0,edit_inv_data[22])
        inv_sms_e6_1.delete(0,END)
        inv_sms_e6_1.insert(0,edit_inv_data[23])
        inv_combo_e1_1['state'] = DISABLED
        inv_addr_e2_1['state'] = DISABLED
        inv_shipto_e3_1['state'] = DISABLED
        inv_addr_e4_1['state'] = DISABLED
        inv_email_e5_1['state'] = DISABLED
        inv_sms_e6_1['state'] = DISABLED
        select_customer_btn_1["state"] = DISABLED
        add_newline_btn_1['state'] = DISABLED
        del_line_item_btn_1['state'] = DISABLED
        mark_inv_paid_1['state'] = DISABLED
        save_invoice_1["state"] = DISABLED
      elif edit_inv_data[48] == 1 and edit_inv_data[4] == "Void":
        inv_combo_e1_1.delete(0,END)
        inv_combo_e1_1.insert(0,edit_inv_data[18])
        inv_addr_e2_1.delete('1.0',END)
        inv_addr_e2_1.insert('1.0',edit_inv_data[19])
        inv_shipto_e3_1.delete(0, END)
        inv_shipto_e3_1.insert(0, edit_inv_data[20])
        inv_addr_e4_1.delete('1.0',END)
        inv_addr_e4_1.insert('1.0',edit_inv_data[21])
        inv_email_e5_1.delete(0,END)
        inv_email_e5_1.insert(0,edit_inv_data[22])
        inv_sms_e6_1.delete(0,END)
        inv_sms_e6_1.insert(0,edit_inv_data[23])
        inv_combo_e1_1['state'] = DISABLED
        inv_addr_e2_1['state'] = DISABLED
        inv_shipto_e3_1['state'] = DISABLED
        inv_addr_e4_1['state'] = DISABLED
        inv_email_e5_1['state'] = DISABLED
        inv_sms_e6_1['state'] = DISABLED
        select_customer_btn_1["state"] = DISABLED
        add_newline_btn_1['state'] = DISABLED
        del_line_item_btn_1['state'] = DISABLED
        mark_inv_paid_1['state'] = DISABLED
        void_invoice_1["state"] = DISABLED
        save_invoice_1["state"] = DISABLED
      else:
        inv_combo_e1_1.delete(0,END)
        inv_combo_e1_1.insert(0,edit_inv_data[18])
        inv_addr_e2_1.delete('1.0',END)
        inv_addr_e2_1.insert('1.0',edit_inv_data[19])
        inv_shipto_e3_1.delete(0, END)
        inv_shipto_e3_1.insert(0, edit_inv_data[20])
        inv_addr_e4_1.delete('1.0',END)
        inv_addr_e4_1.insert('1.0',edit_inv_data[21])
        inv_email_e5_1.delete(0,END)
        inv_email_e5_1.insert(0,edit_inv_data[22])
        inv_sms_e6_1.delete(0,END)
        inv_sms_e6_1.insert(0,edit_inv_data[23])
        
      labelframe = LabelFrame(inv_first_frame2_1,text="Invoice",font=("arial",15))
      labelframe.place(x=652,y=5,width=290,height=170)

      # fbcursor.execute("SELECT * FROM Invoice ORDER BY invoiceid DESC LIMIT 1")
      # inv_number_data_1 = fbcursor.fetchone()
      
      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql,)
      comp_data = fbcursor.fetchone()

      inv_number_label_1=Label(labelframe,text="Invoice#").place(x=5,y=5)
      inv_number_entry_1=Entry(labelframe,width=25)
      inv_number_entry_1.place(x=100,y=5,)

      if edit_inv_data[48] == 1 or edit_inv_data[4] == "Void":
        inv_number_entry_1.delete(0,'end')
        inv_number_entry_1.insert(0, edit_inv_data[1])
        inv_number_entry_1["state"] = DISABLED
      else:
        inv_number_entry_1.delete(0,'end')
        inv_number_entry_1.insert(0, edit_inv_data[1])

      def inv_due_check_1():
        if checkvarStatus5_1.get() == 0:
          inv_duedate_entry_1['state'] = DISABLED
        else:
          inv_duedate_entry_1['state'] = NORMAL
      global tdata_1
      term_sql_1 = "SELECT terms_of_payment FROM terms_of_payment"
      fbcursor.execute(term_sql_1,)
      term_data_1 = fbcursor.fetchall()
      tdata_1 = []
      for i in term_data_1:
        tdata_1.append(i[0])

      inv_date_label_1 =Label(labelframe,text="Invoice date").place(x=5,y=33)
      if comp_data[10] == "mm-dd-yyyy":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="mm-dd-yyyy")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="mm-dd-yyyy")
      elif comp_data[10] == "dd-mm-yyyy":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="dd-mm-yyyy")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="dd-mm-yyyy")
      elif comp_data[10] == "yyyy.mm.dd":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="yyyy.mm.dd")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="yyyy.mm.dd")
      elif comp_data[10] == "mm/dd/yyyy":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="mm/dd/yyyy")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="mm/dd/yyyy")
      elif comp_data[10] == "dd/mm/yyyy":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="dd/mm/yyyy")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="dd/mm/yyyy")
      elif comp_data[10] == "dd.mm.yyyy":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="dd.mm.yyyy")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="dd.mm.yyyy")
      elif comp_data[10] == "yyyy/mm/dd":
        inv_date_entry_1 =DateEntry(labelframe,width=15,date_pattern="yyyy/mm/dd")
        inv_duedate_entry_1=DateEntry(labelframe,width=15,date_pattern="yyyy/mm/dd")
      else:
        inv_date_entry_1 =DateEntry(labelframe,width=15)
        inv_duedate_entry_1=DateEntry(labelframe,width=15)
      checkvarStatus5_1=IntVar()
      inv_duedate_check_1=Checkbutton(labelframe,variable = checkvarStatus5_1,text="Due date",onvalue =1 ,offvalue = 0,command=inv_due_check_1)
      inv_duedate_check_1.place(x=5,y=62)
      inv_date_entry_1.place(x=150,y=33)
      inv_duedate_entry_1.place(x=150,y=62)
      inv_terms_label_1=Label(labelframe,text="Terms").place(x=5,y=92)
      term = StringVar()
      inv_terms_combo_1=ttk.Combobox(labelframe,textvariable=term,width=23)
      inv_terms_combo_1.place(x=100,y=92)
      inv_terms_combo_1['values'] = tdata_1
      inv_terms_combo_1.bind("<<ComboboxSelected>>")
      inv_ref_label_1=Label(labelframe,text="Invoice ref#").place(x=5,y=118)
      inv_ref_entry_1=Entry(labelframe,width=25 )
      inv_ref_entry_1.place(x=100,y=118)

      if edit_inv_data[48] == 1 or edit_inv_data[4] == "Void":
        if edit_inv_data[3] is not None:
          if comp_data[10] == "mm-dd-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m-%d-%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d-%m-%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.year,dt.month,dt.day)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.year,due.month,due.day)
          elif comp_data[10] == "mm/dd/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m/%d/%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d/%m/%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.day,dt.month,dt.year)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.day,due.month,due.year)
          elif comp_data[10] == "yyyy/mm/dd":
            date = datetime.strftime(edit_inv_data[2],"%Y/%m/%d")
            due_date = datetime.strftime(edit_inv_data[3],"%Y/%m/%d")
          else:
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}/{1:02}/{2:02}'.format(dt.month,dt.day,dt.year % 100)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}/{1:02}/{2:02}'.format(due.month,due.day,due.year % 100)
          checkvarStatus5_1.set(1)
          inv_date_entry_1.delete(0, END)
          inv_date_entry_1.insert(0, date)
          inv_duedate_entry_1.delete(0, END)
          inv_duedate_entry_1.insert(0, due_date)
          inv_terms_combo_1.delete(0, END)
          inv_terms_combo_1.insert(0, edit_inv_data[42])
          inv_ref_entry_1.delete(0, END)
          inv_ref_entry_1.insert(0, edit_inv_data[43])
          inv_date_entry_1['state'] = DISABLED
          inv_duedate_entry_1['state'] = DISABLED
          inv_terms_combo_1['state'] = DISABLED
          inv_ref_entry_1['state'] = DISABLED
          inv_duedate_check_1['state'] = DISABLED
        else:
          current_date = datetime.today().date()
          if comp_data[10] == "mm-dd-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m-%d-%Y")
            due_date = datetime.strftime(current_date,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d-%m-%Y")
            due_date = datetime.strftime(current_date,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.year,dt.month,dt.day)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.year,due.month,due.day)
          elif comp_data[10] == "mm/dd/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m/%d/%Y")
            due_date = datetime.strftime(current_date,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d/%m/%Y")
            due_date = datetime.strftime(current_date,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.day,dt.month,dt.year)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.day,due.month,due.year)
          elif comp_data[10] == "yyyy/mm/dd":
            date = datetime.strftime(edit_inv_data[2],"%Y/%m/%d")
            due_date = datetime.strftime(current_date,"%Y/%m/%d")
          else:
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}/{1:02}/{2:02}'.format(dt.month,dt.day,dt.year % 100)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}/{1:02}/{2:02}'.format(due.month,due.day,due.year % 100)
          
          inv_date_entry_1.delete(0, END)
          inv_date_entry_1.insert(0, date)
          inv_duedate_entry_1.delete(0, END)
          inv_duedate_entry_1.insert(0, due_date)
          inv_terms_combo_1.delete(0, END)
          inv_terms_combo_1.insert(0, edit_inv_data[42])
          inv_ref_entry_1.delete(0, END)
          inv_ref_entry_1.insert(0, edit_inv_data[43])
          checkvarStatus5_1.set(0)
          inv_date_entry_1['state'] = DISABLED
          inv_duedate_entry_1['state'] = DISABLED
          inv_terms_combo_1['state'] = DISABLED
          inv_ref_entry_1['state'] = DISABLED
          inv_duedate_check_1['state'] = DISABLED
      else:
        if edit_inv_data[3] is not None:
          if comp_data[10] == "mm-dd-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m-%d-%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d-%m-%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.year,dt.month,dt.day)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.year,due.month,due.day)
          elif comp_data[10] == "mm/dd/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m/%d/%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d/%m/%Y")
            due_date = datetime.strftime(edit_inv_data[3],"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.day,dt.month,dt.year)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.day,due.month,due.year)
          elif comp_data[10] == "yyyy/mm/dd":
            date = datetime.strftime(edit_inv_data[2],"%Y/%m/%d")
            due_date = datetime.strftime(edit_inv_data[3],"%Y/%m/%d")
          else:
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}/{1:02}/{2:02}'.format(dt.month,dt.day,dt.year % 100)
            due = datetime.strptime(str(edit_inv_data[3]),"%Y-%m-%d")
            due_date = '{0}/{1:02}/{2:02}'.format(due.month,due.day,due.year % 100)
          checkvarStatus5_1.set(1)
          inv_date_entry_1.delete(0, END)
          inv_date_entry_1.insert(0, date)
          inv_duedate_entry_1.delete(0, END)
          inv_duedate_entry_1.insert(0, due_date)
          inv_terms_combo_1.delete(0, END)
          inv_terms_combo_1.insert(0, edit_inv_data[42])
          inv_ref_entry_1.delete(0, END)
          inv_ref_entry_1.insert(0, edit_inv_data[43])
        else:
          current_date = datetime.today().date()
          if comp_data[10] == "mm-dd-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m-%d-%Y")
            due_date = datetime.strftime(current_date,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d-%m-%Y")
            due_date = datetime.strftime(current_date,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.year,dt.month,dt.day)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.year,due.month,due.day)
          elif comp_data[10] == "mm/dd/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%m/%d/%Y")
            due_date = datetime.strftime(current_date,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            date = datetime.strftime(edit_inv_data[2],"%d/%m/%Y")
            due_date = datetime.strftime(current_date,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}.{1:02}.{2:02}'.format(dt.day,dt.month,dt.year)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}.{1:02}.{2:02}'.format(due.day,due.month,due.year)
          elif comp_data[10] == "yyyy/mm/dd":
            date = datetime.strftime(edit_inv_data[2],"%Y/%m/%d")
            due_date = datetime.strftime(current_date,"%Y/%m/%d")
          else:
            d = datetime.strftime(edit_inv_data[2],"%Y-%m-%d")
            dt = datetime.strptime(d,"%Y-%m-%d")
            date = '{0}/{1:02}/{2:02}'.format(dt.month,dt.day,dt.year % 100)
            due = datetime.strptime(str(current_date),"%Y-%m-%d")
            due_date = '{0}/{1:02}/{2:02}'.format(due.month,due.day,due.year % 100)
          
          inv_date_entry_1.delete(0, END)
          inv_date_entry_1.insert(0, date)
          inv_duedate_entry_1.delete(0, END)
          inv_duedate_entry_1.insert(0, due_date)
          inv_terms_combo_1.delete(0, END)
          inv_terms_combo_1.insert(0, edit_inv_data[42])
          inv_ref_entry_1.delete(0, END)
          inv_ref_entry_1.insert(0, edit_inv_data[43])
          checkvarStatus5_1.set(0)
          inv_duedate_entry_1['state'] = DISABLED
      
      

      fir2Frame=Frame(pop_1, height=150,width=100,bg="#f5f3f2")
      fir2Frame.pack(side="top", fill=X)
      listFrame_1 = Frame(fir2Frame, bg="white", height=140,borderwidth=5,  relief=RIDGE)


      if comp_data[12] == "1":
        add_newline_tree_1=ttk.Treeview(listFrame_1)
        add_newline_tree_1["columns"]=["1","2","3","4","5","6","7"]

        add_newline_tree_1.column("#0", width=20)
        add_newline_tree_1.column("1", width=80)
        add_newline_tree_1.column("2", width=190)
        add_newline_tree_1.column("3", width=220)
        add_newline_tree_1.column("4", width=95)
        add_newline_tree_1.column("5", width=60)
        add_newline_tree_1.column("6", width=60)
        add_newline_tree_1.column("7", width=95)
        
        add_newline_tree_1.heading("#0")
        add_newline_tree_1.heading("1",text="ID/SKU")
        add_newline_tree_1.heading("2",text="Product/Service")
        add_newline_tree_1.heading("3",text="Description")
        add_newline_tree_1.heading("4",text="Unit Price")
        add_newline_tree_1.heading("5",text="Quality")
        add_newline_tree_1.heading("6",text="Pcs/Weight")
        add_newline_tree_1.heading("7",text="Price")
      
        add_newline_tree_1.pack(fill="both", expand=1)
        listFrame_1.pack(side="top", fill="both", padx=5, pady=3, expand=1)
      elif comp_data[12] == "2":
        add_newline_tree_1=ttk.Treeview(listFrame_1)
        add_newline_tree_1["columns"]=["1","2","3","4","5","6","7","8"]

        add_newline_tree_1.column("#0", width=20)
        add_newline_tree_1.column("1", width=80)
        add_newline_tree_1.column("2", width=190)
        add_newline_tree_1.column("3", width=190)
        add_newline_tree_1.column("4", width=80)
        add_newline_tree_1.column("5", width=60)
        add_newline_tree_1.column("6", width=60)
        add_newline_tree_1.column("7", width=60)
        add_newline_tree_1.column("8", width=80)
        
        add_newline_tree_1.heading("#0")
        add_newline_tree_1.heading("1",text="ID/SKU")
        add_newline_tree_1.heading("2",text="Product/Service")
        add_newline_tree_1.heading("3",text="Description")
        add_newline_tree_1.heading("4",text="Unit Price")
        add_newline_tree_1.heading("5",text="Quality")
        add_newline_tree_1.heading("6",text="Pcs/Weight")
        add_newline_tree_1.heading("7",text="Tax1")
        add_newline_tree_1.heading("8",text="Price")
      
        add_newline_tree_1.pack(fill="both", expand=1)
        listFrame_1.pack(side="top", fill="both", padx=5, pady=3, expand=1)
      elif comp_data[12] == "3":
        add_newline_tree_1=ttk.Treeview(listFrame_1)
        add_newline_tree_1["columns"]=["1","2","3","4","5","6","7","8","9"]

        add_newline_tree_1.column("#0", width=20)
        add_newline_tree_1.column("1", width=80)
        add_newline_tree_1.column("2", width=170)
        add_newline_tree_1.column("3", width=170)
        add_newline_tree_1.column("4", width=80)
        add_newline_tree_1.column("5", width=60)
        add_newline_tree_1.column("6", width=60)
        add_newline_tree_1.column("7", width=60)
        add_newline_tree_1.column("8", width=60)
        add_newline_tree_1.column("9", width=80)
        
        add_newline_tree_1.heading("#0")
        add_newline_tree_1.heading("1",text="ID/SKU")
        add_newline_tree_1.heading("2",text="Product/Service")
        add_newline_tree_1.heading("3",text="Description")
        add_newline_tree_1.heading("4",text="Unit Price")
        add_newline_tree_1.heading("5",text="Quality")
        add_newline_tree_1.heading("6",text="Pcs/Weight")
        add_newline_tree_1.heading("7",text="Tax1")
        add_newline_tree_1.heading("8",text="Tax2")
        add_newline_tree_1.heading("9",text="Price")
      
        add_newline_tree_1.pack(fill="both", expand=1)
        listFrame_1.pack(side="top", fill="both", padx=5, pady=3, expand=1)

      totalprice_view_1 = Label(listFrame_1,bg="#f5f3f2")
      totalprice_view_1.place(x=850,y=200,width=78,height=18)

      proquanVar1 = StringVar()
      def inv_proquanedit_box_1(val):
        change_quanwindow_1 = Toplevel()
        change_quanwindow_1.title("Edit the value or cancel")
        change_quanwindow_1.geometry("400x200+350+300")
        root.resizable(False, False)
        change_quantity_lbl_1 = Label(change_quanwindow_1 , text='Quality', 
        font = ("Times New Roman", 10)).place(x=80,y=60)
        quantity_editbox_1 = Entry(change_quanwindow_1)
        quantity_editbox_1.insert(0,val)
        quantity_editbox_1.place(x=180,y=63)
        change_quanwindow_1.focus()
        
        def assign_value_1(event):
          print_quantity_1 = quantity_editbox_1.get()
          proquanVar1.set(print_quantity_1)
          change_quanwindow_1.quit()
          change_quanwindow_1.destroy()
            
        
        change_quanwindow_1.bind('<Return>', assign_value_1 )
    
        okbtn_quantity_1 = Button(change_quanwindow_1, text="Okay")
        okbtn_quantity_1.bind('<Button-1>',assign_value_1)
        okbtn_quantity_1.place(x=70,y=130)
        
        cancelbtn_quantity_1 = Button(change_quanwindow_1, text="Cancel", command = change_quanwindow_1.destroy).place(x=276,y=130)
        change_quanwindow_1.mainloop()

      def edit_quantity_1(event):
        selected_item = add_newline_tree_1.selection()[0]
        temp = list(add_newline_tree_1.item(selected_item , 'values'))
        inv_proquanedit_box_1(temp[4])
        temp[4] = proquanVar1.get()
        add_newline_tree_1.item(selected_item, values= temp)
        sql = "select * from company"
        fbcursor.execute(sql)
        priceupdate = fbcursor.fetchone()
        if not priceupdate:
          add_newline_tree_1.set(selected_item, '#7', (float(temp[3])*float(temp[4])))
        elif priceupdate[12] =="1":
          add_newline_tree_1.set(selected_item, '#7', (float(temp[3])*float(temp[4])))
        elif priceupdate[12] =="2":
          add_newline_tree_1.set(selected_item, '#8', (float(temp[3])*float(temp[4])))
        elif priceupdate[12] =="3":
          add_newline_tree_1.set(selected_item, '#9', (float(temp[3])*float(temp[4])))
        sql = "select * from company"
        fbcursor.execute(sql)
        comp_data = fbcursor.fetchone()
        if comp_data[12] == "1":
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=price)
        elif comp_data[12] == "2":
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal) 
          totalprice_view_1.config(text=round((price + p),2))
        elif comp_data[12] == "3":
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=round((price + p1 + p2 + p3),2))

      add_newline_tree_1.bind('<Double-Button-1>' , edit_quantity_1)


      fir3Frame=Frame(pop_1,height=200,width=700,bg="#f5f3f2")
      fir3Frame.place(x=0,y=490)

      tabStyle = ttk.Style()
      tabStyle.theme_use('default')
      tabStyle.configure('TNotebook.Tab', background="#999999", width=12, padding=5)
      myNotebook=ttk.Notebook(fir3Frame)
      invoiceFrame = Frame(myNotebook, height=200, width=800)
      recurFrame = Frame(myNotebook, height=200, width=800)
      payementFrame = Frame(myNotebook, height=200, width=800)
      headerFrame = Frame(myNotebook, height=200, width=800)
      commentFrame = Frame(myNotebook, height=200, width=800)
      termsFrame = Frame(myNotebook, height=200, width=800)
      noteFrame = Frame(myNotebook, height=200, width=800)
      documentFrame = Frame(myNotebook, height=200, width=800)
      
      myNotebook.add(invoiceFrame,compound="left", text="Invoice")
      myNotebook.add(recurFrame,compound="left", text="Recurring")
      myNotebook.add(payementFrame,compound="left", text="Payements")
      myNotebook.add(headerFrame,compound="left",  text="Header/Footer")
      myNotebook.add(commentFrame,compound="left",  text="Comments")
      myNotebook.add(termsFrame,compound="left", text="Terms")
      myNotebook.add(noteFrame,compound="left",  text="Private notes")
      myNotebook.add(documentFrame,compound="left",  text="Documents")
      myNotebook.pack(expand = 1, fill ="both") 


      sql_exn_1 = "SELECT extra_cost_name FROM extra_cost_name"
      fbcursor.execute(sql_exn_1)
      ex_data_1 = fbcursor.fetchall()

      global never1_label_1

      labelframe1 = LabelFrame(invoiceFrame,text="",font=("arial",15))
      labelframe1.place(x=1,y=1,width=735,height=170)
      ex_costn_label_1=Label(labelframe1,text="Extra cost name").place(x=2,y=5)
      ex_costn_combo_1=ttk.Combobox(labelframe1, value="",width=20)
      ex_costn_combo_1.place(x=115,y=5)
      ex_costn_combo_1['values'] = ex_data_1
      ex_costn_combo_1.bind("<<ComboboxSelected>>")
      dis_rate_label_1=Label(labelframe1,text="Discount rate").place(x=370,y=5)
      dis_rate_entry_1=Spinbox(labelframe1,width=6,from_=0,to=100,justify=RIGHT)
      dis_rate_entry_1.place(x=460,y=5)
      dis_rate_entry_1.bind('<Button-1>',recalc_dis_1)
      ex_cost_label_1=Label(labelframe1,text="Extra cost").place(x=35,y=35)
      ex_cost_entry_1=Entry(labelframe1,width=10,justify=RIGHT)
      ex_cost_entry_1.place(x=115,y=35)
      ex_cost_entry_1.bind('<KeyRelease>',recalc_exc_1)
      ex_cost_entry_1.delete(0,END)
      ex_cost_entry_1.insert(0,"0")
      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql,)
      comp_data = fbcursor.fetchone()
      if comp_data[12] == "1":
        pass
      elif comp_data[12] == "2":
        tax1_label_1=Label(labelframe1,text="Tax1").place(x=420,y=35)
        tax1_entry_1=Entry(labelframe1,width=7,justify=RIGHT)
        tax1_entry_1.place(x=460,y=35)
        tax1_entry_1.delete(0, END)
        tax1_entry_1.insert(0, comp_data[16])
      elif comp_data[12] == "3":
        tax1_label_1=Label(labelframe1,text="Tax1").place(x=420,y=35)
        tax1_entry_1=Entry(labelframe1,width=7,justify=RIGHT)
        tax1_entry_1.place(x=460,y=35)
        def1_val_1 = tax1ratee.get()
        tax1_entry_1.delete(0,END)
        tax1_entry_1.insert(0,comp_data[16])
        tax2_label_1=Label(labelframe1,text="Tax2").place(x=420,y=65)
        tax2_entry_1=Entry(labelframe1,width=7,justify=RIGHT)
        tax2_entry_1.place(x=460,y=65)
        tax2_entry_1.delete(0, END)
        tax2_entry_1.insert(0, comp_data[19])
      temp_value_1 = ['Professional 1 (logo on left side)','Professional 2 (logo on right side)','Simplified 1 (logo on left side)','Simplified 2 (logo on right side)','Business Classic']
      template_label_1=Label(labelframe1,text="Template").place(x=37,y=70)
      template_entry_1=ttk.Combobox(labelframe1, value="",width=25)
      template_entry_1.place(x=115,y=70)
      template_entry_1['values'] = temp_value_1
      template_entry_1.set(temp_value_1[0])
      sales_per_label_1=Label(labelframe1,text="Sales Person").place(x=25,y=100)
      sales_per_entry_1=Entry(labelframe1,width=18)
      sales_per_entry_1.place(x=115,y=100)
      category_label_1=Label(labelframe1,text="Category").place(x=300,y=100)
      category_entry_1=Entry(labelframe1,width=22)
      category_entry_1.place(x=370,y=100)
      
      statusfrme = LabelFrame(labelframe1,text="Status",font=("arial",15))
      statusfrme.place(x=540,y=0,width=160,height=160)
      draft_label_1=Label(statusfrme, text="Draft",font=("arial", 15, "bold"), fg="grey")
      draft_label_1.place(x=50, y=3)
      email_on_label_1=Label(statusfrme, text="Emailed on:").place(x=10,y=50)
      never1_label_1=Label(statusfrme, text="Never")
      never1_label_1.place(x=80,y=50)
      print_on_label_1=Label(statusfrme, text="Printed on:").place(x=10,y=90)
      never2_label_1=Label(statusfrme, text="Never")
      never2_label_1.place(x=100,y=90)

      recur_labelframe_1 = LabelFrame(recurFrame,text="",font=("arial",15))
      recur_labelframe_1.place(x=1,y=1,width=735,height=170)

      ########### check recurring ###############
      def recur_check_1():
        if checkrecStatus_1.get() == 0:
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
        else:
          recur_period_entry_1['state'] = NORMAL
          recur_month_combo_1['state'] = NORMAL
          recur_nxt_inv_date_1['state'] = NORMAL
          recur_stop_check_1['state'] = NORMAL
          recur_stop_date_1['state'] = NORMAL
          recur_recalc_1['state'] = NORMAL 


      ################## recalculate recurring ################
      def recur_recalculate_1():
        recur_period = recur_period_entry_1.get()
        recur_stop = datetime.today().date()
        if recur_month_combo_1.get() == "Month(s)":
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(recur_stop,"%m-%d-%Y")
            stop_d = datetime.strptime(stop_date,"%m-%d-%Y")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(recur_stop,"%d-%m-%Y")
            stop_d = datetime.strptime(stop_date,"%d-%m-%Y")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_date = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(recur_stop,"%m/%d/%Y")
            stop_d = datetime.strptime(stop_date,"%m/%d/%Y")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(recur_stop,"%d/%m/%Y")
            stop_d = datetime.strptime(stop_date,"%d/%m/%Y")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] == "yyyy/mm/dd":
            stop_date = datetime.strftime(recur_stop,"%Y/%m/%d")
            stop_d = datetime.strptime(stop_date,"%Y/%m/%d")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%Y/%m/%d")
          else:
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(months=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)
        else:
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(recur_stop,"%m-%d-%Y")
            stop_d = datetime.strptime(stop_date,"%m-%d-%Y")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(recur_stop,"%d-%m-%Y")
            stop_d = datetime.strptime(stop_date,"%d-%m-%Y")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_date = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(recur_stop,"%m/%d/%Y")
            stop_d = datetime.strptime(stop_date,"%m/%d/%Y")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(recur_stop,"%d/%m/%Y")
            stop_d = datetime.strptime(stop_date,"%d/%m/%Y")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] == "yyyy/mm/dd":
            stop_date = datetime.strftime(recur_stop,"%Y/%m/%d")
            stop_d = datetime.strptime(stop_date,"%Y/%m/%d")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt_inv = datetime.strftime(n,"%Y/%m/%d")
          else:
            stop_date = datetime.strftime(recur_stop,"%Y-%m-%d")
            stop_d = datetime.strptime(stop_date,"%Y-%m-%d")
            n = stop_d + relativedelta(days=+int(recur_period))
            nxt = datetime.strptime(str(n.date()),"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)

      mdata_1 = ["Month(s)","Day(s)"]



      checkrecStatus_1=IntVar()
      recur_check_btn_1 = Checkbutton(recur_labelframe_1,variable=checkrecStatus_1,text="Recurring",onvalue= 1,offvalue=0,command=recur_check_1)
      recur_check_btn_1.place(x=25,y=20)
      recur_period_label_1 = Label(recur_labelframe_1,text="Recurring period (interval)").place(x=130,y=45)
      recur_period_entry_1 = Spinbox(recur_labelframe_1,width=10,state=DISABLED,from_=1,to=1000)
      recur_period_entry_1.place(x=280,y=45)
      recur_month_combo_1 = ttk.Combobox(recur_labelframe_1,values="",width=15,state=DISABLED)
      recur_month_combo_1.place(x=360,y=45)
      recur_month_combo_1['values'] = mdata_1
      recur_month_combo_1.set(mdata_1[0])
      recur_nxt_inv_label_1 = Label(recur_labelframe_1,text="Next Invoice").place(x=280,y=70)
      if comp_data[10] == "mm-dd-yyyy":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="mm-dd-yyyy")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="mm-dd-yyyy")
      elif comp_data[10] == "dd-mm-yyyy":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd-mm-yyyy")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd-mm-yyyy")
      elif comp_data[10] == "yyyy.mm.dd":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="yyyy.mm.dd")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="yyyy.mm.dd")
      elif comp_data[10] == "mm/dd/yyyy":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="mm/dd/yyyy")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="mm/dd/yyyy")
      elif comp_data[10] == "dd/mm/yyyy":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd/mm/yyyy")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd/mm/yyyy")
      elif comp_data[10] == "dd.mm.yyyy":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd.mm.yyyy")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="dd.mm.yyyy")
      elif comp_data[10] == "yyyy/mm/dd":
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="yyyy/mm/dd")
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED,date_pattern="yyyy/mm/dd")
      else:
        recur_nxt_inv_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED)
        recur_stop_date_1 = DateEntry(recur_labelframe_1,width=20,state=DISABLED)
      
      checkstopStatus_1 = IntVar()
      recur_stop_check_1 = Checkbutton(recur_labelframe_1,variable=checkstopStatus_1,text="Stop recurring after",onvalue=1,offvalue=0,state=DISABLED)
      recur_stop_check_1.place(x=225,y=95)
      recur_nxt_inv_date_1.place(x=360,y=70)
      recur_stop_date_1.place(x=360,y=95)
      recur_recalc_1 = Button(recur_labelframe_1,compound=LEFT,image=recalc,text="Recalculate",width=80,height=12,state=DISABLED,command=recur_recalculate_1)
      recur_recalc_1.place(x=540,y=70)

      pay_labelframe_1 = LabelFrame(payementFrame,text="",font=("arial",15))
      pay_labelframe_1.place(x=1,y=1,width=735,height=170)

      pay_tree_1 = ttk.Treeview(payementFrame,height=6)
      pay_tree_1["columns"] = ["1","2","3","4","5"]
      pay_tree_1.column("#0", width=10)
      pay_tree_1.column("1", width=130)
      pay_tree_1.column("2", width=130)
      pay_tree_1.column("3", width=130)
      pay_tree_1.column("4", width=130)
      pay_tree_1.column("5", width=130)
      pay_tree_1.heading("#0", text="",anchor=W)
      pay_tree_1.heading("1",text="Payment ID")
      pay_tree_1.heading("2",text="Payment date")
      pay_tree_1.heading("3",text="Paid by")
      pay_tree_1.heading("4",text="Description")
      pay_tree_1.heading("5",text="Amount")
      pay_tree_1.place(x=45,y=20)

      pay_plus_1 = Button(payementFrame,image=plus_1,text="",width=20,height=25,command=markinvo_1)
      pay_plus_1.place(x=10,y=20)
      pay_minus_1 = Button(payementFrame,image=minus,text="",width=20,height=25,command=delete_newline_pay_1)
      pay_minus_1.place(x=10,y=55)
      pay_srch_1 = Button(payementFrame,image=photo4,text="",width=20,height=25)
      pay_srch_1.place(x=10,y=90)
      pay_msg_1 = Button(payementFrame,image=photo6,text="",width=20,height=25)
      pay_msg_1.place(x=10,y=125)


      header_labelframe_1 = LabelFrame(headerFrame,text="",font=("arial",15))
      header_labelframe_1.place(x=1,y=1,width=735,height=170)

      header_sql_1 = "SELECT headerandfooter FROM header_and_footer"
      fbcursor.execute(header_sql_1,)
      header_data_1 = fbcursor.fetchall()
      hdata_1 = []
      for i in header_data_1:
        hdata_1.append(i[0])

      

      title_txt_label_1=Label(header_labelframe_1,text="Title text").place(x=50,y=5)
      title_txt_combo_1=ttk.Combobox(header_labelframe_1, value="",width=60)
      title_txt_combo_1.place(x=125,y=5)
      title_txt_combo_1['values'] = hdata_1
      title_txt_combo_1.bind("<<ComboboxSelected>>")
      pageh_txt_label_1=Label(header_labelframe_1,text="Page header text").place(x=2,y=45)
      pageh_txt_combo_1=ttk.Combobox(header_labelframe_1, value=hdata_1,width=60)
      pageh_txt_combo_1.place(x=125,y=45)
      pageh_txt_combo_1.bind("<<ComboboxSelected>>")
      footer_txt_label_1=Label(header_labelframe_1,text="Footer text").place(x=35,y=85)
      footer_txt_combo_1=ttk.Combobox(header_labelframe_1, value=hdata_1,width=60)
      footer_txt_combo_1.place(x=125,y=85)
      footer_txt_combo_1.bind("<<ComboboxSelected>>")

      private_labelframe_1 = LabelFrame(noteFrame,text="",font=("arial",15))
      private_labelframe_1.place(x=1,y=1,width=735,height=170)

      private_label_1=Label(private_labelframe_1,text="Private notes(not shown on invoice/order/estemates)").place(x=10,y=10)
      private_note_txt_1=Text(private_labelframe_1,width=89,height=7)
      private_note_txt_1.place(x=7,y=32)

      term_labelframe_1 = LabelFrame(termsFrame,text="",font=("arial",15))
      term_labelframe_1.place(x=1,y=1,width=735,height=170)

      term_txt_1=Text(term_labelframe_1,width=89,height=9)
      term_txt_1.place(x=7,y=10)


      comment_labelframe_1 = LabelFrame(commentFrame,text="",font=("arial",15))
      comment_labelframe_1.place(x=1,y=1,width=735,height=170)

      comment_txt_1=Text(comment_labelframe_1,width=89,height=9)
      comment_txt_1.place(x=7,y=10)

      doc_labelframe_1 = LabelFrame(documentFrame,text="",font=("arial",15))
      doc_labelframe_1.place(x=1,y=1,width=735,height=170)

      ################### attatch file ###########################
      def attach_file_1():
        global file_1,file_type_1
        file_type_1 = [('png files','*.png'),('jpg files','*.jpg'),('all files','*.*')]
        file_1 = filedialog.askopenfilename(initialdir="/",filetypes=file_type_1)
        shutil.copyfile(file_1, os.getcwd()+'/images/'+file_1.split('/')[-1])
        file_size_1 = convertion_1(os.path.getsize(file_1))
        doc_tree_1.insert(parent='',index='end',iid=file_1.split('/')[-1],text='',values=('',file_1.split('/')[-1],file_size_1))
        

      #################### size convertion of files############################
      def convertion_1(B):
        BYTE = float(B)
        KB = float(1024)
        MB = float(KB**2)

        if BYTE < KB:
          return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
        elif KB <= BYTE < MB:
          return '{0:.2f} KB'.format(BYTE / KB)
        elif MB <= BYTE:
          return '{0:.2f} MB' .format(BYTE / MB)
      ############### delete file #################
      def delete_file_1():
        selected_doc_item_1 = doc_tree_1.selection()[0]
        doc_tree_1.delete(selected_doc_item_1)


      ############## show file ###############

      def show_sel_file_1(event):
        import win32api
        selected_file_1 = doc_tree_1.item(doc_tree_1.focus())["values"][1]
        win32api.ShellExecute(0,"",os.getcwd()+"/images/"+selected_file_1,None,".",0)
        

      doc_plus_btn_1=Button(doc_labelframe_1,image=plus_1,text="",width=20,height=25,command=attach_file_1)
      doc_plus_btn_1.place(x=5,y=10)
      doc_minus_btn_1=Button(doc_labelframe_1,height=25,width=20,text="",image=minus,command=delete_file_1)
      doc_minus_btn_1.place(x=5,y=50)
      doc_txt_label_1=Label(doc_labelframe_1,text="Attached documents or image files.If you attach large email then email taken long time to send").place(x=50,y=10)
      doc_tree_1=ttk.Treeview(doc_labelframe_1, height=5)
      doc_tree_1["columns"]=["1","2","3"]
      doc_tree_1.column("#0", width=20)
      doc_tree_1.column("1", width=130,anchor=CENTER)
      doc_tree_1.column("2", width=380,anchor=CENTER)
      doc_tree_1.column("3", width=130,anchor=CENTER)
      doc_tree_1.heading("#0",text="", anchor=W)
      doc_tree_1.heading("1",text="Attach to Email")
      doc_tree_1.heading("2",text="Filename")
      doc_tree_1.heading("3",text="Filesize")  
      doc_tree_1.place(x=50, y=45)
      doc_tree_1.bind('<Double-Button-1>',show_sel_file_1)

      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql,)
      comp_data = fbcursor.fetchone()

      fir4Frame=Frame(pop_1,height=190,width=210,bg="#f5f3f2")
      fir4Frame.place(x=740,y=520)
      summaryfrme_1 = LabelFrame(fir4Frame,text="Summary",font=("arial",15))
      summaryfrme_1.place(x=0,y=0,width=200,height=170)
      discount_1=Label(summaryfrme_1, text=str(edit_inv_data[15]) + "" + "% Discount")
      discount1_1=Label(summaryfrme_1, text=edit_inv_data[31])
      sub_1=Label(summaryfrme_1, text="Subtotal")
      if comp_data[12] == "1":
        sub_data = 0.0
        for record in add_newline_tree_1.get_children():
          sub_data += float(add_newline_tree_1.item(record,'values')[6])
        sub1_1=Label(summaryfrme_1, text=sub_data - edit_inv_data[31])
      elif comp_data[12] == "2":
        sub_data = 0.0
        for record in add_newline_tree_1.get_children():
          sub_data += float(add_newline_tree_1.item(record,'values')[7])
        sub1_1=Label(summaryfrme_1, text=sub_data - edit_inv_data[31])
      elif comp_data[12] == "3":
        sub_data = 0.0
        for record in add_newline_tree_1.get_children():
          sub_data += float(add_newline_tree_1.item(record,'values')[8])
        sub1_1=Label(summaryfrme_1, text=sub_data - edit_inv_data[31])
      taxl1_1=Label(summaryfrme_1, text="Tax1")
      tax1_1=Label(summaryfrme_1, text=edit_inv_data[16])
      taxl2_1=Label(summaryfrme_1, text="Tax2")
      tax2_1=Label(summaryfrme_1, text=edit_inv_data[36])
      cost_1=Label(summaryfrme_1, text="Extra cost")
      cost1_1=Label(summaryfrme_1, text=edit_inv_data[12])
      invoicetot_1=Label(summaryfrme_1, text="Invoice total")
      invoicetot1_1=Label(summaryfrme_1, text=edit_inv_data[8])
      total_1=Label(summaryfrme_1, text="Total paid")
      total1_1=Label(summaryfrme_1, text=edit_inv_data[9])
      balance_1=Label(summaryfrme_1, text="Balance")
      balance1_1=Label(summaryfrme_1, text=edit_inv_data[10])

      dis_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      sub_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      tax1_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      tax2_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      cost_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      invtot_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      total_symb_1 = Label(summaryfrme_1,text=comp_data[6])
      bal_symb_1 = Label(summaryfrme_1,text=comp_data[6])

      if comp_data[12] == "1":
        if comp_data[6] == "؋":
          dis_symb_1.place(x=170,y=0)
          sub_symb_1.place(x=170,y=21)
          cost_symb_1.place(x=170,y=42)
          invtot_symb_1.place(x=170,y=63)
          total_symb_1.place(x=170,y=84)
          bal_symb_1.place(x=170,y=105)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=112 ,y=0)
          sub_1.place(x=0 ,y=21)
          sub1_1.place(x=112 ,y=21)
          cost_1.place(x=0 ,y=42)
          cost1_1.place(x=112 ,y=42)
          invoicetot_1.place(x=0 ,y=63)
          invoicetot1_1.place(x=112 ,y=63)
          total_1.place(x=0 ,y=84)
          total1_1.place(x=112 ,y=84)
          balance_1.place(x=0 ,y=105)
          balance1_1.place(x=112 ,y=105)
        else:
          dis_symb_1.place(x=112,y=0)
          sub_symb_1.place(x=112,y=21)
          cost_symb_1.place(x=112,y=42)
          invtot_symb_1.place(x=112,y=63)
          total_symb_1.place(x=112,y=84)
          bal_symb_1.place(x=112,y=105)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=140 ,y=0)
          sub_1.place(x=0 ,y=21)
          sub1_1.place(x=140 ,y=21)
          cost_1.place(x=0 ,y=42)
          cost1_1.place(x=140 ,y=42)
          invoicetot_1.place(x=0 ,y=63)
          invoicetot1_1.place(x=140 ,y=63)
          total_1.place(x=0 ,y=84)
          total1_1.place(x=140 ,y=84)
          balance_1.place(x=0 ,y=105)
          balance1_1.place(x=140 ,y=105)
      elif comp_data[12] == "2":
        if comp_data[6] == "؋":
          dis_symb_1.place(x=170,y=0)
          sub_symb_1.place(x=170,y=21)
          tax1_symb_1.place(x=170,y=42)
          cost_symb_1.place(x=170,y=63)
          invtot_symb_1.place(x=170,y=84)
          total_symb_1.place(x=170,y=105)
          bal_symb_1.place(x=170,y=126)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=112 ,y=0)
          sub_1.place(x=0 ,y=21)
          sub1_1.place(x=112 ,y=21)
          taxl1_1.place(x=0 ,y=42)
          tax1_1.place(x=112 ,y=42)
          cost_1.place(x=0 ,y=63)
          cost1_1.place(x=112 ,y=63)
          invoicetot_1.place(x=0 ,y=84)
          invoicetot1_1.place(x=112 ,y=84)
          total_1.place(x=0 ,y=105)
          total1_1.place(x=112 ,y=105)
          balance_1.place(x=0 ,y=126)
          balance1_1.place(x=112 ,y=126)
        else:
          dis_symb_1.place(x=112,y=0)
          sub_symb_1.place(x=112,y=21)
          tax1_symb_1.place(x=112,y=42)
          cost_symb_1.place(x=112,y=63)
          invtot_symb_1.place(x=112,y=84)
          total_symb_1.place(x=112,y=105)
          bal_symb_1.place(x=112,y=126)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=140 ,y=0)
          sub_1.place(x=0 ,y=21)
          sub1_1.place(x=140 ,y=21)
          taxl1_1.place(x=0 ,y=42)
          tax1_1.place(x=140 ,y=42)
          cost_1.place(x=0 ,y=63)
          cost1_1.place(x=140 ,y=63)
          invoicetot_1.place(x=0 ,y=84)
          invoicetot1_1.place(x=140 ,y=84)
          total_1.place(x=0 ,y=105)
          total1_1.place(x=140 ,y=105)
          balance_1.place(x=0 ,y=126)
          balance1_1.place(x=140 ,y=126)
      elif comp_data[12] == "3":
        if comp_data[6] == "؋":
          dis_symb_1.place(x=170,y=0)
          sub_symb_1.place(x=170,y=18)
          tax1_symb_1.place(x=170,y=35)
          tax2_symb_1.place(x=170,y=52)
          cost_symb_1.place(x=170,y=70)
          invtot_symb_1.place(x=170,y=88)
          total_symb_1.place(x=170,y=106)
          bal_symb_1.place(x=170,y=124)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=112 ,y=0)
          sub_1.place(x=0 ,y=18)
          sub1_1.place(x=112 ,y=18)
          taxl1_1.place(x=0 ,y=35)
          tax1_1.place(x=112 ,y=35)
          taxl2_1.place(x=0 ,y=52)
          tax2_1.place(x=112 ,y=52)
          cost_1.place(x=0 ,y=70)
          cost1_1.place(x=112 ,y=70)
          invoicetot_1.place(x=0 ,y=88)
          invoicetot1_1.place(x=112 ,y=88)
          total_1.place(x=0 ,y=106)
          total1_1.place(x=112 ,y=106)
          balance_1.place(x=0 ,y=124)
          balance1_1.place(x=112 ,y=124)
        else:
          dis_symb_1.place(x=110,y=0)
          sub_symb_1.place(x=110,y=18)
          tax1_symb_1.place(x=110,y=35)
          tax2_symb_1.place(x=110,y=52)
          cost_symb_1.place(x=110,y=70)
          invtot_symb_1.place(x=110,y=88)
          total_symb_1.place(x=110,y=106)
          bal_symb_1.place(x=110,y=124)
          discount_1.place(x=0 ,y=0)
          discount1_1.place(x=140 ,y=0)
          sub_1.place(x=0 ,y=18)
          sub1_1.place(x=140 ,y=18)
          taxl1_1.place(x=0 ,y=35)
          tax1_1.place(x=140 ,y=35)
          taxl2_1.place(x=0 ,y=52)
          tax2_1.place(x=140 ,y=52)
          cost_1.place(x=0 ,y=70)
          cost1_1.place(x=140 ,y=70)
          invoicetot_1.place(x=0 ,y=88)
          invoicetot1_1.place(x=140 ,y=88)
          total_1.place(x=0 ,y=106)
          total1_1.place(x=140 ,y=106)
          balance_1.place(x=0 ,y=124)
          balance1_1.place(x=140 ,y=124)

      ############### Line Up ###############
      def inv_lineup_1():
        rows = add_newline_tree_1.selection()
        for row in rows:
          add_newline_tree_1.move(row, add_newline_tree_1.parent(row), add_newline_tree_1.index(row)-1)

      ############### Line Down ###############
      def inv_linedown_1():
        rows = add_newline_tree_1.selection()
        for row in rows:
          add_newline_tree_1.move(row, add_newline_tree_1.parent(row), add_newline_tree_1.index(row)+1)

      fir5Frame=Frame(pop_1,height=38,width=210)
      fir5Frame.place(x=735,y=485)
      btn_linedown_1=Button(fir5Frame, compound="left", text="Line Down",command=inv_lineup_1)
      btn_linedown_1.place(x=75, y=0)
      btn_lineup_1=Button(fir5Frame, compound="left", text="Line Up",command=inv_linedown_1)
      btn_lineup_1.place(x=150, y=0)

      if edit_inv_data[48] == 1 or edit_inv_data[4] == "Void":
        ex_costn_combo_1.delete(0, END)
        ex_costn_combo_1.insert(0, edit_inv_data[11])
        dis_rate_entry_1.delete(0, END)
        dis_rate_entry_1.insert(0, int(edit_inv_data[15]))
        ex_cost_entry_1.delete(0, END)
        ex_cost_entry_1.insert(0, edit_inv_data[12])
        template_entry_1.delete(0, END)
        template_entry_1.insert(0, edit_inv_data[13])
        sales_per_entry_1.delete(0, END)
        sales_per_entry_1.insert(0, edit_inv_data[14])
        category_entry_1.delete(0, END)
        category_entry_1.insert(0, edit_inv_data[17])
        draft_label_1.config(text=edit_inv_data[4])
        ex_costn_combo_1['state'] = DISABLED
        dis_rate_entry_1['state'] = DISABLED
        ex_cost_entry_1['state'] = DISABLED
        if comp_data[12] == "1":
          pass
        elif comp_data[12] == "2":
          tax1_entry_1['state'] = DISABLED
        elif comp_data[12] == "3":
          tax1_entry_1['state'] = DISABLED
          tax2_entry_1['state'] = DISABLED
        template_entry_1['state'] = DISABLED
        btn_linedown_1['state'] = DISABLED
        btn_lineup_1['state'] = DISABLED
      else:
        ex_costn_combo_1.delete(0, END)
        ex_costn_combo_1.insert(0, edit_inv_data[11])
        dis_rate_entry_1.delete(0, END)
        dis_rate_entry_1.insert(0, int(edit_inv_data[15]))
        ex_cost_entry_1.delete(0, END)
        ex_cost_entry_1.insert(0, edit_inv_data[12])
        template_entry_1.delete(0, END)
        template_entry_1.insert(0, edit_inv_data[13])
        sales_per_entry_1.delete(0, END)
        sales_per_entry_1.insert(0, edit_inv_data[14])
        category_entry_1.delete(0, END)
        category_entry_1.insert(0, edit_inv_data[17])
        draft_label_1.config(text=edit_inv_data[4])
      never1_label_1.config(text=edit_inv_data[5])
      never2_label_1.config(text=edit_inv_data[6])
      if edit_inv_data[48] == 1 or edit_inv_data[4] == "Void":
        if edit_inv_data[47] == 0:
          recur_stop_date_1['state'] = NORMAL
          recur_nxt_inv_date_1['state'] = NORMAL
          stop = datetime.today().date()
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(stop,"%m-%d-%Y")
            stop_d = datetime.strptime(stop_date,"%m-%d-%Y")
            nxt_inv = datetime.strftime(stop,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(stop,"%d-%m-%Y")
            stop_d = datetime.strptime(stop_date,"%d-%m-%Y")
            nxt_inv = datetime.strftime(stop,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0}.{1:02}.{2:02}'.format(stop_d.year,stop_d.month,stop_d.day)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(stop,"%m/%d/%Y")
            nxt_inv = datetime.strftime(stop,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(stop,"%d/%m/%Y")
            nxt_inv = datetime.strftime(stop,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0:02}.{1:02}.{2:02}'.format(stop_d.day,stop_d.month,stop_d.year)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] =="yyyy/mm/dd":
            stop_date = datetime.strftime(stop,"%Y/%m/%d")
            nxt_inv = datetime.strftime(stop,"%Y/%m/%d")
          else:
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
          recur_stop_date_1.delete(0,END)
          recur_stop_date_1.insert(0,stop_date)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)
          checkrecStatus_1.set(0)
          recur_check_btn_1['state'] = DISABLED
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
        else:
          checkrecStatus_1.set(1)
          recur_period_entry_1['state'] = NORMAL
          recur_month_combo_1['state'] = NORMAL
          recur_nxt_inv_date_1['state'] = NORMAL
          recur_stop_check_1['state'] = NORMAL
          recur_stop_date_1['state'] = NORMAL
          recur_recalc_1['state'] = NORMAL
          recur_period_entry_1.delete(0, END)
          recur_period_entry_1.insert(0, edit_inv_data[24])
          recur_month_combo_1.delete(0,END)
          recur_month_combo_1.insert(0,edit_inv_data[25])
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%m-%d-%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%d-%m-%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0}.{1:02}.{2:02}'.format(stop_d.year,stop_d.month,stop_d.day)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%m/%d/%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%d/%m/%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0:02}.{1:02}.{2:02}'.format(stop_d.day,stop_d.month,stop_d.year)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] =="yyyy/mm/dd":
            stop_date = datetime.strftime(edit_inv_data[27],"%Y/%m/%d")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%Y/%m/%d")
          else:
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
          recur_stop_date_1.delete(0,END)
          recur_stop_date_1.insert(0,stop_date)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)
          recur_check_btn_1['state'] = DISABLED
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
      else:
        if edit_inv_data[47] == 0:
          recur_stop_date_1['state'] = NORMAL
          recur_nxt_inv_date_1['state'] = NORMAL
          stop = datetime.today().date()
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(stop,"%m-%d-%Y")
            nxt_inv = datetime.strftime(stop,"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(stop,"%d-%m-%Y")
            nxt_inv = datetime.strftime(stop,"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0}.{1:02}.{2:02}'.format(stop_d.year,stop_d.month,stop_d.day)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(stop,"%m/%d/%Y")
            nxt_inv = datetime.strftime(stop,"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(stop,"%d/%m/%Y")
            nxt_inv = datetime.strftime(stop,"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0:02}.{1:02}.{2:02}'.format(stop_d.day,stop_d.month,stop_d.year)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] =="yyyy/mm/dd":
            stop_date = datetime.strftime(stop,"%Y/%m/%d")
            nxt_inv = datetime.strftime(stop,"%Y/%m/%d")
          else:
            s = datetime.strftime(stop,"%Y-%m-%d")
            stop_d = datetime.strptime(s,"%Y-%m-%d")
            stop_date = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
            nxt = datetime.strptime(s,"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(nxt.month,nxt.day,nxt.year % 100)
          recur_stop_date_1.delete(0,END)
          recur_stop_date_1.insert(0,stop_date)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)
          checkrecStatus_1.set(0)
          recur_period_entry_1['state'] = DISABLED
          recur_month_combo_1['state'] = DISABLED
          recur_nxt_inv_date_1['state'] = DISABLED
          recur_stop_check_1['state'] = DISABLED
          recur_stop_date_1['state'] = DISABLED
          recur_recalc_1['state'] = DISABLED
        else:
          checkrecStatus_1.set(1)
          recur_period_entry_1['state'] = NORMAL
          recur_month_combo_1['state'] = NORMAL
          recur_nxt_inv_date_1['state'] = NORMAL
          recur_stop_check_1['state'] = NORMAL
          recur_stop_date_1['state'] = NORMAL
          recur_recalc_1['state'] = NORMAL
          recur_period_entry_1.delete(0, END)
          recur_period_entry_1.insert(0, edit_inv_data[24])
          recur_month_combo_1.delete(0,END)
          recur_month_combo_1.insert(0,edit_inv_data[25])
          if comp_data[10] == "mm-dd-yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%m-%d-%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%m-%d-%Y")
          elif comp_data[10] == "dd-mm-yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%d-%m-%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%d-%m-%Y")
          elif comp_data[10] == "yyyy.mm.dd":
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0}.{1:02}.{2:02}'.format(stop_d.year,stop_d.month,stop_d.day)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0}.{1:02}.{2:02}'.format(nxt.year,nxt.month,nxt.day)
          elif comp_data[10] == "mm/dd/yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%m/%d/%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%m/%d/%Y")
          elif comp_data[10] == "dd/mm/yyyy":
            stop_date = datetime.strftime(edit_inv_data[27],"%d/%m/%Y")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%d/%m/%Y")
          elif comp_data[10] == "dd.mm.yyyy":
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0:02}.{1:02}.{2:02}'.format(stop_d.day,stop_d.month,stop_d.year)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0:02}.{1:02}.{2:02}'.format(nxt.day,nxt.month,nxt.year)
          elif comp_data[10] =="yyyy/mm/dd":
            stop_date = datetime.strftime(edit_inv_data[27],"%Y/%m/%d")
            nxt_inv = datetime.strftime(edit_inv_data[26],"%Y/%m/%d")
          else:
            stop_d = datetime.strptime(edit_inv_data[27],"%Y-%m-%d")
            stop_date = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
            nxt = datetime.strptime(str(edit_inv_data[26]),"%Y-%m-%d")
            nxt_inv = '{0}/{1}/{2:02}'.format(stop_d.month,stop_d.day,stop_d.year % 100)
          recur_stop_date_1.delete(0,END)
          recur_stop_date_1.insert(0,stop_date)
          recur_nxt_inv_date_1.delete(0,END)
          recur_nxt_inv_date_1.insert(0,nxt_inv)


      pay_sql = "SELECT * FROM payments WHERE invoice_number=%s"
      pay_val = (edit_inv_data[1],)
      fbcursor.execute(pay_sql,pay_val)
      pay_data = fbcursor.fetchall()
      count = 0
      for p in pay_data:
        if True:
          pay_tree_1.insert(parent='',index='end',iid=p,text='',values=(p[0],p[1],p[2],p[3],p[4]))
        else:
          pass
      count += 1

      if edit_inv_data[48] == 1 or edit_inv_data[4] == "Void":
        title_txt_combo_1.delete(0,END)
        title_txt_combo_1.insert(0,edit_inv_data[39])
        pageh_txt_combo_1.delete(0,END)
        pageh_txt_combo_1.insert(0,edit_inv_data[40])
        footer_txt_combo_1.delete(0,END)
        footer_txt_combo_1.insert(0,edit_inv_data[41])
        private_note_txt_1.delete("1.0",END)
        private_note_txt_1.insert("1.0",edit_inv_data[45])
        term_txt_1.delete("1.0",END)
        term_txt_1.insert("1.0",edit_inv_data[35])
        comment_txt_1.delete("1.0",END)
        comment_txt_1.insert("1.0",edit_inv_data[44])
        title_txt_combo_1["state"] = DISABLED
        pageh_txt_combo_1["state"] = DISABLED
        footer_txt_combo_1["state"] = DISABLED
        term_txt_1["state"] = DISABLED
        comment_txt_1["state"] = DISABLED
        pay_plus_1['state'] = DISABLED
        pay_minus_1['state'] = DISABLED
        doc_plus_btn_1['state'] = DISABLED
        doc_minus_btn_1['state'] = DISABLED
      else:
        title_txt_combo_1.delete(0,END)
        title_txt_combo_1.insert(0,edit_inv_data[39])
        pageh_txt_combo_1.delete(0,END)
        pageh_txt_combo_1.insert(0,edit_inv_data[40])
        footer_txt_combo_1.delete(0,END)
        footer_txt_combo_1.insert(0,edit_inv_data[41])
        private_note_txt_1.delete("1.0",END)
        private_note_txt_1.insert("1.0",edit_inv_data[45])
        term_txt_1.delete("1.0",END)
        term_txt_1.insert("1.0",edit_inv_data[35])
        comment_txt_1.delete("1.0",END)
        comment_txt_1.insert("1.0",edit_inv_data[44])

      doc_sql = "SELECT * FROM documents WHERE invoice_number=%s"
      doc_val = (edit_inv_data[1],)
      fbcursor.execute(doc_sql,doc_val)
      doc_data = fbcursor.fetchall()

      count = 0 
      for d in doc_data:
        if True:
          file_size_2 = convertion_1(os.path.getsize("images/"+d[6]))
          doc_tree_1.insert(parent='',index='end',iid=d,text='',values=('',d[6],file_size_2))
        else:
          pass
      count += 1

      newline_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
      newline_val = (edit_inv_data[1],)
      fbcursor.execute(newline_sql,newline_val)
      product_details = fbcursor.fetchall()
    
      if comp_data[12] == "1":
        for i in product_details:
          add_newline_tree_1.insert(parent='',index='end',iid=i,text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],i[13]))
          price = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            price += float(add_newline_tree_1.item(i,'values')[6])
          discount_rate = (price*dis_rate)/100
          total_cost += (price - discount_rate) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round((price - discount_rate),2)
          sub1_1.config(text=sub_tot)
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=round(price,2))
      elif comp_data[12] == "2":
        for i in product_details:
          if i[11] == "Yes":
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'Yes',i[13]))
          else:
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'No',i[13]))
          price = 0.0
          p = 0.0
          total_cost = 0.0
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          tx1 = float(tax1_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No":
              p += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[7])
          discount_rate = ((price + p) * dis_rate)/100
          dis_price = (price * dis_rate)/100
          dis_p = (p * dis_rate)/100
          tax1_rate = ((price - dis_price)*tx1)/100
          tx_calc = (price - dis_price) + tax1_rate
          tx_calc1 = p - dis_p
          total_cost += (tx_calc + tx_calc1) + exc 
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round(tax1_rate,2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4])
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=round((price + p),2))
      elif comp_data[12] == "3":
        for i in product_details:
          if i[11] == "Yes" and i[12] == "Yes":
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'Yes','Yes',i[13]))
          elif i[11] == "Yes" and i[12] == "No":
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'Yes','No',i[13]))
          elif i[11] == "No" and i[12] == "Yes":
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'No','Yes',i[13]))
          else:
            add_newline_tree_1.insert(parent='',index='end',text='',values=(i[5], i[6], i[7],i[8],i[9],i[10],'No','No',i[13]))
          price = 0.0
          p1 = 0.0
          p2 = 0.0
          p3 = 0.0
          total_cost = 0.0
          tx1 = float(tax1_entry_1.get())
          tx2 = float(tax2_entry_1.get())
          exc = float(ex_cost_entry_1.get())
          dis_rate = float(dis_rate_entry_1.get())
          for i in add_newline_tree_1.get_children():
            if add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "No":
              p1 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "Yes" and add_newline_tree_1.item(i,'values')[7] == "No":
              p2 += float(add_newline_tree_1.item(i,'values')[3])
            elif add_newline_tree_1.item(i,'values')[6] == "No" and add_newline_tree_1.item(i,'values')[7] == "Yes":
              p3 += float(add_newline_tree_1.item(i,'values')[3])
            else:
              price += float(add_newline_tree_1.item(i,'values')[8])
          discount_rate = ((p1 + p2 + p3 + price) * dis_rate)/100
          dis_p2 = (p2 * dis_rate)/100
          tax1_rate = ((p2 - dis_p2) * tx1)/100
          dis_price = (price * dis_rate)/100
          tax2_rate = ((price - dis_price) * tx1)/100
          tax3_rate = ((price - dis_price) * tx2)/100
          dis_p3= (p3 * dis_rate)/100
          tax4_rate = ((p3 - dis_p3) * tx2)/100
          dis_p4 = (p1 * dis_rate)/100
          tx_calc1 = (p2 - dis_p2) + tax1_rate
          tx_calc2 = (price - dis_price) + tax2_rate + tax3_rate
          tx_calc3 = (p3 - dis_p3) + tax4_rate
          tx_calc4 = (p1 - dis_p4)
          total_cost += (tx_calc1 + tx_calc2 + tx_calc3 + tx_calc4) + exc
          discount_1.config(text= str(dis_rate) + "" +"% Discount")
          discount1_1.config(text=round(discount_rate,2))
          sub_tot = round(((price + p1 + p2 + p3) - discount_rate),2)
          sub1_1.config(text=sub_tot)
          tax1_1.config(text=round((tax1_rate + tax2_rate),2))
          tax2_1.config(text=round((tax3_rate + tax4_rate),2))
          cost1_1.config(text=round(exc,2))
          invoicetot1_1.config(text=round(total_cost,2))
          tot_paid = 0.0
          for tp in pay_tree_1.get_children():
            tot_paid += float(pay_tree_1.item(tp,'values')[4]) 
          total1_1.config(text=round(tot_paid,2))
          bal = round((total_cost - tot_paid),2)
          balance1_1.config(text=bal)
          totalprice_view_1.config(text=round((price + p1 + p2 + p3),2))

      if draft_label_1['text'] == "Void":
        select_customer_btn_1['state'] = DISABLED
        add_newline_btn_1['state'] = DISABLED
        del_line_item_btn_1['state'] = DISABLED
        mark_inv_paid_1['state'] = DISABLED
        void_invoice_1['state'] = DISABLED
        save_invoice_1['state'] = DISABLED
        inv_combo_e1_1['state'] = DISABLED
        inv_addr_e2_1['state'] = DISABLED
        inv_shipto_e3_1['state'] = DISABLED
        inv_addr_e4_1['state'] = DISABLED
        inv_email_e5_1['state'] = DISABLED
        inv_sms_e6_1['state'] = DISABLED
        inv_number_entry_1['state'] = DISABLED
        inv_date_entry_1['state'] = DISABLED
        inv_duedate_entry_1['state'] = DISABLED
        inv_terms_combo_1['state'] = DISABLED
        inv_ref_entry_1['state'] = DISABLED
        ex_costn_combo_1['state'] = DISABLED
        dis_rate_entry_1['state'] = DISABLED
        ex_cost_entry_1['state'] = DISABLED
        if comp_data[12] == "1":
          pass
        elif comp_data[12] == "2":
          tax1_entry_1['state'] = DISABLED
        elif comp_data[12] == "3":
          tax1_entry_1['state'] = DISABLED
          tax2_entry_1['state'] = DISABLED
        template_entry_1['state'] = DISABLED
        recur_check_btn_1['state'] = DISABLED
        recur_period_entry_1['state'] = DISABLED
        recur_month_combo_1['state'] = DISABLED
        recur_nxt_inv_date_1['state'] = DISABLED
        recur_stop_check_1['state'] = DISABLED
        recur_stop_date_1['state'] = DISABLED
        recur_recalc_1['state'] = DISABLED
        pay_plus_1['state'] = DISABLED
        pay_minus_1['state'] = DISABLED
        title_txt_combo_1['state'] = DISABLED
        pageh_txt_combo_1['state'] = DISABLED
        footer_txt_combo_1['state'] = DISABLED
        term_txt_1['state'] = DISABLED
        comment_txt_1['state'] = DISABLED
        doc_plus_btn_1['state'] = DISABLED
        doc_minus_btn_1['state'] = DISABLED
      else:
        pass

  ####################### End edit/view invoice ##################

    # def property1():
    #   propert=Toplevel()
    #   propert.title("Microsoft Print To PDF Advanced Document Settings")
    #   propert.geometry("670x500+240+150")

    #   def property2():
    #     propert1=Toplevel()
    #     propert1.title("Microsoft Print To PDF Advanced Document Settings")
    #     propert1.geometry("670x500+240+150")

    #     name=Label(propert1, text="Microsoft Print To PDF Advanced Document Settings").place(x=10, y=5)
    #     paper=Label(propert1, text="Paper/Output").place(x=30, y=35)
    #     size=Label(propert1, text="Paper size").place(x=55, y=65)
    #     n = StringVar()
    #     search = ttk.Combobox(propert1, width = 15, textvariable = n )
    #     search['values'] = ('letter')
    #     search.place(x=150,y=65)
    #     search.current(0)
    #     copy=Label(propert1, text="Copy count:").place(x=55, y=95)

    #     okbtn=Button(propert1,compound = LEFT,image=tick , text="Ok", width=60).place(x=460, y=450)
    #     canbtn=Button(propert1,compound = LEFT,image=cancel, text="Cancel", width=60).place(x=570, y=450)
        
        


    #   style = ttk.Style()
    #   style.theme_use('default')
    #   style.configure('TNotebook.Tab', background="#999999", padding=5)
    #   property_Notebook = ttk.Notebook(propert)
    #   property_Frame = Frame(property_Notebook, height=500, width=670)
    #   property_Notebook.add(property_Frame, text="Layout")
    #   property_Notebook.place(x=0, y=0)

    #   name=Label(property_Frame, text="Orientation:").place(x=10, y=5)
    #   n = StringVar()
    #   search = ttk.Combobox(property_Frame, width = 23, textvariable = n )
    #   search['values'] = ('Portrait')
    #   search.place(x=10,y=25)
    #   search.current(0)

    #   text=Text(property_Frame,width=50).place(x=250, y=5,height=350)

    #   btn=Button(property_Frame, text="Advanced",command=property2).place(x=550, y=380)
    #   btn=Button(property_Frame,compound = LEFT,image=tick  ,text="OK", width=60,).place(x=430, y=420)
    #   btn=Button(property_Frame,compound = LEFT,image=cancel , text="Cancel", width=60,).place(x=550, y=420)     


      
    # if(False):
    #     messagebox.showwarning("FBilling Revelution 2020", "Customer is required, Please select customer for this invoice\nbefore printing")
    # elif(False):
    #     messagebox.showinfo("FBilling Revelution 2020", "Print job has been completed.")
    # else:
    #     print1=Toplevel()
    #     print1.title("Print")
    #     print1.geometry("670x400+240+150")
        
    #     printerframe=LabelFrame(print1, text="Printer", height=80, width=650)
    #     printerframe.place(x=7, y=5)      
    #     name=Label(printerframe, text="Name:").place(x=10, y=5)
    #     e1= ttk.Combobox(printerframe, width=40).place(x=70, y=5)
    #     where=Label(printerframe, text="Where:").place(x=10, y=30)
    #     printocheckvar=IntVar()
    #     printochkbtn=Checkbutton(printerframe,text="Print to file",variable=printocheckvar,onvalue=1,offvalue=0,height=1,width=10)
    #     printochkbtn.place(x=450, y=30)
    #     btn=Button(printerframe, text="Properties", width=10,command=property1).place(x=540, y=5)

    #     pageslblframe=LabelFrame(print1, text="Pages", height=140, width=320)
    #     pageslblframe.place(x=10, y=90)
    #     radvar=IntVar()
    #     radioall=Radiobutton(pageslblframe, text="All", variable=radvar, value="1").place(x=10, y=5)
    #     radiocpage=Radiobutton(pageslblframe, text="Current Page", variable=radvar, value="2").place(x=10, y=25)
    #     radiopages=Radiobutton(pageslblframe, text="Pages: ", variable=radvar, value="3").place(x=10, y=45)
    #     pagecountentry = Entry(pageslblframe, width=23).place(x=80, y=47)
    #     pageinfolabl=Label(pageslblframe, text="Enter page numbers and/or page ranges\nseperated by commas. For example:1,3,5-12")
    #     pageinfolabl.place(x=5, y=75)

    #     copylblframe=LabelFrame(print1, text="Copies", height=140, width=320)
    #     copylblframe.place(x=335, y=90)
    #     nolabl=Label(copylblframe, text="Number of copies").place(x=5, y=5)      
    #     noentry = Entry(copylblframe, width=18).place(x=130, y=5)      
    #     one=Frame(copylblframe, width=30, height=40, bg="black").place(x=20, y=40)     
    #     two=Frame(copylblframe, width=30, height=40, bg="grey").place(x=15, y=45)     
    #     three=Frame(copylblframe, width=30, height=40, bg="white").place(x=10, y=50)      
    #     four=Frame(copylblframe, width=30, height=40, bg="black").place(x=80, y=40)      
    #     fiv=Frame(copylblframe, width=30, height=40, bg="grey").place(x=75, y=45)      
    #     six=Frame(copylblframe, width=30, height=40, bg="white").place(x=70, y=50)      
    #     collatecheckvar=IntVar()
    #     collatechkbtn=Checkbutton(copylblframe,text="Collate",variable=collatecheckvar,onvalue=1,offvalue=0,height=1,width=10)
    #     collatechkbtn.place(x=130, y=70)

    #     othrlblframe=LabelFrame(print1, text="Other", height=120, width=320)
    #     othrlblframe.place(x=10, y=235)
    #     printlb=Label(othrlblframe, text="Print").place(x=5, y=0)
    #     dropprint = ttk.Combobox(othrlblframe, width=23).place(x=80, y=0)
    #     orderlb=Label(othrlblframe, text="Order").place(x=5, y=25)
    #     dropord = ttk.Combobox(othrlblframe, width=23).place(x=80, y=25)
    #     duplexlb=Label(othrlblframe, text="Duplex").place(x=5, y=50)
    #     droplex = ttk.Combobox(othrlblframe, width=23).place(x=80, y=50)

    #     prmodelblframe=LabelFrame(print1, text="Print mode", height=120, width=320)
    #     prmodelblframe.place(x=335, y=235)
    #     dropscal = ttk.Combobox(prmodelblframe, width=30).place(x=5, y=5)
    #     poslb=Label(prmodelblframe, text="Print on sheet").place(x=5, y=35)
    #     droppos = ttk.Combobox(prmodelblframe, width=10).place(x=155, y=35)

    #     okbtn=Button(print1,compound = LEFT,image=tick , text="Ok", width=60).place(x=460, y=370)
    #     canbtn=Button(print1,compound = LEFT,image=cancel, text="Cancel", width=60).place(x=570, y=370)
        

  #sms notification order
    
  def sms():
    send_SMS=Toplevel()
    send_SMS.geometry("700x480+240+150")
    send_SMS.title("Send SMS notification")

    style = ttk.Style()
    style.theme_use('default')
    style.configure('TNotebook.Tab', background="#999999", padding=5)
    sms_Notebook = ttk.Notebook(send_SMS)
    SMS_Notification = Frame(sms_Notebook, height=470, width=700)
    SMS_Service_Account = Frame(sms_Notebook, height=470, width=700)
    sms_Notebook.add(SMS_Notification, text="SMS Notification")
    sms_Notebook.add(SMS_Service_Account, text="SMS Service Account")
    sms_Notebook.place(x=0, y=0)

    numlbel=Label(SMS_Notification, text="SMS number or comma seperated SMS number list(Please start each SMS number with the country code)")
    numlbel.place(x=10, y=10)
    numentry=Entry(SMS_Notification, width=92).place(x=10, y=30)
    stexbel=Label(SMS_Notification, text="SMS Text").place(x=10, y=60)
    stex=Entry(SMS_Notification, width=40).place(x=10, y=85,height=120)
    
    dclbel=Label(SMS_Notification, text="Double click to insert into text")
    dclbel.place(x=410, y=60)
    dcl=Entry(SMS_Notification, width=30)
    dcl.place(x=400, y=85,height=200)
    
    smstype=LabelFrame(SMS_Notification, text="SMS message type", width=377, height=60)
    smstype.place(x=10, y=223)
    snuvar=IntVar()
    normal_rbtn=Radiobutton(smstype, text="Normal SMS(160 chars)", variable=snuvar, value=1)
    normal_rbtn.place(x=5, y=5)
    unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)", variable=snuvar, value=2)
    unicode_rbtn.place(x=190, y=5)
    tiplbf=LabelFrame(SMS_Notification, text="Tips", width=680, height=120)
    tiplbf.place(x=10, y=290)
    tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="Always start the SMS nymber with the country code. Do not use the + sign at the beginning(example\nUS number:8455807546). Do not use any special characters in your normal SMS text. Please use the\nstndard SMS characters or the English alphabet and numbers only. Otherwise the SMS will be\nunreadable or undeliverable. If you need to enter international characters, accents,email address, or\nspecial characters to the SMS text field then choose the Unicode SMS format.")
    tiplabl.place(x=5, y=5)

    btn1=Button(SMS_Notification, width=20, text="Send SMS notification").place(x=10, y=420)
    btn2=Button(SMS_Notification, width=25, text="Confirm SMS cost before sending").place(x=280, y=420)
    btn3=Button(SMS_Notification, width=15, text="Cancel").place(x=550, y=420)
    

    smstype=LabelFrame(SMS_Service_Account, text="Select the notification service provider", width=670, height=65)
    smstype.place(x=10, y=5)
    snumvar=IntVar()
    normal_rbtn=Radiobutton(smstype,text="BULKSMS(www.bulksms.com)",variable=snumvar,value=1,)
    normal_rbtn.place(x=5, y=5)
    unicode_rbtn=Radiobutton(smstype, text="Unicode SMS(70 chars)-Recommended", variable=snumvar, value=2)
    unicode_rbtn.place(x=290, y=5)

    sms1type=LabelFrame(SMS_Service_Account, text="Your BULKSMS.COM Account", width=670, height=100)
    sms1type.place(x=10, y=80)
    name=Label(sms1type, text="Username").place(x=10, y=5)
    na=Entry(sms1type, width=20).place(x=100, y=5)
    password=Label(sms1type, text="Password").place(x=10, y=45)
    pas=Entry(sms1type, width=20).place(x=100, y=45)
    combo=Label(sms1type, text="Route").place(x=400, y=5)
    n = StringVar()
    combo1 = ttk.Combobox(sms1type, width = 20, textvariable = n ).place(x=450,y=5)
    btn1=Button(sms1type, width=10, text="Save settings").place(x=550, y=45)

    
    tiplbf=LabelFrame(SMS_Service_Account, text="Terms of service", width=680, height=250)
    tiplbf.place(x=10, y=190)
    tiplabl=Label(tiplbf,justify=LEFT,fg="red",  text="The SMS notification service is not free.This service costs you creadit.You must have your own account\nat BULKSMS.COM and you need to have sufficient creadit and an active internet connection to use\nthis feature.Please review all fields in this form for accuracy")
    tiplabl.place(x=0, y=5)
    tiplabl1=Label(tiplbf,justify=LEFT,fg="black",  text="visit www.bulksms.com website to create your own account.please make sure the BULKSMS .COM\n service works well in your country before you busy creadit")
    tiplabl1.place(x=0, y=60)
    tiplabl2=Label(tiplbf,justify=LEFT,fg="black",  text="Our SMS notification tool comes without any warranty.our software only forwards your SMS message\nthe BULKSMS API server .The BULKSMS API server will try to sent SMS message your recipient")
    tiplabl2.place(x=0, y=100)
    tiplabl3=Label(tiplbf,justify=LEFT,fg="red",  text="Please note that you access and use the SMS notification tool your own risk.F-Billing software is not\nresponsible for any type of loss or damage or undelivered SMS massage which you may as a result\nof accessing and using the SMS notification service.")
    tiplabl3.place(x=0, y=140)
    checkvar1=IntVar()
    chkbtn1=Checkbutton(tiplbf,text="I have read and agree to the terms of service above",variable=checkvar1,onvalue=1,offvalue=0).place(x=70, y=200)  



  #print preview invoice
  def printpreview():
    if not inv_tree.selection():
        messagebox.showwarning("F-Billing Revolution","No line selected.\nSelect a line before printing.")
    else:
      prev_invo = Toplevel()
      prev_invo.title("Preview Invoice")
      p2 = PhotoImage(file = "images/fbicon.png")
      prev_invo.iconphoto(False, p2)
      prev_invo.geometry("1360x730+0+0")
      inv_tree_prev = inv_tree.item(inv_tree.focus())["values"][1]
      prev_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
      prev_val = (inv_tree_prev,)
      fbcursor.execute(prev_sql,prev_val)
      prev_data = fbcursor.fetchone()
      if prev_data[13] == 'Professional 1 (logo on left side)':
        frame = Frame(prev_invo, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=5,y=30)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
        
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        
        canvas.config(width=1315,height=640)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
        inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_title_canvas.config(text=prev_data[39],anchor="center",bg="white")
        canvas.create_window(637, 50,window=inv_title_canvas)

        try:
          image = Image.open("images/"+comp_data[13])
          resize_image = image.resize((250, 125))
          logo_img = ImageTk.PhotoImage(resize_image)
          b2 = Label(canvas,image=logo_img, height=125, width=250,)
          b2.photo = logo_img
          canvas.create_window(410, 155,window=b2)
        except:
          pass
        
        canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
        canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
        canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
        canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
        inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_num_canvas.config(text=prev_data[1],anchor="w")
        canvas.create_window(548, 250,window=inv_num_canvas)
        canvas.create_text(465, 270, text=prev_data[2], fill="black", font=('Helvetica 11'))
        canvas.create_text(465, 290, text=prev_data[3], fill="black", font=('Helvetica 11'))
        inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_terms_canvas.config(text=prev_data[42],anchor="w")
        canvas.create_window(548, 310,window=inv_terms_canvas)
        inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_ref_canvas.config(text=prev_data[43],anchor="w")
        canvas.create_window(548, 330,window=inv_ref_canvas) 
        
        canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
        comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
        comp_addr_canvas.insert("1.0",comp_data[2])
        comp_addr_canvas.tag_configure("tag_name", justify='right')
        comp_addr_canvas.tag_add("tag_name", "1.0", "end")
        comp_addr_canvas.config(state=DISABLED)
        canvas.create_window(882, 165,window=comp_addr_canvas)
        inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
        inv_stax_canvas.config(text=comp_data[4],anchor="e")
        canvas.create_window(865, 220,window=inv_stax_canvas)
        canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
        
        canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
        inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_canv_name.config(text=prev_data[18],anchor="w",bg="white")
        canvas.create_window(419, 380,window=inv_canv_name)
        inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_addr_canvas.insert("1.0",prev_data[19])
        inv_addr_canvas.config(state=DISABLED)
        canvas.create_window(405, 425, window=inv_addr_canvas)
        canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_ship_canv_lbl.config(text=prev_data[20],anchor="w",bg="white")
        canvas.create_window(751, 380, window=inv_ship_canv_lbl)
        inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_ship_addr_canvas.insert("1.0",prev_data[21])
        inv_ship_addr_canvas.config(state=DISABLED)
        canvas.create_window(736, 425,window=inv_ship_addr_canvas)

        inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_header_canvas.config(text=prev_data[40],anchor="center",bg="white")
        canvas.create_window(637, 452,window=inv_header_canvas)
        
        s = ttk.Style()
        s.configure('Treeview.Heading', background='',State='DISABLE')
        inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
        inv_prev_tree["columns"] = ["1","2","3","4","5"]
        inv_prev_tree.column("#0",width=1)
        inv_prev_tree.column("1",width=100,anchor=CENTER)
        inv_prev_tree.column("2",width=343,anchor=CENTER)
        inv_prev_tree.column("3",width=80,anchor=CENTER)
        inv_prev_tree.column("4",width=90,anchor=CENTER)
        inv_prev_tree.column("5",width=80,anchor=CENTER)
        inv_prev_tree.heading("#0",text="")
        inv_prev_tree.heading("1",text="ID/SKU")
        inv_prev_tree.heading("2",text="Product/Service - Description")
        inv_prev_tree.heading("3",text="Quantity")
        inv_prev_tree.heading("4",text="Unit Price")
        inv_prev_tree.heading("5",text="Price")
        window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

        currency_sql = "SELECT currencysign,currsignplace FROM company"
        fbcursor.execute(currency_sql,)
        currency_symb = fbcursor.fetchone()

        storing_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        storing_val = (prev_data[1],)
        fbcursor.execute(storing_sql,storing_val)
        storing_data = fbcursor.fetchall()
        
        for record in storing_data:
          inv_prev_tree.insert(parent='', index='end',text='', values=(record[5],record[6] + "  -  " + record[7],record[9],record[8],record[13]))
        

        if not comp_data:
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "1":
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "2":
          canvas.create_line(980, 723, 980, 898 )
          canvas.create_line(720, 723, 720, 898 )
          canvas.create_line(860, 723, 860, 898 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
        elif comp_data[12] == "3":
          canvas.create_line(980, 723, 980, 923 )
          canvas.create_line(720, 723, 720, 923 )
          canvas.create_line(860, 723, 860, 923 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )
          canvas.create_line(980, 923, 720, 923 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0]+str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)

        inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
        bg="white",cursor="arrow",bd=0)
        inv_prev_comments.insert("1.0",prev_data[44])
        inv_prev_comments.config(state=DISABLED)
        canvas.create_window(635, 980,window=inv_prev_comments)
        
        canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(290, 1090, 982, 1090)

        inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
        inv_prev_terms.insert("1.0",prev_data[35])
        inv_prev_terms.tag_configure("tag_name", justify='left')
        inv_prev_terms.tag_add("tag_name", "1.0", "end")
        inv_prev_terms.config(state=DISABLED)
        canvas.create_window(642, 1125,window=inv_prev_terms)
        canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
        inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_prev_salesp.config(text=prev_data[14],anchor="w",bg="white")
        canvas.create_window(502, 1165, window = inv_prev_salesp)
        inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_footer_canvas.config(text=prev_data[41],anchor="w",bg="white")
        canvas.create_window(413, 1185,window=inv_footer_canvas)
    #----------------Professional 2 (logo on right side)------------------
      elif prev_data[13] == 'Professional 2 (logo on right side)':
        frame = Frame(prev_invo, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=5,y=30)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
        
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        
        canvas.config(width=1315,height=640)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
        inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_title_canvas.config(text=prev_data[39],anchor="center",bg="white")
        canvas.create_window(637, 50,window=inv_title_canvas)

        try:
          image = Image.open("images/"+comp_data[13])
          resize_image = image.resize((250, 125))
          logo_img = ImageTk.PhotoImage(resize_image)
          b2 = Label(canvas,image=logo_img, height=125, width=250,)
          b2.photo = logo_img
          canvas.create_window(860, 155,window=b2)
        except:
          pass
        
        canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
        canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
        canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
        canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
        inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_num_canvas.config(text=prev_data[1],anchor="w")
        canvas.create_window(918, 250,window=inv_num_canvas)
        canvas.create_text(856, 270, text=prev_data[2], fill="black", font=('Helvetica 11'))
        canvas.create_text(856, 290, text=prev_data[3], fill="black", font=('Helvetica 11'))
        inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_terms_canvas.config(text=prev_data[42],anchor="w")
        canvas.create_window(918, 310,window=inv_terms_canvas)
        inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_ref_canvas.config(text=prev_data[43],anchor="w")
        canvas.create_window(918, 330,window=inv_ref_canvas)
        
        canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
        comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
        comp_addr_canvas.insert("1.0",comp_data[2])
        comp_addr_canvas.tag_configure("tag_name", justify='left')
        comp_addr_canvas.tag_add("tag_name", "1.0", "end")
        comp_addr_canvas.config(state=DISABLED)
        canvas.create_window(392, 165,window=comp_addr_canvas)
        inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg='white')
        inv_stax_canvas.config(text=comp_data[4],anchor="w")
        canvas.create_window(405, 220,window=inv_stax_canvas)
        canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
        
        canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
        inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_canv_name.config(text=prev_data[18],anchor="w",bg="white")
        canvas.create_window(409, 370,window=inv_canv_name)
        inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_addr_canvas.insert("1.0",prev_data[19])
        inv_addr_canvas.config(state=DISABLED)
        canvas.create_window(395, 415, window=inv_addr_canvas)
        canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_ship_canv_lbl.config(text=prev_data[20],anchor="w",bg="white")
        canvas.create_window(751, 370, window=inv_ship_canv_lbl)
        inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_ship_addr_canvas.insert("1.0",prev_data[21])
        inv_ship_addr_canvas.config(state=DISABLED)
        canvas.create_window(736, 415,window=inv_ship_addr_canvas)

        inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_header_canvas.config(text=prev_data[40],anchor="center",bg="white")
        canvas.create_window(637, 452,window=inv_header_canvas)
        
        s = ttk.Style()
        s.configure('Treeview.Heading', background='',State='DISABLE')
        inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
        inv_prev_tree["columns"] = ["1","2","3","4","5"]
        inv_prev_tree.column("#0",width=1)
        inv_prev_tree.column("1",width=100,anchor=CENTER)
        inv_prev_tree.column("2",width=343,anchor=CENTER)
        inv_prev_tree.column("3",width=80,anchor=CENTER)
        inv_prev_tree.column("4",width=90,anchor=CENTER)
        inv_prev_tree.column("5",width=80,anchor=CENTER)
        inv_prev_tree.heading("#0",text="")
        inv_prev_tree.heading("1",text="ID/SKU")
        inv_prev_tree.heading("2",text="Product/Service - Description")
        inv_prev_tree.heading("3",text="Quantity")
        inv_prev_tree.heading("4",text="Unit Price")
        inv_prev_tree.heading("5",text="Price")
        window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

        currency_sql = "SELECT currencysign,currsignplace FROM company"
        fbcursor.execute(currency_sql,)
        currency_symb = fbcursor.fetchone()
        
        storing_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        storing_val = (prev_data[1],)
        fbcursor.execute(storing_sql,storing_val)
        storing_data = fbcursor.fetchall()
        
        for record in storing_data:
          inv_prev_tree.insert(parent='', index='end',text='', values=(record[5],record[6] + "  -  " + record[7],record[9],record[8],record[13]))
        

        if not comp_data:
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "1":
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "2":
          canvas.create_line(980, 723, 980, 898 )
          canvas.create_line(720, 723, 720, 898 )
          canvas.create_line(860, 723, 860, 898 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
        elif comp_data[12] == "3":
          canvas.create_line(980, 723, 980, 923 )
          canvas.create_line(720, 723, 720, 923 )
          canvas.create_line(860, 723, 860, 923 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )
          canvas.create_line(980, 923, 720, 923 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0]+str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)

        inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
        bg="white",cursor="arrow",bd=0)
        inv_prev_comments.insert("1.0",prev_data[44])
        inv_prev_comments.config(state=DISABLED)
        canvas.create_window(635, 980,window=inv_prev_comments)
        
        canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(290, 1090, 982, 1090)
        
        inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
        inv_prev_terms.insert("1.0",prev_data[35])
        inv_prev_terms.tag_configure("tag_name", justify='left')
        inv_prev_terms.tag_add("tag_name", "1.0", "end")
        inv_prev_terms.config(state=DISABLED)
        canvas.create_window(642, 1125,window=inv_prev_terms)
        canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
        inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_prev_salesp.config(text=prev_data[14],anchor="w",bg="white")
        canvas.create_window(502, 1165, window = inv_prev_salesp)
        inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_footer_canvas.config(text=prev_data[41],anchor="w",bg="white")
        canvas.create_window(413, 1185,window=inv_footer_canvas)
    #----------------Simplified 1 (logo on left side)------------------ 
      elif prev_data[13] == 'Simplified 1 (logo on left side)':
        frame = Frame(prev_invo, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=5,y=30)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
        
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        
        canvas.config(width=1315,height=640)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
        inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_title_canvas.config(text=prev_data[39],anchor="center",bg="white")
        canvas.create_window(637, 50,window=inv_title_canvas)

        try:
          image = Image.open("images/"+comp_data[13])
          resize_image = image.resize((250, 125))
          logo_img = ImageTk.PhotoImage(resize_image)
          b2 = Label(canvas,image=logo_img, height=125, width=250,)
          b2.photo = logo_img
          canvas.create_window(410, 155,window=b2)
        except:
          pass
        
        canvas.create_text(310, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
        canvas.create_text(320, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
        canvas.create_text(313, 290, text="Due date", fill="black", font=('Helvetica 11'))
        canvas.create_text(304, 310, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(323, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
        inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_num_canvas.config(text=prev_data[1],anchor="w")
        canvas.create_window(548, 250,window=inv_num_canvas)
        canvas.create_text(465, 270, text=prev_data[2], fill="black", font=('Helvetica 11'))
        canvas.create_text(465, 290, text=prev_data[3], fill="black", font=('Helvetica 11'))
        inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_terms_canvas.config(text=prev_data[42],anchor="w")
        canvas.create_window(548, 310,window=inv_terms_canvas)
        inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=30,bg='white')
        inv_ref_canvas.config(text=prev_data[43],anchor="w")
        canvas.create_window(548, 330,window=inv_ref_canvas)   
        
        canvas.create_text(896, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
        comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
        comp_addr_canvas.insert("1.0",comp_data[2])
        comp_addr_canvas.tag_configure("tag_name", justify='right')
        comp_addr_canvas.tag_add("tag_name", "1.0", "end")
        comp_addr_canvas.config(state=DISABLED)
        canvas.create_window(882, 165,window=comp_addr_canvas)
        inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
        inv_stax_canvas.config(text=comp_data[4],anchor="e")
        canvas.create_window(865, 220,window=inv_stax_canvas)
        canvas.create_text(951, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(935, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
        
        canvas.create_text(325, 360, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
        inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_canv_name.config(text=prev_data[18],anchor="w",bg="white")
        canvas.create_window(419, 380,window=inv_canv_name)
        inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_addr_canvas.insert("1.0",prev_data[19])
        inv_addr_canvas.config(state=DISABLED)
        canvas.create_window(405, 425, window=inv_addr_canvas)
        canvas.create_text(650, 360, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_ship_canv_lbl.config(text=prev_data[20],anchor="w",bg="white")
        canvas.create_window(751, 380, window=inv_ship_canv_lbl)
        inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_ship_addr_canvas.insert("1.0",prev_data[21])
        inv_ship_addr_canvas.config(state=DISABLED)
        canvas.create_window(736, 425,window=inv_ship_addr_canvas)

        inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_header_canvas.config(text=prev_data[40],anchor="center",bg="white")
        canvas.create_window(637, 452,window=inv_header_canvas)
        
        s = ttk.Style()
        s.configure('Treeview.Heading', background='',State='DISABLE')
        inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
        inv_prev_tree["columns"] = ["1","2","3"]
        inv_prev_tree.column("#0",width=1)
        inv_prev_tree.column("1",width=394,anchor=CENTER)
        inv_prev_tree.column("2",width=150,anchor=CENTER)
        inv_prev_tree.column("3",width=150,anchor=CENTER)
        inv_prev_tree.heading("#0",text="")
        inv_prev_tree.heading("1",text="Product/Service - Description")
        inv_prev_tree.heading("2",text="Quantity")
        inv_prev_tree.heading("3",text="Price")
        window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

        currency_sql = "SELECT currencysign,currsignplace FROM company"
        fbcursor.execute(currency_sql,)
        currency_symb = fbcursor.fetchone()
    
        storing_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        storing_val = (prev_data[1],)
        fbcursor.execute(storing_sql,storing_val)
        storing_data = fbcursor.fetchall()
        
        for record in storing_data:
          inv_prev_tree.insert(parent='', index='end',text='', values=(record[6] + "  -  " + record[7],record[9],record[13]))

        if not comp_data:
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "1":
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "2":
          canvas.create_line(980, 723, 980, 898 )
          canvas.create_line(720, 723, 720, 898 )
          canvas.create_line(860, 723, 860, 898 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
        elif comp_data[12] == "3":
          canvas.create_line(980, 723, 980, 923 )
          canvas.create_line(720, 723, 720, 923 )
          canvas.create_line(860, 723, 860, 923 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )
          canvas.create_line(980, 923, 720, 923 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0]+str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)

        inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
        bg="white",cursor="arrow",bd=0)
        inv_prev_comments.insert("1.0",prev_data[44])
        inv_prev_comments.config(state=DISABLED)
        canvas.create_window(635, 980,window=inv_prev_comments)
        
        canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(290, 1090, 982, 1090)
        
        inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
        inv_prev_terms.insert("1.0",prev_data[35])
        inv_prev_terms.tag_configure("tag_name", justify='left')
        inv_prev_terms.tag_add("tag_name", "1.0", "end")
        inv_prev_terms.config(state=DISABLED)
        canvas.create_window(642, 1125,window=inv_prev_terms)
        canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
        inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_prev_salesp.config(text=prev_data[14],anchor="w",bg="white")
        canvas.create_window(502, 1165, window = inv_prev_salesp)
        inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_footer_canvas.config(text=prev_data[41],anchor="w",bg="white")
        canvas.create_window(413, 1185,window=inv_footer_canvas)
    #----------------Simplified 2 (logo on right side)------------------ 
      elif prev_data[13] == 'Simplified 2 (logo on right side)':
        frame = Frame(prev_invo, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=5,y=30)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
        
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        
        canvas.config(width=1315,height=640)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235, 25, 1035, 1430 , outline='yellow',fill='white')
        inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_title_canvas.config(text=prev_data[39],anchor="center",bg="white")
        canvas.create_window(637, 50,window=inv_title_canvas)

        try:
          image = Image.open("images/"+comp_data[13])
          resize_image = image.resize((250, 125))
          logo_img = ImageTk.PhotoImage(resize_image)
          b2 = Label(canvas,image=logo_img, height=125, width=250,)
          b2.photo = logo_img
          canvas.create_window(860, 155,window=b2)
        except:
          pass
        
        canvas.create_text(715, 250, text="Invoice#", fill="black", font=('Helvetica 11'))
        canvas.create_text(725, 270, text="Invoicedate", fill="black", font=('Helvetica 11'))
        canvas.create_text(718, 290, text="Due date", fill="black", font=('Helvetica 11'))
        canvas.create_text(710, 310, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(728, 330, text="Invoice ref.#", fill="black", font=('Helvetica 11'))
        inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_num_canvas.config(text=prev_data[1],anchor="w")
        canvas.create_window(918, 250,window=inv_num_canvas)
        canvas.create_text(856, 270, text=prev_data[2], fill="black", font=('Helvetica 11'))
        canvas.create_text(856, 290, text=prev_data[3], fill="black", font=('Helvetica 11'))
        inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_terms_canvas.config(text=prev_data[42],anchor="w")
        canvas.create_window(918, 310,window=inv_terms_canvas)
        inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_ref_canvas.config(text=prev_data[43],anchor="w")
        canvas.create_window(918, 330,window=inv_ref_canvas)   
        
        canvas.create_text(379, 110, text=comp_data[1], fill="black", font=('Helvetica 12 bold'))
        comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
        comp_addr_canvas.insert("1.0",comp_data[2])
        comp_addr_canvas.tag_configure("tag_name", justify='left')
        comp_addr_canvas.tag_add("tag_name", "1.0", "end")
        comp_addr_canvas.config(state=DISABLED)
        canvas.create_window(392, 165,window=comp_addr_canvas)
        inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=30,bg="white")
        inv_stax_canvas.config(text=comp_data[4],anchor="w")
        canvas.create_window(405, 220,window=inv_stax_canvas)
        canvas.create_text(320, 255, text="Invoice", fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(335, 285, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
        
        canvas.create_text(315, 350, text="Invoice to", fill="black", font=('Helvetica 10 underline'))
        inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_canv_name.config(text=prev_data[18],anchor="w",bg="white")
        canvas.create_window(409, 370,window=inv_canv_name)
        inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_addr_canvas.insert("1.0",prev_data[19])
        inv_addr_canvas.config(state=DISABLED)
        canvas.create_window(395, 415, window=inv_addr_canvas)
        canvas.create_text(650, 350, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        inv_ship_canv_lbl = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_ship_canv_lbl.config(text=prev_data[20],anchor="w",bg="white")
        canvas.create_window(751, 370, window=inv_ship_canv_lbl)
        inv_ship_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=4,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_ship_addr_canvas.insert("1.0",prev_data[21])
        inv_ship_addr_canvas.config(state=DISABLED)
        canvas.create_window(736, 415,window=inv_ship_addr_canvas)

        inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_header_canvas.config(text=prev_data[40],anchor="center",bg="white")
        canvas.create_window(637, 452,window=inv_header_canvas)
        
        s = ttk.Style()
        s.configure('Treeview.Heading', background='',State='DISABLE')
        inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
        inv_prev_tree["columns"] = ["1","2","3"]
        inv_prev_tree.column("#0",width=1)
        inv_prev_tree.column("1",width=394,anchor=CENTER)
        inv_prev_tree.column("2",width=150,anchor=CENTER)
        inv_prev_tree.column("3",width=150,anchor=CENTER)
        inv_prev_tree.heading("#0",text="")
        inv_prev_tree.heading("1",text="Product/Service - Description")
        inv_prev_tree.heading("2",text="Quantity")
        inv_prev_tree.heading("3",text="Price")
        window = canvas.create_window(285, 462, anchor="nw", window=inv_prev_tree)

        currency_sql = "SELECT currencysign,currsignplace FROM company"
        fbcursor.execute(currency_sql,)
        currency_symb = fbcursor.fetchone()

        storing_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        storing_val = (prev_data[1],)
        fbcursor.execute(storing_sql,storing_val)
        storing_data = fbcursor.fetchall()

        for record in storing_data:
          inv_prev_tree.insert(parent='', index='end',text='', values=(record[6] + "  -  " + record[7],record[9],record[13]))

        if not comp_data:
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "1":
          canvas.create_line(980, 723, 980, 873 )
          canvas.create_line(720, 723, 720, 873 )
          canvas.create_line(860, 723, 860, 873 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,786,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,811,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,836,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,861,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_bal1_canvas)
        elif comp_data[12] == "2":
          canvas.create_line(980, 723, 980, 898 )
          canvas.create_line(720, 723, 720, 898 )
          canvas.create_line(860, 723, 860, 898 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,811,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,836,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,861,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,886,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_bal1_canvas)
        elif comp_data[12] == "3":
          canvas.create_line(980, 723, 980, 923 )
          canvas.create_line(720, 723, 720, 923 )
          canvas.create_line(860, 723, 860, 923 )#1st
          canvas.create_line(980, 723, 720, 723 )
          canvas.create_line(980, 748, 720, 748 )
          canvas.create_line(980, 773, 720, 773 ) 
          canvas.create_line(980, 798, 720, 798 )
          canvas.create_line(980, 823, 720, 823 )
          canvas.create_line(980, 848, 720, 848 )
          canvas.create_line(980, 873, 720, 873 )
          canvas.create_line(980, 898, 720, 898 )
          canvas.create_line(980, 923, 720, 923 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0]+str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(prev_data[36]),anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="center")
            canvas.create_window(790,737,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,737,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="center")
            canvas.create_window(790,761,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,761,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="center")
            canvas.create_window(790,786,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,786,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="center")
            canvas.create_window(790,811,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,811,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="center")
            canvas.create_window(790,836,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,836,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="center")
            canvas.create_window(790,861,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,861,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="center")
            canvas.create_window(790,886,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,886,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="center")
            canvas.create_window(790,911,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(925,911,window=inv_bal1_canvas)

        inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=100,height=6,fg= "black",
        bg="white",cursor="arrow",bd=0)
        inv_prev_comments.insert("1.0",prev_data[44])
        inv_prev_comments.config(state=DISABLED)
        canvas.create_window(635, 980,window=inv_prev_comments)
        
        canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(290, 1090, 982, 1090)
        
        inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=100,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
        inv_prev_terms.insert("1.0",prev_data[35])
        inv_prev_terms.tag_configure("tag_name", justify='left')
        inv_prev_terms.tag_add("tag_name", "1.0", "end")
        inv_prev_terms.config(state=DISABLED)
        canvas.create_window(642, 1125,window=inv_prev_terms)
        canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
        inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_prev_salesp.config(text=prev_data[14],anchor="w",bg="white")
        canvas.create_window(502, 1165, window = inv_prev_salesp)
        inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_footer_canvas.config(text=prev_data[41],anchor="w",bg="white")
        canvas.create_window(413, 1185,window=inv_footer_canvas)
    #----------------Business Classic------------------ 
      elif prev_data[13] == 'Business Classic':
        frame = Frame(prev_invo, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=5,y=30)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,1200))
        
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        
        canvas.config(width=1315,height=640)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(235, 25, 1080, 1430 , outline='yellow',fill='white')
        inv_title_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_title_canvas.config(text=prev_data[39],anchor="center",bg="white")
        canvas.create_window(657, 50,window=inv_title_canvas)
        canvas.create_line(290, 70, 1025, 70, fill='orange')
        try:
          image = Image.open("images/"+comp_data[13])
          resize_image = image.resize((250, 125))
          logo_img = ImageTk.PhotoImage(resize_image)
          b2 = Label(canvas,image=logo_img, height=125, width=250,)
          b2.photo = logo_img
          canvas.create_window(417, 155,window=b2)
        except:
          pass
        canvas.create_text(629, 110, text=comp_data[1], fill="black", font=('Helvetica 10 bold'))
        comp_addr_canvas = Text(canvas,font=('Helvetica 10'),width=21,height=5,fg= "black",bg="white",cursor="arrow",bd=0,)
        comp_addr_canvas.insert("1.0",comp_data[2])
        comp_addr_canvas.tag_configure("tag_name", justify='left')
        comp_addr_canvas.tag_add("tag_name", "1.0", "end")
        comp_addr_canvas.config(state=DISABLED)
        canvas.create_window(628, 165,window=comp_addr_canvas)
        inv_stax_canvas = Label(canvas, font=('Helvetica 10 '),width=21,bg="white")
        inv_stax_canvas.config(text=comp_data[4],anchor="w")
        canvas.create_window(638, 220,window=inv_stax_canvas)
        

        inv_canv_name = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_canv_name.config(text=prev_data[18],anchor="w",bg="white")
        canvas.create_window(868, 110,window=inv_canv_name)
        inv_addr_canvas = Text(canvas,font=('Helvetica 10'),width=30,height=3,bd=0,fg= "black",
        bg="white",cursor="arrow")
        inv_addr_canvas.insert("1.0",prev_data[19])
        inv_addr_canvas.config(state=DISABLED)
        canvas.create_window(853, 157, window=inv_addr_canvas)
        
        canvas.create_text(765, 190, text="Invoice", fill="black", font=('Helvetica 10'))
        canvas.create_text(780, 210, text="Invoice date", fill="black", font=('Helvetica 10'))
        canvas.create_text(772, 230, text="Due date", fill="black", font=('Helvetica 10'))
        canvas.create_text(763, 250, text="Terms", fill="black", font=('Helvetica 10'))
        canvas.create_text(779, 270, text="Invoice ref.#", fill="black", font=('Helvetica 10'))
        inv_num_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_num_canvas.config(text=prev_data[1],anchor="w")
        canvas.create_window(963, 190,window=inv_num_canvas)
        canvas.create_text(900, 210, text=prev_data[2], fill="black", font=('Helvetica 11'))
        canvas.create_text(900, 230, text=prev_data[3], fill="black", font=('Helvetica 11'))
        inv_terms_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_terms_canvas.config(text=prev_data[42],anchor="w")
        canvas.create_window(963, 250,window=inv_terms_canvas)
        inv_ref_canvas = Label(canvas,font=('Helvetica 10'),width=25,bg='white')
        inv_ref_canvas.config(text=prev_data[43],anchor="w")
        canvas.create_window(963, 270,window=inv_ref_canvas) 

        inv_header_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_header_canvas.config(text=prev_data[40],anchor="center",bg="white")
        canvas.create_window(657, 290,window=inv_header_canvas)


        s = ttk.Style()
        s.configure('Treeview.Heading', background='',State='DISABLE')
        inv_prev_tree = ttk.Treeview(canvas,height=12,style='mystyle.Treeview')
        inv_prev_tree["columns"] = ["1","2","3","4","5"]
        inv_prev_tree.column("#0",width=1)
        inv_prev_tree.column("1",width=240,anchor=CENTER)
        inv_prev_tree.column("2",width=220,anchor=CENTER)
        inv_prev_tree.column("3",width=90,anchor=CENTER)
        inv_prev_tree.column("4",width=100,anchor=CENTER)
        inv_prev_tree.column("5",width=90,anchor=CENTER)
        inv_prev_tree.heading("#0",text="")
        inv_prev_tree.heading("1",text="Product/Service")
        inv_prev_tree.heading("2",text="Description")
        inv_prev_tree.heading("3",text="Quantity")
        inv_prev_tree.heading("4",text="Unit Price")
        inv_prev_tree.heading("5",text="Price")
        window = canvas.create_window(285, 300, anchor="nw", window=inv_prev_tree)
        
        
        currency_sql = "SELECT currencysign,currsignplace FROM company"
        fbcursor.execute(currency_sql,)
        currency_symb = fbcursor.fetchone()

        storing_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        storing_val = (prev_data[1],)
        fbcursor.execute(storing_sql,storing_val)
        storing_data = fbcursor.fetchall()

        for record in storing_data:
          inv_prev_tree.insert(parent='', index='end',text='', values=(record[6],record[7],record[8],record[9],record[13]))
        
        if not comp_data:
          canvas.create_line(1027, 560, 1027, 710 )
          canvas.create_line(720, 560, 720, 710 )
          canvas.create_line(1027, 560, 720, 560 )
          canvas.create_line(1027, 585, 720, 585 )
          canvas.create_line(1027, 610, 720, 610 ) 
          canvas.create_line(1027, 635, 720, 635 )
          canvas.create_line(1027, 660, 720, 660 )
          canvas.create_line(1027, 685, 720, 685 )
          canvas.create_line(1027, 710, 720, 710 )
          
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
        elif comp_data[12] == "1":
          canvas.create_line(1027, 560, 1027, 710 )
          canvas.create_line(720, 560, 720, 710 )
          canvas.create_line(1027, 560, 720, 560 )
          canvas.create_line(1027, 585, 720, 585 )
          canvas.create_line(1027, 610, 720, 610 ) 
          canvas.create_line(1027, 635, 720, 635 )
          canvas.create_line(1027, 660, 720, 660 )
          canvas.create_line(1027, 685, 720, 685 )
          canvas.create_line(1027, 710, 720, 710 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,624,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,649,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,674,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,699,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_bal1_canvas)
        elif comp_data[12] == "2":
          canvas.create_line(1027, 560, 1027, 735 )
          canvas.create_line(720, 560, 720, 735 )
          canvas.create_line(1027, 560, 720, 560 )
          canvas.create_line(1027, 585, 720, 585 )
          canvas.create_line(1027, 610, 720, 610 ) 
          canvas.create_line(1027, 635, 720, 635 )
          canvas.create_line(1027, 660, 720, 660 )
          canvas.create_line(1027, 685, 720, 685 )
          canvas.create_line(1027, 710, 720, 710 )
          canvas.create_line(1027, 735, 720, 735 )

          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,649,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(971,649,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,674,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(971,674,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,699,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(971,699,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,724,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(971,724,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,649,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(971,649,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,674,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(971,674,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,699,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(971,699,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,724,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(971,724,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,649,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,674,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,699,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,724,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(971,724,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,649,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,674,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,699,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,724,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,724,window=inv_bal1_canvas)
        elif comp_data[12] == "3":
          canvas.create_line(1027, 560, 1027, 760 )
          canvas.create_line(720, 560, 720, 760 )
          canvas.create_line(1027, 560, 720, 560 )
          canvas.create_line(1027, 585, 720, 585 )
          canvas.create_line(1027, 610, 720, 610 ) 
          canvas.create_line(1027, 635, 720, 635 )
          canvas.create_line(1027, 660, 720, 660 )
          canvas.create_line(1027, 685, 720, 685 )
          canvas.create_line(1027, 710, 720, 710 )
          canvas.create_line(1027, 735, 720, 735 )
          canvas.create_line(1027, 760, 720, 760)
            
          if currency_symb[1] == "before amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0]+str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0]+str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0]+str(prev_data[16]),anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="w")
            canvas.create_window(784,649,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0]+str(prev_data[36]),anchor="e")
            canvas.create_window(971,649,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,674,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0]+str(prev_data[12]),anchor="e")
            canvas.create_window(971,674,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,699,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0]+str(prev_data[8]),anchor="e")
            canvas.create_window(971,699,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,724,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0]+str(prev_data[9]),anchor="e")
            canvas.create_window(971,724,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,749,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0]+str(prev_data[10]),anchor="e")
            canvas.create_window(971,749,window=inv_bal1_canvas)
          elif currency_symb[1] == "before amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=currency_symb[0] + " " + str(prev_data[31]),anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=currency_symb[0] + " " + str(prev_data[49]),anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=currency_symb[0] + " " + str(prev_data[16]),anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="w")
            canvas.create_window(784,649,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=currency_symb[0] + " " + str(prev_data[36]),anchor="e")
            canvas.create_window(971,649,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,674,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=currency_symb[0] + " " + str(prev_data[12]),anchor="e")
            canvas.create_window(984,674,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,699,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=currency_symb[0] + " " + str(prev_data[8]),anchor="e")
            canvas.create_window(971,699,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,724,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=currency_symb[0] + " " + str(prev_data[9]),anchor="e")
            canvas.create_window(971,724,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,749,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=currency_symb[0] + " " + str(prev_data[10]),anchor="e")
            canvas.create_window(971,749,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="w")
            canvas.create_window(784,649,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,674,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,699,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,724,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+currency_symb[0],anchor="e")
            canvas.create_window(971,724,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,749,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+currency_symb[0],anchor="e")
            canvas.create_window(971,749,window=inv_bal1_canvas)
          elif currency_symb[1] == "after amount with space":
            inv_dis_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_dis_canvas.config(text=str(prev_data[15]) + "" + "% Discount",anchor="w")
            canvas.create_window(784,574,window=inv_dis_canvas)
            inv_dis1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_dis1_canvas.config(text=str(prev_data[31])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,574,window=inv_dis1_canvas)

            inv_sub_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_sub_canvas.config(text="Subtotal",anchor="w")
            canvas.create_window(784,599,window=inv_sub_canvas)
            inv_sub1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_sub1_canvas.config(text=str(prev_data[49])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,599,window=inv_sub1_canvas)

            inv_TAX1_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX1_canvas.config(text="TAX1",anchor="w")
            canvas.create_window(784,624,window=inv_TAX1_canvas)
            inv_tax_1_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_1_canvas.config(text=str(prev_data[16])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,624,window=inv_tax_1_canvas)

            inv_TAX2_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_TAX2_canvas.config(text="TAX2",anchor="w")
            canvas.create_window(784,649,window=inv_TAX2_canvas)
            inv_tax_2_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_tax_2_canvas.config(text=str(prev_data[36])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,649,window=inv_tax_2_canvas)

            inv_excname_canvas = Label(canvas,font=('Helvetica 10'),width=15,bg='white')
            inv_excname_canvas.config(text=prev_data[11],anchor="w")
            canvas.create_window(784,674,window=inv_excname_canvas)
            inv_excost_canvas = Label(canvas,font=('Helvetica 10'),width=13,bg='white')
            inv_excost_canvas.config(text=str(prev_data[12])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,674,window=inv_excost_canvas)

            inv_tot_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_tot_canvas.config(text="Invoice Total",anchor="w")
            canvas.create_window(784,699,window=inv_tot_canvas)
            inv_tot1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_tot1_canvas.config(text=str(prev_data[8])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,699,window=inv_tot1_canvas)

            inv_totp_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_totp_canvas.config(text="Total Paid",anchor="w")
            canvas.create_window(784,724,window=inv_totp_canvas)
            inv_totp1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_totp1_canvas.config(text=str(prev_data[9])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,724,window=inv_totp1_canvas)

            inv_bal_canvas = Label(canvas,font=('Helvetica 10 bold'),width=15,bg='white')
            inv_bal_canvas.config(text="Balance",anchor="w")
            canvas.create_window(784,749,window=inv_bal_canvas)
            inv_bal1_canvas = Label(canvas,font=('Helvetica 10 bold'),width=13,bg='white')
            inv_bal1_canvas.config(text=str(prev_data[10])+ " " +currency_symb[0],anchor="e")
            canvas.create_window(971,749,window=inv_bal1_canvas)

        canvas.create_line(290, 810, 1030, 810, fill='orange')
        inv_prev_comments = Text(canvas,font=('Helvetica 10'),width=106,height=6,fg= "black",
        bg="white",cursor="arrow",bd=0)
        inv_prev_comments.insert("1.0",prev_data[44])
        inv_prev_comments.config(state=DISABLED)
        canvas.create_window(661, 860,window=inv_prev_comments)

        canvas.create_text(635, 1075, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(290, 1090, 1030, 1090, fill='orange')
        
        inv_prev_terms = Text(canvas,font=('Helvetica 10'),width=106,height=4,fg= "black",bg="white",cursor="arrow",bd=0)
        inv_prev_terms.insert("1.0",prev_data[35])
        inv_prev_terms.tag_configure("tag_name", justify='left')
        inv_prev_terms.tag_add("tag_name", "1.0", "end")
        inv_prev_terms.config(state=DISABLED)
        canvas.create_window(661, 1125,window=inv_prev_terms)
        canvas.create_text(330, 1165, text="Sale Person:", fill="black", font=('Helvetica 10'))
        inv_prev_salesp = Label(canvas, font=('Helvetica 10 '),width=30)
        inv_prev_salesp.config(text=prev_data[14],anchor="w",bg="white")
        canvas.create_window(502, 1165, window = inv_prev_salesp)
        inv_footer_canvas = Label(canvas,font=('Helvetica 10 '),width=30)
        inv_footer_canvas.config(text=prev_data[41],anchor="w",bg="white")
        canvas.create_window(413, 1185,window=inv_footer_canvas)
      else:
          pass

  
  ########################### Print Invoice #######################
  def printinvoice_main():
    if not inv_tree.selection():
      messagebox.showwarning("F-Billing Revolution 2022","No line selected.\nSelect a line before printing.")
    else:
      from reportlab.pdfgen import canvas
      selected_invoice = inv_tree.item(inv_tree.focus())["values"][1]
      invo_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
      invo_val = (selected_invoice,)
      fbcursor.execute(invo_sql,invo_val)
      invo_data = fbcursor.fetchone()
      type_temp = invo_data[13]
      invnumber = invo_data[1].split('/')[0]
      pdf = canvas.Canvas(os.getcwd()+"/Invoice Documents/"+invnumber+".pdf", pagesize=letter)
      if type_temp == 'Professional 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,invo_data[1])
        pdf.drawString(140,620,str(invo_data[2]))
        pdf.drawString(140,605,str(invo_data[3]))
        pdf.drawString(140,590,invo_data[42])
        pdf.drawString(140,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,40))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,40))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")


        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[5])
          pdf.drawString(132,y1+5,i[6])
          pdf.drawCentredString(355,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(130,v1,130,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
          
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Professional 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,invo_data[1])
        pdf.drawString(450,620,str(invo_data[2]))
        pdf.drawString(450,605,str(invo_data[3]))
        pdf.drawString(450,590,invo_data[42])
        pdf.drawString(450,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[5])
          pdf.drawString(132,y1+5,i[6])
          pdf.drawCentredString(355,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(130,v1,130,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Simplified 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,invo_data[1])
        pdf.drawString(140,620,str(invo_data[2]))
        pdf.drawString(140,605,str(invo_data[3]))
        pdf.drawString(140,590,invo_data[42])
        pdf.drawString(140,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(380,y1+5,str(i[9]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(450,v1,450,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Simplified 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,invo_data[1])
        pdf.drawString(450,620,str(invo_data[2]))
        pdf.drawString(450,605,str(invo_data[3]))
        pdf.drawString(450,590,invo_data[42])
        pdf.drawString(450,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(380,y1+5,str(i[9]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(450,v1,450,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Business Classic':
        pdf.setStrokeColorRGB(255,10,0)
        pdf.line(30,762,580,762)
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,585,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(240,735, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(240,720,htg[0])
          if vg>1:
            pdf.drawString(240,705,htg[1])
            if vg>2:
              pdf.drawString(240,690,htg[2])
              if vg>3:
                pdf.drawString(240,675,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(240,650, comp_data[4])

        pdf.drawString(390,665,"Invoice#")
        pdf.drawString(390,650,"Invoice date")
        pdf.drawString(390,635,"Due date")
        pdf.drawString(390,620,"Terms")
        pdf.drawString(390,605,"Invoice ref#")

        pdf.drawString(480,665,invo_data[1])
        pdf.drawString(480,650,str(invo_data[2]))
        pdf.drawString(480,635,str(invo_data[3]))
        pdf.drawString(480,620,invo_data[42])
        pdf.drawString(480,605,invo_data[43])

        pdf.drawString(390,735,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(390,720,a[0])
          if addr > 1:
            pdf.drawString(390,705,a[1])
            if addr > 2:
              pdf.drawString(390,590,a[2])
              if addr > 3:
                pdf.drawString(390,575,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setStrokeColorRGB(0,0,0)
        pdf.setLineWidth(.3)
        pdf.line(30,580,30,560)
        pdf.line(580,580,580,560)
        pdf.line(310,580,310,560) #vertical lines
        pdf.line(400,580,400,560)
        pdf.line(490,580,490,560)
        #------------------------#
        pdf.line(30,560,580,560)
        pdf.line(30,580,580,580)


        pdf.drawString(130,565,"Product/Service")
        pdf.drawString(332,565,"Quantity")
        pdf.drawString(420,565,"Unit Price")
        pdf.drawString(523,565,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 540 
        y2 = 540
        v1 = 560
        v2 = 540
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(357,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage() 
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])


      pdf.save()
      win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+invnumber+".pdf",None,".",0)



  #convert to invoice
  def convert():
    if messagebox.askyesno("Make invoice from Orders", "Are you sure to make invoice from this Orders ") == True:
          messagebox.askyesno("Make invoice from Estimate", "Invoice Creation was Successfull.\n New Invoice is \n Would you like to open this invoice ")
    else:
        messagebox.destroy()
    

  ####################### delete invoice #################
  def inv_delete_selected():
    try:
      selected_inv = inv_tree.item(inv_tree.focus())["values"][1] 
      messagebox.askyesno("Delete Invoice","[" +  str(selected_inv) + "]\n" + "Are you sure to delete this invoice? \nAll products will be placed back into stock")
      delinv_sql = "DELETE FROM invoice WHERE invoice_number=%s"
      delinv_val = (selected_inv,)
      fbcursor.execute(delinv_sql,delinv_val)
      fbilldb.commit()

      delinvpro_sql = "DELETE FROM storingproduct WHERE invoice_number=%s"
      delinvpro_val = (selected_inv,)
      fbcursor.execute(delinvpro_sql,delinvpro_val)
      fbilldb.commit()

      delinvpay_sql = "DELETE FROM payments WHERE invoice_number=%s"
      delinvpay_val = (selected_inv,)
      fbcursor.execute(delinvpay_sql,delinvpay_val)
      fbilldb.commit()

      delinvdoc_sql = "DELETE FROM documents WHERE invoice_number=%s"
      delinvdoc_val = (selected_inv,)
      fbcursor.execute(delinvdoc_sql,delinvdoc_val)
      fbilldb.commit()

      for record in inv_tree.get_children():
        inv_tree.delete(record)
      afdel_sql = "SELECT * FROM invoice"
      fbcursor.execute(afdel_sql,)
      afdel_data = fbcursor.fetchall()
      counti = 0
      for i in afdel_data:
        if comp_data[7] == "before amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
        elif comp_data[7] == "after amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
        elif comp_data[7] == "before amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
        elif comp_data[7] == "after amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
      counti += 1

      try:
        if showtotsum_btn['text'] == "Hide totals\nSum":
          it = []
          tp = []
          bl = []
          for i in inv_tree.get_children():
            invtot = inv_tree.item(i,'values')[9]
            totpaid = inv_tree.item(i,'values')[10]
            balance = inv_tree.item(i,'values')[11]
            if comp_data[7] == "before amount":
              it.append(invtot.split(str(comp_data[6]))[-1])
              tp.append(totpaid.split(str(comp_data[6]))[-1])
              bl.append(balance.split(str(comp_data[6]))[-1])
            if comp_data[7] == "after amount":
              it.append(invtot.split(str(comp_data[6]))[0])
              tp.append(totpaid.split(str(comp_data[6]))[0])
              bl.append(balance.split(str(comp_data[6]))[0])
            if comp_data[7] == "before amount with space":
              it.append(invtot.split(' ')[-1])
              tp.append(totpaid.split(' ')[-1])
              bl.append(balance.split(' ')[-1])
            if comp_data[7] == "after amount with space":
              it.append(invtot.split(' ')[0])
              tp.append(totpaid.split(' ')[0])
              bl.append(balance.split(' ')[0])

          total_invtot = 0.0
          total_totpaid = 0.0
          total_balance = 0.0
          for a in it:
            total_invtot += float(a)
          for b in tp:
            total_totpaid += float(b)
          for c in bl:
            total_balance += float(c)
          if comp_data[7] == "before amount":
            invtot_label.config(text=comp_data[6] + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + str(round(total_balance,2)))
          elif comp_data[7] == "after amount":
            invtot_label.config(text=str(round(total_invtot,2)) + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + comp_data[6])
          elif comp_data[7] == "before amount  with space":
            invtot_label.config(text=comp_data[6] + " " + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + " " + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + " " + str(round(total_balance,2)))
          elif comp_data[7] == "after amount with space":
            invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + " " + comp_data[6])
        else:
          pass
      except:
        pass
    except:
      pass




  ################### search invoice ################3  
  def invo_search():
    def find_invrow():
      try:
        srchtxt = srchtxtVar.get()

        comp_sql = "SELECT * FROM company"
        fbcursor.execute(comp_sql,)
        comp_data = fbcursor.fetchone()

        if findtxtVar.get() == "Invoice#":
          fndinv_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
          fndinv_val = (srchtxt,)
          fbcursor.execute(fndinv_sql,fndinv_val)
          fndinv_data = fbcursor.fetchall()

          for record in inv_tree.get_children():
            inv_tree.delete(record)
          
          counti = 0
          for i in fndinv_data:
            if comp_data[7] == "before amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
            elif comp_data[7] == "after amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
            elif comp_data[7] == "after amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
          counti += 1
          searchinvo.destroy()
        elif findtxtVar.get() == "Customer Name":
          fndinv_sql = "SELECT * FROM invoice WHERE businessname=%s"
          fndinv_val = (srchtxt,)
          fbcursor.execute(fndinv_sql,fndinv_val)
          fndinv_data = fbcursor.fetchall()

          for record in inv_tree.get_children():
            inv_tree.delete(record)
          
          counti = 0
          for i in fndinv_data:
            if comp_data[7] == "before amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
            elif comp_data[7] == "after amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
            elif comp_data[7] == "after amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
          counti += 1
          searchinvo.destroy()
        elif findtxtVar.get() == "Invoice Total":
          fndinv_sql = "SELECT * FROM invoice WHERE invoicetot=%s"
          fndinv_val = (srchtxt,)
          fbcursor.execute(fndinv_sql,fndinv_val)
          fndinv_data = fbcursor.fetchall()

          for record in inv_tree.get_children():
            inv_tree.delete(record)
          
          counti = 0
          for i in fndinv_data:
            if comp_data[7] == "before amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
            elif comp_data[7] == "after amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
            elif comp_data[7] == "after amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
          counti += 1
          searchinvo.destroy()
        elif findtxtVar.get() == "Total Paid":
          fndinv_sql = "SELECT * FROM invoice WHERE totpaid=%s"
          fndinv_val = (srchtxt,)
          fbcursor.execute(fndinv_sql,fndinv_val)
          fndinv_data = fbcursor.fetchall()

          for record in inv_tree.get_children():
            inv_tree.delete(record)
          
          counti = 0
          for i in fndinv_data:
            if comp_data[7] == "before amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
            elif comp_data[7] == "after amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
            elif comp_data[7] == "after amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
          counti += 1
          searchinvo.destroy()
        elif findtxtVar.get() == "Balance":
          fndinv_sql = "SELECT * FROM invoice WHERE balance=%s"
          fndinv_val = (srchtxt,)
          fbcursor.execute(fndinv_sql,fndinv_val)
          fndinv_data = fbcursor.fetchall()

          for record in inv_tree.get_children():
            inv_tree.delete(record)
          
          counti = 0
          for i in fndinv_data:
            if comp_data[7] == "before amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
            elif comp_data[7] == "after amount":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
            elif comp_data[7] == "after amount with space":
              inv_tree.insert(parent='',index='end',text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
          counti += 1
          searchinvo.destroy()

        try:
          if showtotsum_btn['text'] == "Hide totals\nSum":
            it = []
            tp = []
            bl = []
            for i in inv_tree.get_children():
              invtot = inv_tree.item(i,'values')[9]
              totpaid = inv_tree.item(i,'values')[10]
              balance = inv_tree.item(i,'values')[11]
              if comp_data[7] == "before amount":
                it.append(invtot.split(str(comp_data[6]))[-1])
                tp.append(totpaid.split(str(comp_data[6]))[-1])
                bl.append(balance.split(str(comp_data[6]))[-1])
              if comp_data[7] == "after amount":
                it.append(invtot.split(str(comp_data[6]))[0])
                tp.append(totpaid.split(str(comp_data[6]))[0])
                bl.append(balance.split(str(comp_data[6]))[0])
              if comp_data[7] == "before amount with space":
                it.append(invtot.split(' ')[-1])
                tp.append(totpaid.split(' ')[-1])
                bl.append(balance.split(' ')[-1])
              if comp_data[7] == "after amount with space":
                it.append(invtot.split(' ')[0])
                tp.append(totpaid.split(' ')[0])
                bl.append(balance.split(' ')[0])

            total_invtot = 0.0
            total_totpaid = 0.0
            total_balance = 0.0
            for a in it:
              total_invtot += float(a)
            for b in tp:
              total_totpaid += float(b)
            for c in bl:
              total_balance += float(c)
            if comp_data[7] == "before amount":
              invtot_label.config(text=comp_data[6] + str(round(total_invtot,2)))
              totpaid_label.config(text=comp_data[6] + str(round(total_totpaid,2)))
              balance_label.config(text=comp_data[6] + str(round(total_balance,2)))
            elif comp_data[7] == "after amount":
              invtot_label.config(text=str(round(total_invtot,2)) + comp_data[6])
              totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data[6])
              balance_label.config(text=str(round(total_balance,2)) + comp_data[6])
            elif comp_data[7] == "before amount  with space":
              invtot_label.config(text=comp_data[6] + " " + str(round(total_invtot,2)))
              totpaid_label.config(text=comp_data[6] + " " + str(round(total_totpaid,2)))
              balance_label.config(text=comp_data[6] + " " + str(round(total_balance,2)))
            elif comp_data[7] == "after amount with space":
              invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data[6])
              totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data[6])
              balance_label.config(text=str(round(total_balance,2)) + " " + comp_data[6])
          else:
            pass
        except:
          pass
      except:
        pass


    searchinvo = Toplevel()  
    searchinvo.title("Find Text")
    p2 = PhotoImage(file = "images/fbicon.png")
    searchinvo.iconphoto(False, p2)
    searchinvo.geometry("520x150+390+250")
    findwhat_lbl=Label(searchinvo,text="Find What:")
    findwhat_lbl.place(x=5,y=15)
    srchtxtVar = StringVar() 
    findwhat_combo = Entry(searchinvo, width = 50, textvariable = srchtxtVar )
    findwhat_combo.place(x=85,y=15,height=23) 
    findbtn = Button(searchinvo, text ="Find next",width=10, command=lambda:find_invrow())
    findbtn.place(x=420,y=15)
    findin_lbl=Label(searchinvo,text="Find in:")
    findin_lbl.place(x=5,y=40)
    findtxtVar = StringVar() 
    findin_combo = ttk.Combobox(searchinvo, width = 37, textvariable =findtxtVar )
    findin_combo['values'] = ('Invoice#',
                              'Customer Name',
                              'Invoice Total',
                              'Total Paid',
                              'Balance')        
    findin_combo.place(x=85,y=40,height=23) 
    findin_combo.current(0)
    srch_cancelbtn = Button(searchinvo, text ="Close",width=10, command=lambda:searchinvo.destroy())
    srch_cancelbtn.place(x=420,y=45)


  ############## Email Invoice ###################

  def inv_send_mail_main(file=None):
    try:
      # sender_mail = your_cemail_entry.get()
      sender_mail = "infoxfbilling77@gmail.com"
      # sender_password = your_cpass_entry.get()
      sender_password = "dinkiurlziohgfok"

      server = smtplib.SMTP('smtp.gmail.com', 587)
      print("login successfull")
      server.starttls()
      print("login successfull2")
      server.login(sender_mail,sender_password)
      print("login successfull3")

      carbon_info = email_carbon.get()
      msg = MIMEMultipart()
      msg['Subject'] = email_subject.get()
      mail_content = email_ltr_scroll.get("1.0",'end-1c')
      msg['From'] = email_from.get()
      msg['To'] = email_to.get()

      gettingimg = lstfrm.get()
      lst_data = gettingimg[1:-1].split(',')
      
      msg.attach(MIMEText(mail_content, 'plain'))
      
      for i in lst_data:
        if len(i.strip()[1:-1])>1:
          if (i.strip()[1:-1]).lower().endswith(('.png','.jpg','.jpeg')):
            with open('images/'+ i.strip()[1:-1], "rb") as attachment:
                # MIME attachment is a binary file for that content type "application/octet-stream" is used
              part = MIMEBase("application", "octet-stream")
              part.set_payload(attachment.read())
            # encode into base64 
              encoders.encode_base64(part) 
        
              part.add_header('Content-Disposition', "attachment; filename= %s" % 'images/'+ i.strip()[1:-1]) 

            # attach the instance 'part' to instance 'message' 
              msg.attach(part)
          # message_body = email_body.get()
          else:
            with open('Invoice Documents/'+ inv_data[1].split('/')[0]+".pdf", "rb") as attachment:
              pdf = MIMEBase("application", "octet-stream")
              pdf.set_payload(attachment.read())
              encoders.encode_base64(pdf) 
              pdf.add_header('Content-Disposition', "attachment; filename= %s" % 'Invoice Documents/'+ inv_data[1].split('/')[0]+".pdf") 
              msg.attach(pdf)
      

      server.sendmail(email_from.get(),email_to.get(),msg.as_string())
      server.sendmail(email_from.get(), carbon_info,msg.as_string())

      date = dt.datetime.now().date()
      upd_inv_sql = "UPDATE invoice SET emailon=%s WHERE invoice_number=%s"    
      upd_inv_val = (date,inv_data[1],)
      fbcursor.execute(upd_inv_sql,upd_inv_val)
      fbilldb.commit()
      print("message sent")

      sql = "SELECT * FROM Invoice"
      fbcursor.execute(sql)
      invoice_records = fbcursor.fetchall()

      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql)
      comp_data = fbcursor.fetchone()

      for record in inv_tree.get_children():
        inv_tree.delete(record)

      count = 0
      for i in invoice_records:
        if comp_data[7] == "before amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
        elif comp_data[7] == "after amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
        elif comp_data[7] == "before amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
        elif comp_data[7] == "after amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
      count += 1
    except:
      pass
    

    
  def inv_UploadAction_main(event=None):
    global filenamez

    filenamez = askopenfilename(filetypes=(("png file ",'.png'),("jpg file", ".jpg"), ('PDF', '.pdf',), ("All files", ".*"),))
    shutil.copyfile(filenamez, os.getcwd()+'/images/'+filenamez.split('/')[-1])
    attach_list.insert(0, filenamez.split('/')[-1])



  def inv_deletefile_main():
    inv_remove=attach_list.curselection()
    yawn=attach_list.get(inv_remove) 
    print(yawn)       
    attach_list.delete(ACTIVE)

  def show_listbox_file_main(event):
    import win32api
    try:
      for i in attach_list.curselection():
        listboxfile = attach_list.get(i)
        if listboxfile.lower().endswith(('.png','.jpg','.jpeg')):
          win32api.ShellExecute(0,"",os.getcwd()+"/images/"+listboxfile,None,".",0)
        else:
          win32api.ShellExecute(0,"",os.getcwd()+"/Invoice Documents/"+listboxfile,None,".",0)
    except:
      pass

  #email
        
  def email_invoice_main():
    if not inv_tree.selection():
      messagebox.showwarning("F-Billing Revolution 2022","No line selected.\nSelect a line before sending.")
    else:
      from reportlab.pdfgen import canvas
      selected_invoice = inv_tree.item(inv_tree.focus())["values"][1]
      invo_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
      invo_val = (selected_invoice,)
      fbcursor.execute(invo_sql,invo_val)
      invo_data = fbcursor.fetchone()
      type_temp = invo_data[13]
      invnumber = invo_data[1].split('/')[0]
      pdf = canvas.Canvas(os.getcwd()+"/Invoice Documents/"+invnumber+".pdf", pagesize=letter)
      if type_temp == 'Professional 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,invo_data[1])
        pdf.drawString(140,620,str(invo_data[2]))
        pdf.drawString(140,605,str(invo_data[3]))
        pdf.drawString(140,590,invo_data[42])
        pdf.drawString(140,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,40))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,40))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")


        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[5])
          pdf.drawString(132,y1+5,i[6])
          pdf.drawCentredString(355,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(130,v1,130,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
          
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Professional 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,invo_data[1])
        pdf.drawString(450,620,str(invo_data[2]))
        pdf.drawString(450,605,str(invo_data[3]))
        pdf.drawString(450,590,invo_data[42])
        pdf.drawString(450,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(130,470,130,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(400,470,400,450)
        pdf.line(490,470,490,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(60,455,"ID/SKU")
        pdf.drawString(175,455,"Product/Service")
        pdf.drawString(332,455,"Quantity")
        pdf.drawString(420,455,"Unit Price")
        pdf.drawString(523,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[5])
          pdf.drawString(132,y1+5,i[6])
          pdf.drawCentredString(355,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(130,v1,130,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Simplified 1 (logo on left side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,665,width=200,height=90)

        pdf.drawString(30,635,"Invoice#")
        pdf.drawString(30,620,"Invoice date")
        pdf.drawString(30,605,"Due date")
        pdf.drawString(30,590,"Terms")
        pdf.drawString(30,575,"Invoice ref#")

        pdf.drawString(140,635,invo_data[1])
        pdf.drawString(140,620,str(invo_data[2]))
        pdf.drawString(140,605,str(invo_data[3]))
        pdf.drawString(140,590,invo_data[42])
        pdf.drawString(140,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass


        pdf.setFont('Helvetica-Bold',12)
        pdf.drawRightString(580,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawAlignedString(582,730,htg[0])
          if vg>1:
            pdf.drawAlignedString(582,715,htg[1])
            if vg>2:
              pdf.drawAlignedString(582,700,htg[2])
              if vg>3:
                pdf.drawAlignedString(582,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawAlignedString(582,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawAlignedString(582,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawAlignedString(582,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(380,y1+5,str(i[9]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(450,v1,450,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Simplified 2 (logo on right side)':
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,475,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],380,665,width=200,height=90)

        pdf.drawString(340,635,"Invoice#")
        pdf.drawString(340,620,"Invoice date")
        pdf.drawString(340,605,"Due date")
        pdf.drawString(340,590,"Terms")
        pdf.drawString(340,575,"Invoice ref#")

        pdf.drawString(450,635,invo_data[1])
        pdf.drawString(450,620,str(invo_data[2]))
        pdf.drawString(450,605,str(invo_data[3]))
        pdf.drawString(450,590,invo_data[42])
        pdf.drawString(450,575,invo_data[43])

        pdf.drawString(60,550,"Invoice to")
        pdf.line(60,548,112,548)
        pdf.drawString(60,535,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(60,520,a[0])
          if addr > 1:
            pdf.drawString(60,505,a[1])
            if addr > 2:
              pdf.drawString(60,490,a[2])
              if addr > 3:
                pdf.drawString(60,475,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(300,550,"Ship to")
        pdf.line(300,548,338,548)
        pdf.drawString(300,535,invo_data[20])
        shipto_addr = invo_data[21]
        wraped_text = "\n".join(wrap(shipto_addr,30))
        a1  = wraped_text.split('\n')
            
        addr1 = len(a1)
        if addr1 > 0:
          pdf.drawString(300,520,a1[0])
          if addr1 > 1:
            pdf.drawString(300,505,a1[1])
            if addr1 > 2:
              pdf.drawString(300,490,a1[2])
              if addr1 > 3:
                pdf.drawString(300,475,a1[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(30,745, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(30,730,htg[0])
          if vg>1:
            pdf.drawString(30,715,htg[1])
            if vg>2:
              pdf.drawString(30,700,htg[2])
              if vg>3:
                pdf.drawString(30,685,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(30,660, comp_data[4])
        pdf.setFont('Helvetica-Bold',16)
        pdf.drawString(30,620, "Invoice")

        pdf.setFont('Helvetica',12)
        pdf.drawString(30,580,"TAX EXEMPTED")


        pdf.setLineWidth(.3)
        pdf.line(30,470,30,450)
        pdf.line(580,470,580,450)
        pdf.line(310,470,310,450) #vertical lines
        pdf.line(450,470,450,450)
        #------------------------#
        pdf.line(30,450,580,450)
        pdf.line(30,470,580,470)


        pdf.drawString(130,455,"Product/Service")
        pdf.drawString(357,455,"Quantity")
        pdf.drawString(505,455,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 430 
        y2 = 430
        v1 = 450
        v2 = 430
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(380,y1+5,str(i[9]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(450,v1,450,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            pdf.line(465,calc_y1-100,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            pdf.line(465,calc_y1-120,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            pdf.line(465,calc_y1-140,465,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":            
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6]) 

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage()
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
      elif type_temp == 'Business Classic':
        pdf.setStrokeColorRGB(255,10,0)
        pdf.line(30,762,580,762)
        pdf.setFont('Helvetica',12)
        pdf.drawCentredString(302,770,invo_data[39])
        pdf.drawCentredString(302,585,invo_data[40])
        pdf.drawImage("images/"+comp_data[13],30,660,width=200,height=90)

        pdf.setFont('Helvetica-Bold',12)
        pdf.drawString(240,735, comp_data[1])
        pdf.setFont('Helvetica',12)
        text=comp_data[2]
        wraped_text="\n".join(wrap(text,30))
        htg=wraped_text.split('\n')
            
        vg=len(htg)
        if vg>0:
          pdf.drawString(240,720,htg[0])
          if vg>1:
            pdf.drawString(240,705,htg[1])
            if vg>2:
              pdf.drawString(240,690,htg[2])
              if vg>3:
                pdf.drawString(240,675,htg[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.drawString(240,650, comp_data[4])

        pdf.drawString(390,665,"Invoice#")
        pdf.drawString(390,650,"Invoice date")
        pdf.drawString(390,635,"Due date")
        pdf.drawString(390,620,"Terms")
        pdf.drawString(390,605,"Invoice ref#")

        pdf.drawString(480,665,invo_data[1])
        pdf.drawString(480,650,str(invo_data[2]))
        pdf.drawString(480,635,str(invo_data[3]))
        pdf.drawString(480,620,invo_data[42])
        pdf.drawString(480,605,invo_data[43])

        pdf.drawString(390,735,invo_data[18])
        invto_addr = invo_data[19]
        wraped_text = "\n".join(wrap(invto_addr,30))
        a  = wraped_text.split('\n')
            
        addr = len(a)
        if addr > 0:
          pdf.drawString(390,720,a[0])
          if addr > 1:
            pdf.drawString(390,705,a[1])
            if addr > 2:
              pdf.drawString(390,590,a[2])
              if addr > 3:
                pdf.drawString(390,575,a[3])
              else:
                pass
            else:
              pass
          else:
            pass
        else:
          pass

        pdf.setStrokeColorRGB(0,0,0)
        pdf.setLineWidth(.3)
        pdf.line(30,580,30,560)
        pdf.line(580,580,580,560)
        pdf.line(310,580,310,560) #vertical lines
        pdf.line(400,580,400,560)
        pdf.line(490,580,490,560)
        #------------------------#
        pdf.line(30,560,580,560)
        pdf.line(30,580,580,580)


        pdf.drawString(130,565,"Product/Service")
        pdf.drawString(332,565,"Quantity")
        pdf.drawString(420,565,"Unit Price")
        pdf.drawString(523,565,"Price")

        invpro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        invpro_val = (invo_data[1],)
        fbcursor.execute(invpro_sql,invpro_val)
        invpro_data = fbcursor.fetchall()
        y1 = 540 
        y2 = 540
        v1 = 560
        v2 = 540
        for i in invpro_data:
          if y1 <= 40:
            pdf.showPage()
            y1 = 730
            y2 = 730
            v1 = 750
            v2 = 730
            pdf.line(30,y1,580,y2)
            pdf.line(30,y1+20,580,y2+20)
          else:
            pass
          pdf.line(30,y1,580,y2)
          pdf.drawString(32,y1+5,i[6])
          pdf.drawCentredString(357,y1+5,str(i[9]))
          pdf.drawRightString(488,y1+5,str(i[8]))
          pdf.drawRightString(578,y1+5,str(i[13]))
          y1 -= 20
          y2 -= 20

          pdf.line(30,v1,30,v2)
          pdf.line(580,v1,580,v2)
          pdf.line(310,v1,310,v2) #vertical lines
          pdf.line(400,v1,400,v2)
          pdf.line(490,v1,490,v2)
          v1 -= 20
          v2 -= 20
        
        calc_y1 = y1
        calc_y2 = y2

        if comp_data[12] == "1":
          if calc_y1-100 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-125,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-140,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-155,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-170,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-100,350,calc_y1+20)
            pdf.line(580,calc_y1-100,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-110),580,(calc_y1-110))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-170 <= 40:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-125,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-140,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-155,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-170,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
        elif comp_data[12] == "2":
          if calc_y1-120 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-145,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-160,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-175,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-190,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-120,350,calc_y1+20)
            pdf.line(580,calc_y1-120,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-130),580,(calc_y1-130))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-190 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-145,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-160,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-175,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-190,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        elif comp_data[12] == "3":
          if calc_y1-140 <= 40:
            pdf.showPage()
            calc_y1 = 730
            calc_y2 = 730
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1+20,580,calc_y2+20)
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              comm = len(c)
              if comm > 0:
                pdf.drawString(32,calc_y1-165,c[0])
                if comm > 1:
                  pdf.drawString(32,calc_y1-180,c[1])
                  if comm > 2:
                    pdf.drawString(32,calc_y1-195,c[2])
                    if comm > 3:
                      pdf.drawString(32,calc_y1-210,c[3])
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
              else:
                pass
          else:
            pdf.line(350,calc_y1-140,350,calc_y1+20)
            pdf.line(580,calc_y1-140,580,calc_y1+20)
            #-----------------------------------
            pdf.line(350,calc_y1,580,calc_y2)
            pdf.line(350,calc_y1-20,580,calc_y2-20)
            pdf.line(350,calc_y1-40,580,calc_y2-40)
            pdf.line(350,calc_y1-60,580,calc_y2-60)
            pdf.line(350,calc_y1-80,580,calc_y2-80)
            pdf.line(350,calc_y1-100,580,calc_y2-100)
            pdf.line(350,calc_y1-120,580,calc_y2-120)
            pdf.line(350,calc_y1-140,580,calc_y2-140)
            if comp_data[7] == "before amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + "" + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + "" + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + "" + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + "" + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + "" + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + "" + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + "" + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + "" + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + "" + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + "" + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "before amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,comp_data[6] + " " + str(invo_data[31]))

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,comp_data[6] + " " + str(invo_data[49]))

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,comp_data[6] + " " + str(invo_data[12]))

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,comp_data[6] + " " + str(invo_data[16]))

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,comp_data[6] + " " + str(invo_data[36]))

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,comp_data[6] + " " + str(invo_data[8]))

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,comp_data[6] + " " + str(invo_data[9]))

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,comp_data[6] + " " + str(invo_data[10]))

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass
            elif comp_data[7] == "after amount with space":
              pdf.drawString(352,calc_y1+5,str(invo_data[15]) + "" + "% Discount")
              pdf.drawRightString(578,calc_y1+5,str(invo_data[31]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-20)+5,"Subtotal")
              pdf.drawRightString(578,(calc_y1-20)+5,str(invo_data[49]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-40)+5,invo_data[11])
              pdf.drawRightString(578,(calc_y1-40)+5,str(invo_data[12]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-60)+5,"TAX1")
              pdf.drawRightString(578,(calc_y1-60)+5,str(invo_data[16]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-80)+5,"TAX2")
              pdf.drawRightString(578,(calc_y1-80)+5,str(invo_data[36]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-100)+5,"Invoice Total")
              pdf.drawRightString(578,(calc_y1-100)+5,str(invo_data[8]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-120)+5,"Total Paid")
              pdf.drawRightString(578,(calc_y1-120)+5,str(invo_data[9]) + " " + comp_data[6])

              pdf.drawString(352,(calc_y1-140)+5,"Balance")
              pdf.drawRightString(578,(calc_y1-140)+5,str(invo_data[10]) + " " + comp_data[6])

              pdf.setStrokeColorRGB(255,10,0)
              pdf.line(30,(calc_y1-150),580,(calc_y1-150))

              comment_text = invo_data[44]
              wraped_text = "\n".join(wrap(comment_text,102))
              c  = wraped_text.split('\n')
                  
              if calc_y1-210 <= 45:
                pdf.showPage()
                calc_y1 = 730
                calc_y2 = 730   
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-15,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-30,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-45,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass 
              else:
                comm = len(c)
                if comm > 0:
                  pdf.drawString(32,calc_y1-165,c[0])
                  if comm > 1:
                    pdf.drawString(32,calc_y1-180,c[1])
                    if comm > 2:
                      pdf.drawString(32,calc_y1-195,c[2])
                      if comm > 3:
                        pdf.drawString(32,calc_y1-210,c[3])
                      else:
                        pass
                    else:
                      pass
                  else:
                    pass
                else:
                  pass

        
        if (calc_y1-170)-115 <= 10 or (calc_y1-190)-115 <= 10 or (calc_y1-210)-115 <= 10:
          pdf.showPage() 
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])
        else:
          pdf.drawCentredString(302,115,"Terms and Conditions")
          pdf.setStrokeColorRGB(255,10,0)
          pdf.line(30,110,580,110)
          term_text = invo_data[35]
          wraped_text = "\n".join(wrap(term_text,102))
          t  = wraped_text.split('\n')
              
          term = len(t)
          if term > 0:
            pdf.drawString(32,95,t[0])
            if term > 1:
              pdf.drawString(32,80,t[1])
              if term > 2:
                pdf.drawString(32,65,t[2])
                if term > 3:
                  pdf.drawString(32,50,t[3])
                else:
                  pass
              else:
                pass
            else:
              pass
          else:
            pass
          
          pdf.drawString(32,30,"Sales Person :")
          pdf.drawString(115,30,invo_data[14])
          pdf.drawString(32,15,invo_data[41])


      pdf.save()


      mail_invo =Toplevel()
      mail_invo.title("E-Mail Invoice List")
      p2 = PhotoImage(file = "images/fbicon.png")
      mail_invo.iconphoto(False, p2)
      mail_invo.geometry("1030x490+150+120")
      global inv_data
      inv_no = inv_tree.item(inv_tree.focus())["values"][1]
      inv_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
      inv_val = (inv_no,)
      fbcursor.execute(inv_sql,inv_val)
      inv_data = fbcursor.fetchone()
        

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", padding=5)
      email_Notebook = ttk.Notebook(mail_invo)
      email_Frame = Frame(email_Notebook, height=500, width=1080)
      account_Frame = Frame(email_Notebook, height=550, width=1080)
      email_Notebook.add(email_Frame, text="E-mail")
      email_Notebook.add(account_Frame, text="Account")
      email_Notebook.place(x=0, y=0)
      messagelbframe=LabelFrame(email_Frame,text="Message", height=450, width=730)
      messagelbframe.place(x=5, y=5)
      global email_to,email_subject,email_from,email_paasw,email_carbon,email_ltr_scroll,email_html_scroll,attach_list,lstfrm
      email_to = StringVar()
      email_subject = StringVar()
      email_from = StringVar()
      email_passw = StringVar()
      email_carbon = StringVar()
      email_to_addr_label=Label(messagelbframe, text="Email to address").place(x=5, y=5)
      email_to_addr_entry=Entry(messagelbframe, width=50,textvariable=email_to)
      email_to_addr_entry.place(x=120, y=5)
      email_to_addr_entry.delete(0,END)
      email_to_addr_entry.insert(0,inv_data[22])
      send_email_btn=Button(messagelbframe, text="Send Email", width=10, height=1,command=inv_send_mail_main)
      send_email_btn.place(x=600, y=10)
      carbon_label=Label(messagelbframe, text="Carbon copy to").place(x=5, y=32)
      carbon_entry=Entry(messagelbframe, width=50,textvariable=email_carbon)
      carbon_entry.place(x=120, y=32)
      subject_label=Label(messagelbframe, text="Subject").place(x=5, y=59)
      subject_entry=Entry(messagelbframe, width=50,textvariable=email_subject)
      subject_entry.place(x=120, y=59)
      subject_entry.delete(0,END)
      subject_entry.insert(0,"Invoice" + " " + "(" + inv_data[1] + ")")

      style = ttk.Style()
      style.theme_use('default')
      style.configure('TNotebook.Tab', background="#999999", width=20, padding=5)
      mess_Notebook = ttk.Notebook(messagelbframe)
      emailmessage_Frame = Frame(mess_Notebook,height=305, width=710)
      htmlsourse_Frame = Frame(mess_Notebook, height=305, width=710)
      mess_Notebook.add(emailmessage_Frame, text="E-mail message")
      mess_Notebook.add(htmlsourse_Frame, text="Html sourse code")
      mess_Notebook.place(x=5, y=90)

      email_ltr_scroll= scrolledtext.ScrolledText(emailmessage_Frame, height=17, width=86, bg="white",undo=True,exportselection=False)
      email_ltr_scroll.config(inactiveselectbackground=email_ltr_scroll.cget("selectbackground"))
      email_ltr_scroll.place(x=0, y=28)

      sel_all_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=selectall,command=lambda:email_ltr_scroll.event_generate('<Control a>'))
      sel_all_btn.place(x=0, y=1)  
      cut_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=cut,command=lambda :email_ltr_scroll.event_generate('<Control x>'))
      cut_btn.place(x=36, y=1)
      copy_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=copy,command=lambda :email_ltr_scroll.event_generate('<Control c>'))
      copy_btn.place(x=73, y=1)
      paste_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=paste,command=lambda :email_ltr_scroll.event_generate('<Control v>'))
      paste_btn.place(x=105, y=1)
      undo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=undo,command=email_ltr_scroll.edit_undo)
      undo_btn.place(x=140, y=1)
      redo_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=redo,command=email_ltr_scroll.edit_redo)
      redo_btn.place(x=175, y=1)

      def bold_text():
        bold_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        bold_font.configure(weight="bold")

        email_ltr_scroll.tag_configure("bold", font=bold_font)

        current_tags = email_ltr_scroll.tag_names("sel.first")

        if "bold" in current_tags:
          email_ltr_scroll.tag_remove("bold", "sel.first", "sel.last")
        else:
          email_ltr_scroll.tag_add("bold", "sel.first", "sel.last")
      
      bold_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=bold,command=bold_text)
      bold_btn.place(x=210, y=1)

      def italic_text():
        italic_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        italic_font.configure(slant="italic")

        email_ltr_scroll.tag_configure("italic", font=italic_font)

        current_tags = email_ltr_scroll.tag_names("sel.first")

        if "italic" in current_tags:
          email_ltr_scroll.tag_remove("italic", "sel.first", "sel.last")
        else:
          email_ltr_scroll.tag_add("italic", "sel.first", "sel.last")
      italic_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=italics,command=italic_text)
      italic_btn.place(x=245, y=1)

      def underline_text():
        try:
          if email_ltr_scroll.tag_nextrange('underline_selection', 'sel.first', 'sel.last') != ():
              email_ltr_scroll.tag_remove('underline_selection', 'sel.first', 'sel.last')
          else:
              email_ltr_scroll.tag_add('underline_selection', 'sel.first', 'sel.last')
              email_ltr_scroll.tag_configure('underline_selection', underline=True)
        except TclError:
            pass
      underline_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=underline,command=underline_text)
      underline_btn.place(x=280, y=1)

      def align_left():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('left',justify=LEFT)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'left')
      align_lbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=left,command=align_left)
      align_lbtn.place(x=315, y=1)

      def align_right():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('right',justify=RIGHT)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'right')
      align_rbtn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=right,command=align_right)
      align_rbtn.place(x=350, y=1)

      def align_center():
        data = email_ltr_scroll.get(0.0,END)
        email_ltr_scroll.tag_config('center',justify=CENTER)
        email_ltr_scroll.delete(0.0,END)
        email_ltr_scroll.insert(INSERT,data,'center')
      align_cbtn= Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=center,command=align_center)
      align_cbtn.place(x=385, y=1)
      hyper_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=hyperlink)
      hyper_btn.place(x=420, y=1)
      remove_btn = Button(emailmessage_Frame,width=31,height=23,compound = LEFT,image=remove,command=lambda :email_ltr_scroll.delete(0.0,END))
      remove_btn.place(x=455, y=1)


      def color_text():
        color = colorchooser.askcolor()[1]
        if color:
          color_font = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))

          email_ltr_scroll.tag_configure("colored", font=color_font, foreground=color)

          current_tags = email_ltr_scroll.tag_names("sel.first")

          if "colored" in current_tags:
            email_ltr_scroll.tag_remove("colored", "sel.first", "sel.last")
          else:
            email_ltr_scroll.tag_add("colored", "sel.first", "sel.last")
      color_btn = Button(emailmessage_Frame, width=31, height=23,compound = LEFT,image=color,command=color_text)
      color_btn.place(x=490, y=1)

      def fontsize_chooser(event):
        font_size = font.Font(email_ltr_scroll, email_ltr_scroll.cget("font"))
        font_size.configure(size=int(fontsize_combo.get())*7)

        email_ltr_scroll.tag_configure("size", font=font_size)
        current_tags = email_ltr_scroll.tag_names("sel.first")

        email_ltr_scroll.tag_add("size", "sel.first", "sel.last")

      
      fontsize_combo = ttk.Combobox(emailmessage_Frame, width=6, height=10)
      fontsize_combo.place(x=600, y=5)
      fontsize_combo['values'] = ("1","2","3","4","5","6","7")
      fontsize_combo.current(0)
      fontsize_combo.bind("<<ComboboxSelected>>",fontsize_chooser)
      btn1=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=selectall).place(x=0, y=1)
      btn2=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=cut).place(x=36, y=1)
      btn3=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=copy).place(x=73, y=1)
      btn4=Button(htmlsourse_Frame,width=31,height=23,compound = LEFT,image=paste).place(x=105, y=1)
      email_html_scroll=scrolledtext.ScrolledText(htmlsourse_Frame,undo=True, height=350, width=710, bg="white")
      email_html_scroll.place(x=0, y=28)
      attachlbframe=LabelFrame(email_Frame,text="Attachment(s)", height=350, width=283)
      attachlbframe.place(x=740, y=5)
      lstfrm = StringVar()
      attach_list=Listbox(attachlbframe, height=13, width=44,listvariable=lstfrm, bg="white")
      attach_list.place(x=5, y=5)
      attach_list.insert(0,inv_data[1].split('/')[0]+".pdf")
      attach_list.bind('<Double-Button-1>',show_listbox_file_main)
      lbl_btn_info=Label(attachlbframe, text="Double click on attachment to view").place(x=30, y=230)
      btn17=Button(attachlbframe, width=20, text="Add attacment file...",command=inv_UploadAction_main)
      btn17.place(x=60, y=260)
      btn18=Button(attachlbframe, width=20, text="Remove attacment",command=inv_deletefile_main)
      btn18.place(x=60, y=295)
      lbl_tt_info=Label(email_Frame, text="You can create predefined invoice, order, estimate\nand payment receipt email templates under Main\nmenu/Settings/E-Mail templates tab")
      lbl_tt_info.place(x=740, y=370)

      ready_frame=Frame(mail_invo, height=20, width=1080, bg="#b3b3b3").place(x=0,y=530)
      
      sendatalbframe = LabelFrame(account_Frame,text="E-Mail(Sender data)",height=270, width=600)
      sendatalbframe.place(x=5, y=5)
      your_cemail_label = Label(sendatalbframe, text="Your company email address").place(x=5, y=30)
      your_cemail_entry = Entry(sendatalbframe, width=40)
      your_cemail_entry.place(x=195, y=30)

      your_cpass_label = Label(sendatalbframe, text="Your Password").place(x=5, y=60)
      your_cpass_entry = Entry(sendatalbframe, width=40,show='*')
      your_cpass_entry.place(x=195, y=60)


  inv_mainFrame=Frame(tab1, relief=GROOVE, bg="#f8f8f2")
  inv_mainFrame.pack(side="top", fill=BOTH)

  inv_midFrame=Frame(inv_mainFrame, bg="#f5f3f2", height=60)
  inv_midFrame.pack(side="top", fill=X)

  w = Canvas(inv_midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=(5, 2))
  w = Canvas(inv_midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=(0, 5))

  create_invoice = Button(inv_midFrame,compound="top", text="Create new\nInvoice",relief=RAISED, image=photo,bg="#f5f3f2", fg="black", height=55, bd=1, width=55,command=inv_create)
  create_invoice.pack(side="left", pady=3, ipadx=4)

  edit_invoice = Button(inv_midFrame,compound="top", text="View/Edit\nInvoice",relief=RAISED, image=photo1,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=inv_edit_view)
  edit_invoice.pack(side="left")

  delete_invoice = Button(inv_midFrame,compound="top", text="Delete\nSelected",relief=RAISED, image=photo2,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=inv_delete_selected)
  delete_invoice.pack(side="left")

  w = Canvas(inv_midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=5)


  w = Canvas(inv_midFrame, width=1, height=65, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=5)

  print_preview = Button(inv_midFrame,compound="top", text="Print\nPreview",relief=RAISED, image=photo4,bg="#f8f8f2", fg="black", height=55, bd=1, width=55, activebackground="red",command=printpreview)
  print_preview.pack(side="left")

  print_invoice_main = Button(inv_midFrame,compound="top", text="Print\nSelected",relief=RAISED, image=photo5,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=printinvoice_main)
  print_invoice_main.pack(side="left")

  w = Canvas(inv_midFrame, width=1, height=55, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=5)

  mail_invoice_main = Button(inv_midFrame,compound="top", text=" E-mail \nInvoice",relief=RAISED, image=photo6,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=email_invoice_main)
  mail_invoice_main.pack(side="left")

  smsLabel = Button(inv_midFrame,compound="top", text="Send SMS\nnotification",relief=RAISED, image=photo10,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=sms)
  smsLabel.pack(side="left")

  w = Canvas(inv_midFrame, width=1, height=55, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=5)

  search_invoice = Button(inv_midFrame,compound="top", text="Search in\nInvoices",relief=RAISED, image=photo7,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=invo_search)
  search_invoice.pack(side="left")

  comp_sql = "SELECT * FROM company"
  fbcursor.execute(comp_sql,)
  comp_data = fbcursor.fetchone()

  ################### filter invoice by date ##################
  def filterby_date():
    if check_invbydate.get() == 1:
      start_date = inv_datefrom_entry.get_date()
      end_date = inv_dateto_entry.get_date()
      date_sql = "SELECT * FROM invoice WHERE invodate BETWEEN %s AND %s"
      date_val = (start_date,end_date)
      fbcursor.execute(date_sql,date_val)
      date_data = fbcursor.fetchall()

      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql,)
      comp_data = fbcursor.fetchone()

      for record in inv_tree.get_children():
        inv_tree.delete(record)

      countd = 0
      for i in date_data:
        if comp_data[7] == "before amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
        elif comp_data[7] == "after amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
        elif comp_data[7] == "before amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
        elif comp_data[7] == "after amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
      countd += 1

      try:
        if showtotsum_btn['text'] == "Hide totals\nSum":
          it = []
          tp = []
          bl = []
          for i in inv_tree.get_children():
            invtot = inv_tree.item(i,'values')[9]
            totpaid = inv_tree.item(i,'values')[10]
            balance = inv_tree.item(i,'values')[11]
            if comp_data[7] == "before amount":
              it.append(invtot.split(str(comp_data[6]))[-1])
              tp.append(totpaid.split(str(comp_data[6]))[-1])
              bl.append(balance.split(str(comp_data[6]))[-1])
            if comp_data[7] == "after amount":
              it.append(invtot.split(str(comp_data[6]))[0])
              tp.append(totpaid.split(str(comp_data[6]))[0])
              bl.append(balance.split(str(comp_data[6]))[0])
            if comp_data[7] == "before amount with space":
              it.append(invtot.split(' ')[-1])
              tp.append(totpaid.split(' ')[-1])
              bl.append(balance.split(' ')[-1])
            if comp_data[7] == "after amount with space":
              it.append(invtot.split(' ')[0])
              tp.append(totpaid.split(' ')[0])
              bl.append(balance.split(' ')[0])

          total_invtot = 0.0
          total_totpaid = 0.0
          total_balance = 0.0
          for a in it:
            total_invtot += float(a)
          for b in tp:
            total_totpaid += float(b)
          for c in bl:
            total_balance += float(c)
          if comp_data[7] == "before amount":
            invtot_label.config(text=comp_data[6] + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + str(round(total_balance,2)))
          elif comp_data[7] == "after amount":
            invtot_label.config(text=str(round(total_invtot,2)) + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + comp_data[6])
          elif comp_data[7] == "before amount  with space":
            invtot_label.config(text=comp_data[6] + " " + str(round(total_invtot,2)))
            totpaid_label.config(text=comp_data[6] + " " + str(round(total_totpaid,2)))
            balance_label.config(text=comp_data[6] + " " + str(round(total_balance,2)))
          elif comp_data[7] == "after amount with space":
            invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data[6])
            totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data[6])
            balance_label.config(text=str(round(total_balance,2)) + " " + comp_data[6])
        else:
          pass
      except:
        pass

      if comp_data[10] == "mm-dd-yyyy":
        s = datetime.strftime(start_date,"%m-%d-%Y")
        e = datetime.strftime(end_date,"%m-%d-%Y")
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(s) + " - " + str(e) + ")")
      elif comp_data[10] == "dd-mm-yyyy":
        s = datetime.strftime(start_date,"%d-%m-%Y")
        e = datetime.strftime(end_date,"%d-%m-%Y")
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(s) + " - " + str(e) + ")")
      elif comp_data[10] == "yyyy.mm.dd":
        sd = datetime.strptime(str(start_date),"%Y-%m-%d")
        std = '{0}.{1:02}.{2:02}'.format(sd.year,sd.month,sd.day)
        ed = datetime.strptime(str(end_date),"%Y-%m-%d")
        end = '{0}.{1:02}.{2:02}'.format(ed.year,ed.month,ed.day)
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(std) + " - " + str(end) + ")")
      elif comp_data[10] == "mm/dd/yyyy":
        s = datetime.strftime(start_date,"%m/%d/%Y")
        e = datetime.strftime(end_date,"%m/%d/%Y")
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(s) + " - " + str(e) + ")")
      elif comp_data[10] == "dd/mm/yyyy":
        s = datetime.strftime(start_date,"%d/%m/%Y")
        e = datetime.strftime(end_date,"%d/%m/%Y")
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(s) + " - " + str(e) + ")")
      elif comp_data[10] == "dd.mm.yyyy":
        sd = datetime.strptime(str(start_date),"%Y-%m-%d")
        std = '{0:02}.{1:02}.{2:02}'.format(sd.day,sd.month,sd.year)
        ed = datetime.strptime(str(end_date),"%Y-%m-%d")
        end = '{0:02}.{1:02}.{2:02}'.format(ed.day,ed.month,ed.year)
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(std) + " - " + str(end) + ")")
      elif comp_data[10] == "yyyy/mm/dd":
        s = datetime.strftime(start_date,"%Y/%m/%d")
        e = datetime.strftime(end_date,"%Y/%m/%d")
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(s) + " - " + str(e) + ")")
      else:
        sd = datetime.strptime(str(start_date),"%Y-%m-%d")
        std = '{0}/{1}/{2:02}'.format(sd.month,sd.day,sd.year % 100)
        ed = datetime.strptime(str(end_date),"%Y-%m-%d")
        end = '{0}/{1}/{2:02}'.format(ed.month,ed.day,ed.year % 100)
        invoice_all_label.config(text="Invoices(Fitered list - Invoice date period: " + "" + str(std) + " - " + str(end) + ")")
    else:
      pass

  inv_lbframe = LabelFrame(inv_midFrame, height=60, width=200, bg="#f8f8f2")
  inv_lbframe.pack(side="left", padx=10, pady=0)
  inv_datefrom_lbl = Label(inv_lbframe, text="Invoice date from : ", bg="#f8f8f2")
  inv_datefrom_lbl.grid(row=0, column=0, pady=5, padx=(5, 0))
  inv_dateto_lbl = Label(inv_lbframe, text="Invoice date to  :  ", bg="#f8f8f2")
  inv_dateto_lbl.grid(row=1, column=0, pady=5, padx=(5, 0))
  if comp_data[10] == "mm-dd-yyyy":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="mm-dd-yyyy")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="mm-dd-yyyy")
  elif comp_data[10] == "dd-mm-yyyy":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd-mm-yyyy")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd-mm-yyyy")
  elif comp_data[10] == "yyyy.mm.dd":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="yyyy.mm.dd")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="yyyy.mm.dd")
  elif comp_data[10] == "mm/dd/yyyy":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="mm/dd/yyyy")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="mm/dd/yyyy")
  elif comp_data[10] == "dd/mm/yyyy":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd/mm/yyyy")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd/mm/yyyy")
  elif comp_data[10] == "dd.mm.yyyy":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd.mm.yyyy")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="dd.mm.yyyy")
  elif comp_data[10] == "yyyy/mm/dd":
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15,date_pattern="yyyy/mm/dd")
    inv_dateto_entry = DateEntry(inv_lbframe, width=15,date_pattern="yyyy/mm/dd")
  else:
    inv_datefrom_entry = DateEntry(inv_lbframe, width=15)
    inv_dateto_entry = DateEntry(inv_lbframe, width=15)
  inv_datefrom_entry.grid(row=0, column=1)
  inv_dateto_entry.grid(row=1, column=1)
  check_invbydate = IntVar()
  chkbtn1 = Checkbutton(inv_lbframe, text = "Apply filter", variable = check_invbydate, onvalue = 1, offvalue = 0, height = 2, width = 8, bg="#f8f8f2",command=filterby_date)
  chkbtn1.grid(row=0, column=2, rowspan=2, padx=(5,5))


  # Refresh Invoice
  def refresh_invoice():
    sql = "SELECT * FROM Invoice"
    fbcursor.execute(sql)
    invoice_records = fbcursor.fetchall()

    for record in inv_tree.get_children():
      inv_tree.delete(record)

    count = 0
    for i in invoice_records:
      if True:
        if comp_data[7] == "before amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
        elif comp_data[7] == "after amount":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
        elif comp_data[7] == "before amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
        elif comp_data[7] == "after amount with space":
          inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
      else:
        pass
    count += 1


  ######### hide total sum #############
  def inv_hidetotsum():
    showtotsum_btn.config(text="Show totals\nSum",command=inv_showtotsum)
    invtot_label.config(text='')
    totpaid_label.config(text='')
    balance_label.config(text='')


  ######### show total sum #############
  def inv_showtotsum():
    showtotsum_btn.config(text="Hide totals\nSum",command=inv_hidetotsum)

    it = []
    tp = []
    bl = []
    for i in inv_tree.get_children():
      invtot = inv_tree.item(i,'values')[9]
      totpaid = inv_tree.item(i,'values')[10]
      balance = inv_tree.item(i,'values')[11]
      if comp_data[7] == "before amount":
        it.append(invtot.split(str(comp_data[6]))[-1])
        tp.append(totpaid.split(str(comp_data[6]))[-1])
        bl.append(balance.split(str(comp_data[6]))[-1])
      if comp_data[7] == "after amount":
        it.append(invtot.split(str(comp_data[6]))[0])
        tp.append(totpaid.split(str(comp_data[6]))[0])
        bl.append(balance.split(str(comp_data[6]))[0])
      if comp_data[7] == "before amount with space":
        it.append(invtot.split(' ')[-1])
        tp.append(totpaid.split(' ')[-1])
        bl.append(balance.split(' ')[-1])
      if comp_data[7] == "after amount with space":
        it.append(invtot.split(' ')[0])
        tp.append(totpaid.split(' ')[0])
        bl.append(balance.split(' ')[0])

    total_invtot = 0.0
    total_totpaid = 0.0
    total_balance = 0.0
    for a in it:
      total_invtot += float(a)
    for b in tp:
      total_totpaid += float(b)
    for c in bl:
      total_balance += float(c)
    if comp_data[7] == "before amount":
      invtot_label.config(text=comp_data[6] + str(round(total_invtot,2)))
      totpaid_label.config(text=comp_data[6] + str(round(total_totpaid,2)))
      balance_label.config(text=comp_data[6] + str(round(total_balance,2)))
    elif comp_data[7] == "after amount":
      invtot_label.config(text=str(round(total_invtot,2)) + comp_data[6])
      totpaid_label.config(text=str(round(total_totpaid,2)) + comp_data[6])
      balance_label.config(text=str(round(total_balance,2)) + comp_data[6])
    elif comp_data[7] == "before amount  with space":
      invtot_label.config(text=comp_data[6] + " " + str(round(total_invtot,2)))
      totpaid_label.config(text=comp_data[6] + " " + str(round(total_totpaid,2)))
      balance_label.config(text=comp_data[6] + " " + str(round(total_balance,2)))
    elif comp_data[7] == "after amount with space":
      invtot_label.config(text=str(round(total_invtot,2)) + " " + comp_data[6])
      totpaid_label.config(text=str(round(total_totpaid,2)) + " " + comp_data[6])
      balance_label.config(text=str(round(total_balance,2)) + " " + comp_data[6])



  inv_refresh_btn = Button(inv_midFrame,compound="top", text="Refresh\nInvoice list",relief=RAISED, image=photo8,fg="black", height=55, bd=1, width=55,command=refresh_invoice)
  inv_refresh_btn.pack(side="left")

  w = Canvas(inv_midFrame, width=1, height=55, bg="#b3b3b3", bd=0)
  w.pack(side="left", padx=5)

  showtotsum_btn = Button(inv_midFrame,compound="top", text="Show totals\nSum",relief=RAISED, image=photo9,bg="#f8f8f2", fg="black", height=55, bd=1, width=55,command=inv_showtotsum)
  showtotsum_btn.pack(side="left")

  invoice_all_label = Label(inv_mainFrame, text="Invoices(All)", font=("arial", 18), bg="#f8f8f2")
  invoice_all_label.pack(side="left", padx=(20,0))

  category_filter_lbl = Label(inv_mainFrame, text="Category filter", font=("arial", 15), bg="#f8f8f2")
  category_filter_lbl.pack(side="left", padx=(800,0))


  def filterby_category(event):
    fdata = category_filtercombo.get()
    for record in inv_tree.get_children():
      inv_tree.delete(record)

    filter_sql = "SELECT * FROM invoice WHERE category=%s"
    filter_val = (fdata,)
    fbcursor.execute(filter_sql,filter_val)
    filter_data = fbcursor.fetchall()

    countf = 0
    for i in filter_data:
      if comp_data[7] == "before amount":
        inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
      elif comp_data[7] == "after amount":
        inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
      elif comp_data[7] == "before amount with space":
        inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
      elif comp_data[7] == "after amount with space":
        inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
    countf += 1

  category_sql = "SELECT DISTINCT category FROM invoice"
  fbcursor.execute(category_sql,)
  category_data = fbcursor.fetchall()
  category_filtercombo = ttk.Combobox(inv_mainFrame,)
  category_filtercombo['values'] = category_data
  category_filtercombo.current(0)
  category_filtercombo.pack(side="right", padx=(0,50))
  category_filtercombo.bind("<<ComboboxSelected>>",filterby_category)

  class MyApp:
    def __init__(self, parent):
      
      self.myParent = parent 

      self.myContainer1 = Frame(parent) 
      self.myContainer1.pack()
      
      self.top_frame = Frame(self.myContainer1) 
      self.top_frame.pack(side=TOP,
        fill=BOTH, 
        expand=YES,
        )  

      self.left_frame = Frame(self.top_frame, background="white",
        borderwidth=5,  relief=RIDGE,
        height=250, 
        width=2000, 
        )
      self.left_frame.pack(side=LEFT,
        fill=BOTH, 
        expand=YES,
        )

      #Invoice main tree
      global inv_tree,invtot_label,totpaid_label,balance_label,inv_product_tree
      inv_tree = ttk.Treeview(self.left_frame, columns = (1,2,3,4,5,6,7,8,9,10,11,12), height = 15, show = "headings")
      inv_tree.pack(side = 'top')
      inv_tree.heading(1)
      inv_tree.heading(2, text="Invoice#")
      inv_tree.heading(3, text="Invoice date")
      inv_tree.heading(4, text="Due date")
      inv_tree.heading(5, text="Customer Name")
      inv_tree.heading(6, text="Status")
      inv_tree.heading(7, text="Emailed on")
      inv_tree.heading(8, text="Printed on")
      inv_tree.heading(9, text="SMS on")
      inv_tree.heading(10, text="Invoice Total")
      inv_tree.heading(11, text="Total Paid")
      inv_tree.heading(12, text="Balance")
      inv_tree.column(1, width = 35)
      inv_tree.column(2, width = 130)
      inv_tree.column(3, width = 110)
      inv_tree.column(4, width = 110)
      inv_tree.column(5, width = 180)
      inv_tree.column(6, width = 110)
      inv_tree.column(7, width = 130)
      inv_tree.column(8, width = 110)
      inv_tree.column(9, width = 110)
      inv_tree.column(10, width = 110)
      inv_tree.column(11, width = 110)
      inv_tree.column(12, width = 100)
     
      invtot_label = Label(self.left_frame,bg="#f5f3f2",anchor="w")
      invtot_label.place(x=1015,y=300,width=110,height=18)

      totpaid_label = Label(self.left_frame,bg="#f5f3f2",anchor="w")
      totpaid_label.place(x=1125,y=300,width=110,height=18)

      balance_label = Label(self.left_frame,bg="#f5f3f2",anchor="w")
      balance_label.place(x=1235,y=300,width=100,height=18)

      sql = "SELECT * FROM Invoice"
      fbcursor.execute(sql)
      invoice_records = fbcursor.fetchall()

      comp_sql = "SELECT * FROM company"
      fbcursor.execute(comp_sql)
      comp_data = fbcursor.fetchone()

      count = 0
      for i in invoice_records:
        if True:
          if comp_data[7] == "before amount":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + str(i[8]),comp_data[6] + str(i[9]),comp_data[6] + str(i[10])))
          elif comp_data[7] == "after amount":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + comp_data[6],str(i[9]) + comp_data[6],str(i[10]) + comp_data[6]))
          elif comp_data[7] == "before amount with space":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),comp_data[6] + " " + str(i[9]),comp_data[6] + " " + str(i[10])))
          elif comp_data[7] == "after amount with space":
            inv_tree.insert(parent='',index='end',iid=i,text='',values=('',i[1], i[2], i[3], i[18], i[4], i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],str(i[9]) + " " + comp_data[6],str(i[10]) + " " + comp_data[6]))
        else:
          pass
      count += 1


      def convertion_2(B):
        BYTE = float(B)
        KB = float(1024)
        MB = float(KB**2)

        if BYTE < KB:
          return '{0} {1}'.format(BYTE,'Bytes' if 0 == B > 1 else 'Byte')
        elif KB <= BYTE < MB:
          return '{0:.2f} KB'.format(BYTE / KB)
        elif MB <= BYTE:
          return '{0:.2f} MB'.format(BYTE / MB)


      def record_picker(event):
        selected_inv = inv_tree.focus()
        selected_product = inv_tree.item(selected_inv)["values"][1]
        
        for record in inv_product_tree.get_children():
          inv_product_tree.delete(record)
        pro_sql = "SELECT * FROM storingproduct WHERE invoice_number=%s"
        pro_val = (selected_product,)
        fbcursor.execute(pro_sql,pro_val)
        product_details = fbcursor.fetchall()
        countpro = 0
        for i in product_details:
          if comp_data[12] == "1":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],str(i[13]) + " " + comp_data[6]))
          elif comp_data[12] == "2":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],i[11],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],i[11],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],i[11],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],i[11],str(i[13]) + " " + comp_data[6]))
          elif comp_data[12] == "3":
            if comp_data[7] == "before amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + "" + str(i[8]),i[9],i[11],i[12],comp_data[6] + "" + str(i[13])))
            elif comp_data[7] == "after amount":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + "" + comp_data[6],i[9],i[11],i[12],str(i[13]) + "" + comp_data[6]))
            elif comp_data[7] == "before amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],comp_data[6] + " " + str(i[8]),i[9],i[11],i[12],comp_data[6] + " " + str(i[13])))
            elif comp_data[7] == "after amount with space":
              inv_product_tree.insert(parent='',index='end',iid=i,text='',values=(' ',i[5], i[6], i[7],str(i[8]) + " " + comp_data[6],i[9],i[11],i[12],str(i[13]) + " " + comp_data[6]))
        countpro += 1

        for record in inv_pay_tree.get_children():
          inv_pay_tree.delete(record)
        pay_sql = "SELECT * FROM payments WHERE invoice_number=%s"
        pay_val = (selected_product,)
        fbcursor.execute(pay_sql,pay_val)
        pay_details = fbcursor.fetchall()

        countpay = 0
        for pay in pay_details:
          if comp_data[7] == "before amount":
            inv_pay_tree.insert(parent='',index='end',iid=pay,text='',values=('',pay[0],pay[1],pay[2],pay[3],comp_data[6] + "" + str(pay[4])))
          elif comp_data[7] == "after amount":
            inv_pay_tree.insert(parent='',index='end',iid=pay,text='',values=('',pay[0],pay[1],pay[2],pay[3],str(pay[4]) + "" + comp_data[6]))
          elif comp_data[7] == "before amount with space":
            inv_pay_tree.insert(parent='',index='end',iid=pay,text='',values=('',pay[0],pay[1],pay[2],pay[3],comp_data[6] + " " + str(pay[4])))
          elif comp_data[7] == "after amount with space":
            inv_pay_tree.insert(parent='',index='end',iid=pay,text='',values=('',pay[0],pay[1],pay[2],pay[3],str(pay[4]) + " " + comp_data[6]))
        countpay += 1

        private_sql = "SELECT * FROM invoice WHERE invoice_number=%s"
        private_val = (selected_product,)
        fbcursor.execute(private_sql,private_val)
        private_details = fbcursor.fetchone()
        inv_private_note.delete("1.0",END)
        inv_private_note.insert("1.0",private_details[45])

        for record in inv_doc_tree.get_children():
          inv_doc_tree.delete(record)
        doc_sql = "SELECT * FROM documents WHERE invoice_number=%s"
        doc_val = (selected_product,)
        fbcursor.execute(doc_sql,doc_val)
        doc_details = fbcursor.fetchall()

        countdoc = 0
        for doc in doc_details:
          file_size_3 = convertion_2(os.path.getsize("images/"+doc[6]))
          inv_doc_tree.insert(parent='',index='end',iid=doc,text='',values=('',doc[6],file_size_3))
        countdoc += 1
      inv_tree.bind('<ButtonRelease>',record_picker)



      scrollbar = Scrollbar(self.left_frame)
      scrollbar.place(x=995+340, y=0, height=300+20)
      scrollbar.config( command=inv_tree.yview )

      tabControl = ttk.Notebook(self.left_frame,width=1)
      tab1 = ttk.Frame(tabControl)
      tab2 = ttk.Frame(tabControl)
      tab3=  ttk.Frame(tabControl)
      tab4 = ttk.Frame(tabControl)
      tab5 = ttk.Frame(tabControl)
      tabControl.add(tab1,image=invoices,compound = LEFT, text ='Invoice Items',)
      tabControl.add(tab2,image=photo11,compound = LEFT, text ='Payements')
      tabControl.add(tab3,image=smslog,compound = LEFT, text ='Invoice private notes')
      tabControl.add(tab4,image=photo11,compound = LEFT, text ='SMS Log')
      tabControl.add(tab5,image=photo11,compound = LEFT, text ='Documents')
      tabControl.pack(expand = 1, fill ="both")
      
      inv_comp_sql = "SELECT * FROM company"
      fbcursor.execute(inv_comp_sql,)
      inv_comp_data = fbcursor.fetchone()

      if not inv_comp_data:
        inv_product_tree = ttk.Treeview(tab1, columns = (1,2,3,4,5,6,7), height = 15, show = "headings")
        inv_product_tree.pack(side = 'top')
        inv_product_tree.heading(1)
        inv_product_tree.heading(2, text="Product/Service ID",)
        inv_product_tree.heading(3, text="Name")
        inv_product_tree.heading(4, text="Description")
        inv_product_tree.heading(5, text="Price")
        inv_product_tree.heading(6, text="QTY")
        inv_product_tree.heading(7, text="Line Total")   
        inv_product_tree.column(1, width = 75)
        inv_product_tree.column(2, width = 230)
        inv_product_tree.column(3, width = 230)
        inv_product_tree.column(4, width = 275)
        inv_product_tree.column(5, width = 130)
        inv_product_tree.column(6, width = 130)
        inv_product_tree.column(7, width = 130)
      elif inv_comp_data[12] == "1":
        inv_product_tree = ttk.Treeview(tab1, columns = (1,2,3,4,5,6,7), height = 15, show = "headings")
        inv_product_tree.pack(side = 'top')
        inv_product_tree.heading(1)
        inv_product_tree.heading(2, text="Product/Service ID",)
        inv_product_tree.heading(3, text="Name")
        inv_product_tree.heading(4, text="Description")
        inv_product_tree.heading(5, text="Price")
        inv_product_tree.heading(6, text="QTY")
        inv_product_tree.heading(7, text="Line Total")   
        inv_product_tree.column(1, width = 35)
        inv_product_tree.column(2, width = 265)
        inv_product_tree.column(3, width = 230)
        inv_product_tree.column(4, width = 295)
        inv_product_tree.column(5, width = 195)
        inv_product_tree.column(6, width = 125)
        inv_product_tree.column(7, width = 195)
      elif inv_comp_data[12] == "2":
        inv_product_tree = ttk.Treeview(tab1, columns = (1,2,3,4,5,6,7,8), height = 15, show = "headings")
        inv_product_tree.pack(side = 'top')
        inv_product_tree.heading(1)
        inv_product_tree.heading(2, text="Product/Service ID",)
        inv_product_tree.heading(3, text="Name")
        inv_product_tree.heading(4, text="Description")
        inv_product_tree.heading(5, text="Price")
        inv_product_tree.heading(6, text="QTY")
        inv_product_tree.heading(7, text="Tax1")
        inv_product_tree.heading(8, text="Line Total")   
        inv_product_tree.column(1, width = 35)
        inv_product_tree.column(2, width = 250)
        inv_product_tree.column(3, width = 210)
        inv_product_tree.column(4, width = 275)
        inv_product_tree.column(5, width = 180)
        inv_product_tree.column(6, width = 110)
        inv_product_tree.column(7, width = 100)
        inv_product_tree.column(8, width = 180)
      elif inv_comp_data[12] == "3":
        inv_product_tree = ttk.Treeview(tab1, columns = (1,2,3,4,5,6,7,8,9), height = 15, show = "headings")
        inv_product_tree.pack(side = 'top')
        inv_product_tree.heading(1)
        inv_product_tree.heading(2, text="Product/Service ID",)
        inv_product_tree.heading(3, text="Name")
        inv_product_tree.heading(4, text="Description")
        inv_product_tree.heading(5, text="Price")
        inv_product_tree.heading(6, text="QTY")
        inv_product_tree.heading(7, text="Tax1")
        inv_product_tree.heading(8, text="Tax2")
        inv_product_tree.heading(9, text="Line Total")   
        inv_product_tree.column(1, width = 35)
        inv_product_tree.column(2, width = 230)
        inv_product_tree.column(3, width = 200)
        inv_product_tree.column(4, width = 275)
        inv_product_tree.column(5, width = 160)
        inv_product_tree.column(6, width = 100)
        inv_product_tree.column(7, width = 90)
        inv_product_tree.column(8, width = 90)
        inv_product_tree.column(9, width = 160)


      inv_pay_tree = ttk.Treeview(tab2, columns = (1,2,3,4,5,6), height = 15, show = "headings")
      inv_pay_tree.pack(side = 'top')
      inv_pay_tree.heading(1)
      inv_pay_tree.heading(2, text="Payement ID",)
      inv_pay_tree.heading(3, text="Payement Date")
      inv_pay_tree.heading(4, text="PaidBy")
      inv_pay_tree.heading(5, text="Description")
      inv_pay_tree.heading(6, text="Amount")
      inv_pay_tree.column(1, width = 35)
      inv_pay_tree.column(2, width = 230)
      inv_pay_tree.column(3, width = 230)
      inv_pay_tree.column(4, width = 230)
      inv_pay_tree.column(5, width = 380)
      inv_pay_tree.column(6, width = 235)
      

      inv_private_note=Text(tab3, width=170,height=10)
      inv_private_note.place(x=10, y=10)

      inv_doc_tree = ttk.Treeview(tab5, columns = (1,2,3), height = 15, show = "headings")
      inv_doc_tree.pack(side = 'top')
      inv_doc_tree.heading(1)
      inv_doc_tree.heading(2, text="Filename")
      inv_doc_tree.heading(3, text="File Size")
      inv_doc_tree.column(1, width = 50)
      inv_doc_tree.column(2, width = 1000)
      inv_doc_tree.column(3, width = 290)

      scrollbar = Scrollbar(self.left_frame)
      scrollbar.place(x=980+350, y=360, height=195)
      scrollbar.config( command=inv_doc_tree.yview )
        
  myapp = MyApp(tab1) 
    
  ######################## FRONT PAGE OF SETTINGS SECTION   #######################################################################
  
      
  settingsframe=Frame(tab10, relief=GROOVE, bg="#f8f8f2")
  settingsframe.pack(side="top", fill=BOTH)
  
  settframe=Frame(settingsframe, bg="#f5f3f2", height=60)
  settframe.pack(side="top", fill=X)
  
  pn = Canvas(settframe, width=1, height=65, bg="#b3b3b3", bd=0)
  pn.pack(side="left", padx=(5, 2))
  pn = Canvas(settframe, width=1, height=65, bg="#b3b3b3", bd=0)
  pn.pack(side="left", padx=(0, 5))
  # def upload_filelogo():
  #   global imglogo,filename
  #   f_types =[('Png files','*.png'),('Jpg Files', '*.jpg')]
  #   filena = filedialog.askopenfilename(filetypes=f_types)
  #   shutil.copyfile(filena, os.getcwd()+'/images/'+filena.split('/')[-1])
  #   print(filena.split('/')[-1])
  #   image = Image.open(filena)
  #   resize_image = image.resize((280, 160))
  #   imglogo = ImageTk.PhotoImage(resize_image)
    # b2 = Button(secondtab,image=img)
    # b2.place(x=130, y=80)
  
    # btlogo = Button(secondtab,width=280,height=160,image=imglogo)
    # btlogo.place(x=580,y=280)
  global filename
  filename = ""
  def save_company():
    company_name = comname.get()
    company_address = caddent.get(1.0,END)
    company_mail = comemail.get()
    company_salestax =comsalestax.get()
    currency = comcur.get()
    currencysign = comcursign.get()
    currencysign_placement = comcursignpla.get()
    decimal_sepator = comdecsep.get()
    currency_example = comex.get()
    date_format = comdaf.get()
    example_dateformat = exd.get_date()
    tax = radtax.get()
    tax1name = tax1namee.get()
    tax1rate = tax1ratee.get()
    printtax1 = comptax1.get()
    tax2name = tax2namee.get()
    tax2rate = tax2ratee.get()
    printtax2 = comptax2.get()
    printimage = compimg.get()
    win_menu_colour = win_menu.get()
    radiobut = radema.get()
    cbut1 = checkb1.get()
    cbut2 = checkb2.get()
    cbut3 = checkb3.get()
    cbut4 = checkb4.get()
    cbut5 = checkb5.get()
    cbut6 = checkb6.get()
    est_prefix = est_str.get()
    est_header = win_menu1.get()
    est_text1 = est_str1.get()
    est_text2 = est_str2.get()
    est_text3 = est_str3.get()
    est_text4 = est_str4.get()
    est_text5 = est_str5.get()
    est_text6 = est_str6.get()
    est_predefined = est_str7.get(1.0,END)
    est_default = win_menu2.get()
    est_spin1 = spin1.get()
    adv_default = adv_win_menu8.get()

    child = exctree.get_children()
    var = json.dumps(child)
    sql = "select image from company"
    fbcursor.execute(sql)
    im = fbcursor.fetchone()
    sql = "select * from company"
    fbcursor.execute(sql)
    i = fbcursor.fetchall()
    if not i:
      if filename == "":
        print(12)
        sql = 'insert into company(name, address, email,salestaxno,currency,currencysign,currsignplace,  decimalseperator,excurrency,dateformat,exdate,taxtype,printimageornot,tax1name,tax1rate,printtax1,  tax2name,tax2rate,printtax2,attachment_file_type,miscellanoustab_cbutton1,miscellanoustab_cbutton2,miscellanoustab_cbutton3,miscellanoustab_cbutton4,miscellanoustab_cbutton5,miscellanoustab_cbutton6,Estimate_prefix,Customizeestimatetextlabels,Customizeestimatetextlabels1,Customizeestimatetextlabels2,Customizeestimatetextlabels3,Customizeestimatetextlabels4,Customizeestimatetextlabels5,Defaultestimatetemplate,Startingestimatenumber,Predefinedtextforestimates,adv_Selectedtemplatepreview,est_Headerboxbackgroundcolor) values(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s,%s, %s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'
        val = (company_name,company_address,company_mail,company_salestax,currency,currencysign,  currencysign_placement,decimal_sepator,currency_example,date_format,example_dateformat,tax,printimage,  tax1name,tax1rate,printtax1,tax2name,tax2rate,printtax2,radiobut,cbut1,cbut2,cbut3,cbut4,cbut5,cbut6,est_prefix,est_text1,est_text2,est_text3,est_text4,est_text5,est_text6,est_default,est_spin1,est_predefined,adv_default,est_header)
        fbcursor.execute(sql, val)
        fbilldb.commit()
      else:
        shutil.copyfile(filename, os.getcwd()+'/images/'+filename.split('/')[-1])
        sql = 'insert into company(name, address, email,salestaxno,currency,currencysign,currsignplace,  decimalseperator,excurrency,dateformat,exdate,taxtype,printimageornot,tax1name,tax1rate,printtax1,  tax2name,tax2rate,printtax2,image,attachment_file_type,miscellanoustab_cbutton1,miscellanoustab_cbutton2,miscellanoustab_cbutton3,miscellanoustab_cbutton4,miscellanoustab_cbutton5,miscellanoustab_cbutton6,Estimate_prefix,Customizeestimatetextlabels,Customizeestimatetextlabels1,Customizeestimatetextlabels2,Customizeestimatetextlabels3,Customizeestimatetextlabels4,Customizeestimatetextlabels5,Defaultestimatetemplate,Startingestimatenumber,Predefinedtextforestimates,adv_Selectedtemplatepreview,est_Headerboxbackgroundcolor) values(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'
        val = (company_name,company_address,company_mail,company_salestax,currency,currencysign,  currencysign_placement,decimal_sepator,currency_example,date_format,example_dateformat,tax,printimage,  tax1name,tax1rate,printtax1,tax2name,tax2rate,printtax2,filename.split('/')[-1],radiobut,cbut1,cbut2,cbut3,cbut4,cbut5,cbut6,est_prefix,est_text1,est_text2,est_text3,est_text4,est_text5,est_text6,est_default,est_spin1,est_predefined,adv_default,est_header)
        fbcursor.execute(sql, val)
        fbilldb.commit()
    else:
      if filename == "":
        sql = "update company set name=%s, address=%s, email=%s,salestaxno=%s,currency=%s,currencysign=%s,  currsignplace=%s,decimalseperator=%s,excurrency=%s,dateformat=%s,exdate=%s,taxtype=%s,  printimageornot=%s,tax1name=%s,tax1rate=%s,printtax1=%s,tax2name=%s,tax2rate=%s,printtax2=%s,attachment_file_type=%s,miscellanoustab_cbutton1=%s,miscellanoustab_cbutton2=%s,miscellanoustab_cbutton3=%s,miscellanoustab_cbutton4=%s,miscellanoustab_cbutton5=%s,miscellanoustab_cbutton6=%s,Estimate_prefix=%s,Customizeestimatetextlabels=%s,Customizeestimatetextlabels1=%s,Customizeestimatetextlabels2=%s,Customizeestimatetextlabels3=%s,Customizeestimatetextlabels4=%s,Customizeestimatetextlabels5=%s,Defaultestimatetemplate=%s,Startingestimatenumber=%s,Predefinedtextforestimates=%s,adv_Selectedtemplatepreview=%s,est_Headerboxbackgroundcolor=%s"
        val = (company_name,company_address,company_mail,company_salestax,currency,currencysign,  currencysign_placement,decimal_sepator,currency_example,date_format,example_dateformat,tax,printimage,  tax1name,tax1rate,printtax1,tax2name,tax2rate,printtax2,radiobut,cbut1,cbut2,cbut3,cbut4,cbut5,cbut6,est_prefix,est_text1,est_text2,est_text3,est_text4,est_text5,est_text6,est_default,est_spin1,est_predefined,adv_default,est_header)
        fbcursor.execute(sql, val)
        fbilldb.commit()
      else:
        shutil.copyfile(filename, os.getcwd()+'/images/'+filename.split('/')[-1])
        sql = "update company set name=%s, address=%s, email=%s,salestaxno=%s,currency=%s,currencysign=%s,  currsignplace=%s,decimalseperator=%s,excurrency=%s,dateformat=%s,exdate=%s,taxtype=%s,  printimageornot=%s,tax1name=%s,tax1rate=%s,printtax1=%s,tax2name=%s,tax2rate=%s,printtax2=%s,image=%s,attachment_file_type=%s,miscellanoustab_cbutton1=%s,miscellanoustab_cbutton2=%s,miscellanoustab_cbutton3=%s,miscellanoustab_cbutton4=%s,miscellanoustab_cbutton5=%s,miscellanoustab_cbutton6=%s,Estimate_prefix=%s,Customizeestimatetextlabels=%s,Customizeestimatetextlabels1=%s,Customizeestimatetextlabels2=%s,Customizeestimatetextlabels3=%s,Customizeestimatetextlabels4=%s,Customizeestimatetextlabels5=%s,Defaultestimatetemplate=%s,Startingestimatenumber=%s,Predefinedtextforestimates=%s,adv_Selectedtemplatepreview=%s,est_Headerboxbackgroundcolor=%s"
        val = (company_name,company_address,company_mail,company_salestax,currency,currencysign,  currencysign_placement,decimal_sepator,currency_example,date_format,example_dateformat,tax,printimage,  tax1name,tax1rate,printtax1,tax2name,tax2rate,printtax2,filename.split('/')[-1],radiobut,cbut1,cbut2,cbut3,cbut4,cbut5,cbut6,est_prefix,est_text1,est_text2,est_text3,est_text4,est_text5,est_text6,est_default,est_spin1,est_predefined,adv_default,est_header)
        fbcursor.execute(sql, val)
        fbilldb.commit()
      
      
  
  addcustomerIcon = ImageTk.PhotoImage(Image.open("images/user_add.png"))
  save_setting = Button(settframe,compound="top", text="Save\nSettings",relief=RAISED,    command=save_company, image=saves, font=("arial", 8),bg="#f5f3f2", fg="black", height=55, bd=1, width=55)
  save_setting.pack(side="left", pady=3, ipadx=4)
  pn = Canvas(settframe, width=1, height=65, bg="#b3b3b3", bd=0)
  pn.pack(side="left", padx=(0, 5))
  
  def wiz_page():
    global filname
    filname = ""
    def upload_cfilelogo():
      global filname
      f_types =[('Png files','*.png'),('Jpg Files', '*.jpg')]
      filname = filedialog.askopenfilename(filetypes=f_types)
      shutil.copyfile(filname, os.getcwd()+'/images/'+filname.split('/')[-1])
      image = Image.open(filname)
      resize_image = image.resize((280, 140))
      imgclogo = ImageTk.PhotoImage(resize_image)
      btclogo = Button(wiz,width=280,height=140,image=imgclogo)
      btclogo.place(x=30,y=240)
      btclogo.photo = imgclogo
    def csave():
      company_name = company_namee.get()
      company_address = company_addresse.get('1.0', 'end-1c')
      company_email = company_emaile.get()
      salestaxregno = salestaxregnoe.get()
      cprint_logopic = cplogopic.get()
      sql = "select image from company"
      fbcursor.execute(sql)
      im = fbcursor.fetchone()
      sql = "select * from company"
      fbcursor.execute(sql)
      i = fbcursor.fetchall()
      if not i:
        if filname == "":
          sql = 'insert into company(name, address, email,salestaxno,printimageornot) values(%s, %s, %s, %s, %s)'
          val = (company_name,company_address,company_email,salestaxregno,cprint_logopic)
          fbcursor.execute(sql, val)
          fbilldb.commit()
        else:
          shutil.copyfile(filname, os.getcwd()+'/images/'+filname.split('/')[-1])
          sql = 'insert into company(name, address, email,salestaxno,printimageornot,image) values(%s, %s, %s, %s, %s, %s)'
          val = (company_name,company_address,company_email,salestaxregno,cprint_logopic,filname.split('/')[-1],)
          fbcursor.execute(sql, val)
          fbilldb.commit()
      else:
        if filname == "":
          sql = "update company set name=%s, address=%s, email=%s,salestaxno=%s,printimageornot=%s"
          val = (company_name,company_address,company_email,salestaxregno,cprint_logopic)
          fbcursor.execute(sql, val)
          fbilldb.commit()
        else:
          shutil.copyfile(filname, os.getcwd()+'/images/'+filname.split('/')[-1])
          sql = "update company set name=%s, address=%s, email=%s,salestaxno=%s,printimageornot=%s,image=%s"
          val = (company_name,company_address,company_email,salestaxregno,cprint_logopic,filname.split('/')[-1])
          fbcursor.execute(sql, val)
          fbilldb.commit()
      centry.delete(0, END)
      centry.insert(0, company_name)
      caddent.delete('1.0', END)
      caddent.insert('1.0', company_address)
      cemailentry.delete(0, END)
      cemailentry.insert(0, company_email)
      ste.delete(0, END)
      ste.insert(0, salestaxregno)
      if cprint_logopic == 1:
        primage.select()
      else:
        primage.deselect()
      try:
        image = Image.open("images/"+filname.split('/')[-1])
        resize_image = image.resize((280, 160))
        image = ImageTk.PhotoImage(resize_image)
        btlogo = Button(secondtab,width=280,height=160,image=image)
        btlogo.place(x=580,y=280)
        btlogo.photo = image
      except:
        pass
      wiz.destroy()


      
      

    
    wiz = Toplevel()
    wiz.geometry("500x449+400+167")
    wiz.title("Wellcome to Quick Start Wizard")
    sql = "select * from company"
    fbcursor.execute(sql)
    secctab = fbcursor.fetchone()
    comp_infor = Label(wiz,text="Enter Your Company Information",font='arial 13 bold',fg="blue")
    comp_infor.place(x=15,y=15)
    company_da_laframe = LabelFrame(wiz,text="Company data",height=180, width=460)
    company_da_laframe.place(x=15,y=40)
    company_name = Label(wiz,text="Company name")
    company_name.place(x=30,y=60)
    company_namee = Entry(wiz,width=50)
    company_namee.place(x=160,y=60)
    if  not secctab:
      pass
    else:
      company_namee.insert(0, secctab[1])
  
    company_address = Label(wiz,text="Company address")
    company_address.place(x=30,y=90)
    company_addresse = scrolledtext.ScrolledText(wiz,)
    company_addresse.place(x=160,y=90,width=250,height=60)
    if  not secctab:
      pass
    else:
      company_addresse.insert('1.0', secctab[2])

    company_email = Label(wiz,text="Email address")
    company_email.place(x=30,y=160)
    company_emaile = Entry(wiz,width=50)
    company_emaile.place(x=160,y=160)
    if  not secctab:
      pass
    else:
      company_emaile.insert(0, secctab[3])

    salestaxregno = Label(wiz,text="Sales Tax.Reg.No")
    salestaxregno.place(x=30,y=190)
    salestaxregnoe = Entry(wiz,width=50)
    salestaxregnoe.place(x=160,y=190)
    if  not secctab:
      pass
    else:
      salestaxregnoe.insert(0, secctab[4])
    
    
    company_da_laframe = LabelFrame(wiz,text="Company logo",height=190, width=460)
    company_da_laframe.place(x=15,y=220)
    try:
      image_wiz = Image.open("images/"+secctab[13])
      resize_image = image_wiz.resize((280, 140))
      image_wiza = ImageTk.PhotoImage(resize_image)
      btclogo = Button(wiz,width=280,height=140,image=image_wiza)
      btclogo.place(x=30,y=240)
      btclogo.photo = image_wiza
    except:
      pass
    cplogopic = BooleanVar()
    cprint_logopic = Checkbutton(wiz,text='Print logo picture',bg='white',onvalue =1,
                        offvalue = 0,variable=cplogopic)
    cprint_logopic.place(x=320,y=250)
    if  not secctab:
      pass
    else:
      if secctab[14] == 1:
        cprint_logopic.select()
      else:
        cprint_logopic.deselect()
      
    load_img = Button(wiz,text='Load logo image',command=upload_cfilelogo)
    load_img.place(x=320,y=360)
    save_com_wiz = Button(wiz,text='Save',width=10,command=csave)
    save_com_wiz.place(x=370,y=415)

  quick_start_wiz = Button(settframe,compound="top", text="Quick\nStart Wizard ",relief=RAISED,    command=wiz_page, image=photo, font=("arial", 8),bg="#f5f3f2", fg="black", height=55, bd=1, width=55)
  quick_start_wiz.pack(side="left", pady=3, ipadx=4)
  pn = Canvas(settframe, width=1, height=65, bg="#b3b3b3", bd=0)
  pn.pack(side="left", padx=(0, 5))
  
  
  
  invoi1label = Label(settingsframe, text="Settings", font=("arial", 18), bg="#f8f8f2")
  invoi1label.pack(side="left", padx=(20,0))
  
  global tab06
  m = ttk.Style()
  m.theme_use('default')
  m.configure('one.TNotebook.Tab', background="white", width=20, padding=10)
  tabControl = ttk.Notebook(tab10,style='one.TNotebook.Tab')
  tab01 = ttk.Frame(tabControl)
  tab02 = ttk.Frame(tabControl)
  tab03=  ttk.Frame(tabControl)
  tab04 = ttk.Frame(tabControl)
  tab05 = ttk.Frame(tabControl)
  tab06=  ttk.Frame(tabControl)
  tab07 = ttk.Frame(tabControl)
  tab08 = ttk.Frame(tabControl)
  tab09 =  ttk.Frame(tabControl)
  tab010=  ttk.Frame(tabControl)
  tabControl.add(tab01,image=invoices,compound = LEFT, text ='Miscellaneous',)
  tabControl.add(tab02,image=orders,compound = LEFT, text ='Company settings')
  tabControl.add(tab03,image=estimates,compound = LEFT, text ='Invoiced settings')
  tabControl.add(tab04,image=recurring,compound = LEFT, text ='Order settings')
  tabControl.add(tab05,image=purchase,compound = LEFT, text ='Estimate settings') 
  tabControl.add(tab06,image=expenses,compound = LEFT, text ='Administrator panel')
  tabControl.add(tab07,image=customer,compound = LEFT, text ='Advanced settings')
  tabControl.add(tab08,image=product,compound = LEFT, text ='Email templates')
  tabControl.add(tab09,image=reports,compound = LEFT, text ='Payments')
  tabControl.add(tab010,image=setting,compound = LEFT, text ='Purchase Order')
  tabControl.pack(expand = 1, fill ="both")
  
  ################### tab01 ###################################
  sql = "select * from company"
  fbcursor.execute(sql)
  sectab = fbcursor.fetchone()
  
  firsttab1=Frame(tab01, relief=GROOVE, bg="#f8f8f2")
  firsttab1.pack(side="top", fill=BOTH)
  
  firsttab=Frame(firsttab1, bg="#f5f3f2", height=700)
  firsttab.pack(side="top", fill=BOTH)
  
  messagelbframe=LabelFrame(firsttab,text="Menu and Window Color Style", height=60, width=180)
  messagelbframe.place(x=5, y=15)
  
  win_menu = StringVar()
  winstyle = ttk.Combobox(firsttab,textvariable=win_menu)
  winstyle.place(x=22 ,y=40)
  winstyle['values'] = ('whidbey','windows XP','windows 7','windows 8','windows 10')
  winstyle.current(0)
  fbill = Label(firsttab,text="F-Billing Revolution 2022",font="arial 12 bold").place(x=220,y=20)
  
  dbhost=LabelFrame(firsttab,text="Database Server Hostname", height=60, width=415)
  dbhost.place(x=5, y=85)
  
  db = Label(firsttab, text="DESKTOP-2K")
  db.place(x=15,y=110)
  
  exc=LabelFrame(firsttab,text="Extra cost name", height=180, width=415)
  exc.place(x=5, y=155)
  
  
  
  def insert_valueexc():
    i = varexc.get()
    if i == "":
      pass
    else:
      entryexc.delete(0, END)
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      if not com:
        messagebox.showinfo("Alert", "Create Company Settings.")
      else:
        companyid = com[0]
        sql = 'insert into extra_cost_name(companyid,extra_cost_name) values(%s,%s)'
        val = (companyid,i)
        fbcursor.execute(sql,val)
        fbilldb.commit()
        for record in exctree.get_children():
          exctree.delete(record)
        sql = 'select * from extra_cost_name'
        fbcursor.execute(sql)
        setexctree = fbcursor.fetchall()
        countp = 0
        for i in setexctree:
          immm = str(i[2])
          imn = str.replace(immm," ","_")
          exctree.insert(parent='', index='end', iid=countp, text='hello', values=(imn))
          countp += 1
  # new_value = String
        
        
  
  def edit_valueexc(event):
    selected_item = exctree.selection()[0]
    temp = list(exctree.item(selected_item , 'values'))
    entryexc.delete(0, END)
    entryexc.insert(0, temp)
  
  def save_valueexc():
    i = entryexc.get()
    if i == "":
      pass
    else:
      selected0 = exctree.focus()
      valuz1= exctree.item(selected0)["values"]
      idgettingextracnid=valuz1[0]
      print(i,idgettingextracnid)
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      companyid = com[0]
      if not com:
        pass
      else:
        sql = 'update extra_cost_name set extra_cost_name=%s where extra_cost_name=%s'
        val = (i,idgettingextracnid)
        fbcursor.execute(sql,val)
        fbilldb.commit()
        entryexc.delete(0, END)
        for record in exctree.get_children():
            exctree.delete(record)
        fbcursor.execute("select *  from extra_cost_name")
        pandsdata = fbcursor.fetchall()
        countp = 0
        for i in pandsdata:
          immm = str(i[2])
          imn = str.replace(immm," ","_")
          exctree.insert('', index='end', iid=countp, text='', values=(imn))
          countp += 1
    
    
  
  def del_valueexc():
    itemid = exctree.item(exctree.focus())["values"][0]
    sql = "delete from extra_cost_name where extra_cost_name = %s"
    val = (itemid, )
    fbcursor.execute(sql, val)
    fbilldb.commit()
    exctree.delete(exctree.selection()[0])
      
      
  
    
    
    
  
  
  
  scrollbarx = Scrollbar(firsttab, orient=HORIZONTAL)
  scrollbary = Scrollbar(firsttab, orient=VERTICAL)
  exctree = ttk.Treeview(firsttab, columns=("1"),height=40,selectmode='browse', yscrollcommand=scrollbary.set,   xscrollcommand=scrollbarx.set)
  # exctree["show"]='headings'
  scrollbary.config(command=exctree.yview)
  scrollbary.place(x=394,y=200,height=125)
  scrollbarx.config(command=exctree.xview)
  scrollbarx.place(x=15,y=310, width=380)
  exctree.heading('1', text="Extra cost name",)
  # exctree.column('#0', stretch=NO, minwidth=0, width=0)
  exctree.column("#0",width=0,anchor='c', stretch=False)
  exctree.column('1',width=378,anchor='c')
  exctree.place(x=15,y=200,height=115,width=380)
  exctree.bind('<Double-Button-1>' , edit_valueexc)
  sql = 'select * from extra_cost_name'
  fbcursor.execute(sql)
  setexctree = fbcursor.fetchall()
  countp = 0
  for i in setexctree:
      print(i[2])
      immm = str(i[2])
      imn = str.replace(immm," ","_")
      exctree.insert(parent='', index='end', iid=countp, text='', values=(imn))
      countp += 1
  # new_value = StringVar()
  
  # def edit_window_box(val):
      
  #     edit_window = Toplevel(root)
  #     edit_window.title("Edit the value or cancel")
  #     edit_window.geometry("1000x250")
  #     label_edit = Label(edit_window , text='Enter value to edit or press cancel', 
  #     font = ("Times New Roman", 10)).grid(column=0,row=1,padx=0, pady = 2)
  #     #create edit box
  #     edit_box = Entry(edit_window)
  #     edit_box.insert(0,val)
  #     edit_box.grid(column=1,row=1,padx=0,pady=2)
  #     #auto select edit window 
  #     edit_window.focus()
      
  #     def value_assignment(event):
  #         printing = edit_box.get()
  #         new_value.set(printing)
  #         #only destroy will not update the value (perhaps event keeps running in background)
  #         #quit allows event to stop n update value in tree but does not close the window in single click 
  #         #rather on dbl click shuts down entire app 
  #         edit_window.quit()
  #         edit_window.destroy()
      
  #     edit_window.bind('<Return>', value_assignment )
  
  #     B1 = Button(edit_window, text="Okay")
  #     B1.bind('<Button-1>',value_assignment)
  #     B1.grid(column=0,row=10,padx=0, pady = 20)
      
  #     B2 = Button(edit_window, text="Cancel", command = edit_window.destroy).grid(column=1,row=10,padx=10,   pady = 20)
  #     edit_window.mainloop()
      
  # #will explain
  # #variable to hold col value (col clicked)
  # shape1 = IntVar()
  # #tracks both col , row on mouse click
  # def tree_click_handler(event):
  #     cur_item = exctree.item(exctree.focus())
  #     col = exctree.identify_column(event.x)[1:]
  #     rowid = exctree.identify_row(event.y)[1:]
  #     #updates list
  #     shape1.set(col)
  #     try:
  #         x,y,w,h = exctree.bbox('I'+rowid,'#'+col)
  #     except:pass
  #     #tree.tag_configure("highlight", background="yellow")
  #     return(col)
      
  # #code linked to event    
  # exctree.bind('<ButtonRelease-1>', tree_click_handler)
  
  # def edit(event):
  #     try:
  #         selected_item = exctree.selection()[0]
  #         temp = list(exctree.item(selected_item , 'values'))
  #         tree_click_handler
  #         col_selected = int(shape1.get())-1
  #         edit_window_box(temp[col_selected])
  #         #do not run if edit window is open
  #         #use edit_window.mainloop() so value assign after window closes
  #         temp[col_selected] = new_value.get()
  #         exctree.item(selected_item, values= temp)
  #     except: pass
      
      
  # #binding allows to edit on screen double click
  # exctree.bind('<Double-Button-1>' , edit)
  varexc = StringVar()
  entryexc = Entry(firsttab,width=25,textvariable=varexc)
  entryexc.place(x=15,y=173)
  
  btexcadd = Button(firsttab,text="Add new line",command=insert_valueexc)
  btexcadd.place(x=175,y=171)
  
  btexcedit = Button(firsttab,text="Edit line   ",command=save_valueexc)
  btexcedit.place(x=260,y=171)
  btexcadd = Button(firsttab,text=" Delete line  ",command=del_valueexc)
  btexcadd.place(x=330,y=171)
  
  exc=LabelFrame(firsttab,text="Predefined text records for header and footer", height=180, width=415)
  exc.place(x=5, y=350)
  
  def insert_valuepre():
    i = prestr.get()
    if i == "":
      pass
    else:
      entrypre.delete(0, END)
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      if not com:
        messagebox.showinfo("Alert", "Create Company Settings.")
      else:
        companyid = com[0]
        sql = 'insert into header_and_footer(companyid,headerandfooter) values(%s,%s)'
        val = (companyid,i)
        fbcursor.execute(sql,val)
        fbilldb.commit()
        for record in pretree.get_children():
          pretree.delete(record)
        sql = 'select * from header_and_footer'
        fbcursor.execute(sql)
        setexctree = fbcursor.fetchall()
        countp = 0
        for i in setexctree:
          pret = str(i[2])
          pre = str.replace(pret," ","_")
          pretree.insert(parent='', index='end', iid=countp, text='hello', values=(pre))
          countp += 1
  # new_value = String
        
        
  
  def edit_valuepre(event):
    selected_item = pretree.selection()[0]
    temp = list(pretree.item(selected_item , 'values'))
    entrypre.delete(0, END)
    entrypre.insert(0, temp)
  
  def save_valuepre():
    i = prestr.get()
    if i == "":
      pass
    else:
      selected0 = pretree.focus()
      valuz1= pretree.item(selected0)["values"]
      idgettingextracnid=valuz1[0]
      print(i,idgettingextracnid)
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      companyid = com[0]
      if not com:
        pass
      else:
        sql = 'update header_and_footer set headerandfooter=%s where headerandfooter=%s'
        val = (i,idgettingextracnid)
        fbcursor.execute(sql,val)
        fbilldb.commit()
        entryexc.delete(0, END)
        for record in pretree.get_children():
            pretree.delete(record)
        fbcursor.execute("select *  from header_and_footer")
        pandsdata = fbcursor.fetchall()
        countp = 0
        for i in pandsdata:
          pret = str(i[2])
          pre = str.replace(pret," ","_")
          pretree.insert('', index='end', iid=countp, text='', values=(pre))
          countp += 1
    
    
  
  def del_valuepre():
    itemid = pretree.item(pretree.focus())["values"][0]
    print(itemid)
    sql = "delete from header_and_footer where headerandfooter = %s"
    val = (itemid,)
    fbcursor.execute(sql, val)
    fbilldb.commit()
    for record in pretree.get_children():
      pretree.delete(record)
    fbcursor.execute("select *  from header_and_footer")
    pandsdata = fbcursor.fetchall()
    countp = 0
    for i in pandsdata:
      pret = str(i[2])
      pre = str.replace(pret," ","_")
      pretree.insert('', index='end', iid=countp, text='', values=(pre))
      countp += 1
    
      
  
  scrollbarx = Scrollbar(firsttab, orient=HORIZONTAL)
  scrollbary = Scrollbar(firsttab, orient=VERTICAL)
  pretree = ttk.Treeview(firsttab, columns=("1"),height=400,     selectmode="extended",   yscrollcommand=scrollbary.set, xscrollcommand=scrollbarx.set)
  # exctree["show"]='headings'
  scrollbary.config(command=pretree.yview)
  scrollbary.place(x=395,y=400,height=115)
  scrollbarx.config(command=pretree.xview)
  scrollbarx.place(x=15,y=510, width=380)
  pretree.heading('1', text="header and footer",)
  pretree.column('#0', stretch=NO, minwidth=0, width=0)
  pretree.column('1', stretch=NO, width=378)
  pretree.place(x=15,y=400,height=115,width=380)
  pretree.bind('<Double-Button-1>' , edit_valuepre)
  sql = 'select * from header_and_footer'
  fbcursor.execute(sql)
  setexctree = fbcursor.fetchall()
  countp = 0
  for i in setexctree:
    pret = str(i[2])
    pre = str.replace(pret," ","_")
    pretree.insert(parent='', index='end', iid=countp, text='hello', values=(pre))
    countp += 1
  prestr = StringVar()
  entrypre = Entry(firsttab,width=25,textvariable=prestr)
  entrypre.place(x=15,y=370)
  btexcadd = Button(firsttab,text="Add new line",command=insert_valuepre)
  btexcadd.place(x=175,y=370)
  btpredit = Button(firsttab,text="Edit line   ",command=save_valuepre)
  btpredit.place(x=260,y=370)
  btexcadd = Button(firsttab,text=" Delete line   ",command=del_valuepre)
  btexcadd.place(x=330,y=370)
  
  ver = Label(firsttab,text="FREE version.Upgrade PRO version for all features and Ad free invoice")
  ver.place(x=480,y=15)
  
  
  chapass=LabelFrame(firsttab,text="Change Password", height=150, width=500)
  chapass.place(x=480, y=40)
  
  enterold = StringVar()
  lenold = Label(firsttab,text="Enter your old password")
  lenold.place(x=495,y=60)
  enold = Entry(firsttab,textvariable=enterold)
  enold.place(x=640,y=60)
  
  enternew = StringVar()
  ennew = Label(firsttab,text="New password")
  ennew.place(x=495,y=90)
  newpass = Entry(firsttab,textvariable=enternew)
  newpass.place(x=640,y=90)
  
  
  cnewpass = StringVar()
  cnp = Label(firsttab,text="Confirm new password")
  cnp.place(x=495,y=120)
  cnewp = Entry(firsttab,textvariable=cnewpass)
  cnewp.place(x=640,y=120)

  def change_pass():
    old_pass = enterold.get()
    new_pass = enternew.get()
    cnew_pass = cnewpass.get()
    usna = username1.get()
    print(usna)
    sql='SELECT * FROM users WHERE username=%s'
    val=(usna,)
    fbcursor.execute(sql,val)
    chpass = fbcursor.fetchone()
    print(chpass)
    if old_pass == "" or new_pass == "" or cnew_pass == "":
        messagebox.showerror('Password Error','Plz enter password')
    elif old_pass == chpass[4]:
      if new_pass == cnew_pass:
        sqll='UPDATE users SET password=%s,confirm_password=%s WHERE userID=%s'
        vall=(new_pass,cnew_pass,chpass[0])
        fbcursor.execute(sqll,vall,)
        fbilldb.commit()
        messagebox.showinfo('Updated','Password updated successfully')
      else:
        messagebox.showerror('Password Error','password is not match')
    else:
      messagebox.showerror('Password Error','Old Password is Incorrect')
  chabtn = Button(firsttab,text="Change password",command=change_pass)
  chabtn.place(x=840,y=150)
  
  termf=LabelFrame(firsttab,text="Terms of payment", height=150, width=500)
  termf.place(x=480, y=190)


  def insert_valueterm():
    first = entrytopstr.get()
    second = entrydsstr.get()
    if first == "" or second == "":
      pass
    else:
      entrytop.delete(0, END)
      entryds.delete(0, END)
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      if not com:
        messagebox.showinfo("Alert", "Create Company Settings.")
      else:
        companyid = com[0]
        sql = 'insert into terms_of_payment(companyid,terms_of_payment,Date_shift) values(%s,%s,%s)'
        val = (companyid,first,second)
        fbcursor.execute(sql,val)
        fbilldb.commit()
        for record in termtree.get_children():
          termtree.delete(record)
        sql = 'select * from terms_of_payment'
        fbcursor.execute(sql)
        setexctree = fbcursor.fetchall()
        countp = 0
        for i in setexctree:
          
          termtree.insert(parent='', index='end', iid=countp, text='hello', values=(i[2],i[3]))
          countp += 1
  # new_value = String
        
        
  
  def edit_valueterm(event):
    itemid = termtree.item(termtree.focus())["values"][0]
    sql = "select * from terms_of_payment where terms_of_payment = %s"
    val = (itemid,)
    fbcursor.execute(sql,val)
    editterm = fbcursor.fetchone()
    entrytop.delete(0, END)
    entryds.delete(0, END)
    entrytop.insert(0, editterm[2])
    entryds.insert(0, editterm[3])
  
  def save_valueterm():
    first = entrytopstr.get()
    second = entrydsstr.get()
    if first == "" or second == "":
      pass
    else:
      itemid = termtree.item(termtree.focus())["values"][0]
      sql1 = "select * from company"
      fbcursor.execute(sql1)
      com = fbcursor.fetchone()
      if not com:
        pass
      else:
        sql = "select * from terms_of_payment where terms_of_payment=%s"
        val = (itemid,)
        fbcursor.execute(sql,val)
        payt = fbcursor.fetchone()
        sql2 = 'update terms_of_payment set terms_of_payment=%s,Date_shift=%s where terms_of_paymentID=%s'
        val2 = (first,second,payt[0])
        fbcursor.execute(sql2,val2)
        fbilldb.commit()
        entrytop.delete(0, END)
        entryds.delete(0, END)
        for record in termtree.get_children():
          termtree.delete(record)
        fbcursor.execute("select *  from terms_of_payment")
        pandsdata = fbcursor.fetchall()
        countp = 0
        for i in pandsdata:
          
          termtree.insert(parent='', index='end', iid=countp, text='hello', values=(i[2],i[3]))
          countp += 1
    
    
  
  def del_valueterm():
    itemid = termtree.item(termtree.focus())["values"][0]
    print(itemid)
    sql = "delete from terms_of_payment where terms_of_payment = %s"
    val = (itemid,)
    fbcursor.execute(sql, val)
    fbilldb.commit()
    for record in termtree.get_children():
        termtree.delete(record)
    fbcursor.execute("select *  from terms_of_payment")
    pandsdata = fbcursor.fetchall()
    countp = 0
    for i in pandsdata:
      termtree.insert(parent='', index='end', iid=countp, text='hello', values=(i[2],i[3]))
      countp += 1
  
  
  
  scrollbarx = Scrollbar(firsttab, orient=HORIZONTAL)
  scrollbary = Scrollbar(firsttab, orient=VERTICAL)
  termtree = ttk.Treeview(firsttab, columns=("1","2"),height=400,selectmode="extended",   yscrollcommand=scrollbary.set, xscrollcommand=scrollbarx.set)
  # exctree["show"]='headings'
  scrollbary.config(command=termtree.yview)
  scrollbary.place(x=870,y=228,height=100)
  scrollbarx.config(command=termtree.xview)
  scrollbarx.place(x=495,y=313, width=380)
  termtree.heading('1', text="Terms of payment",)
  termtree.heading('2', text="Date shift (days)",)
  termtree.column('#0', stretch=NO, minwidth=0, width=0)
  termtree.column('1', stretch=NO, minwidth=0, width=250)
  termtree.column('2', stretch=NO, minwidth=0, width=128)
  termtree.place(x=495,y=235,height=80,width=380)
  termtree.bind('<Double-Button-1>' , edit_valueterm)

  sql = 'select * from terms_of_payment'
  fbcursor.execute(sql)
  termt = fbcursor.fetchall()
  countp = 0
  for i in termt:
      termtree.insert(parent='', index='end', iid=countp, text='hello', values=(i[2],i[3]))
      countp += 1
  entrytopstr = StringVar()
  entrytop = Entry(firsttab,width=25,textvariable=entrytopstr)
  entrytop.place(x=495,y=208)
  entrydsstr = StringVar()
  entryds = Entry(firsttab,textvariable=entrydsstr)
  entryds.place(x=670,y=208)
  bttermadd = Button(firsttab,text="Add new line",command=insert_valueterm)
  bttermadd.place(x=800,y=205)
  bttermedit = Button(firsttab,text="     Edit line  ",command=save_valueterm)
  bttermedit.place(x=890,y=205)
  bttermdel = Button(firsttab,text="  Delete line  ",command=del_valueterm)
  bttermdel.place(x=890,y=240)
  
  radem=LabelFrame(firsttab,text="Invoice/Oder/Estimate/P.order Email Attachment file type", height=60,   width=500)
  radem.place(x=480, y=340)
  radema = StringVar()
  radpdf = Radiobutton(firsttab,variable=radema,value="PDF",text='PDF')
  radpdf.place(x= 485, y= 360 )
  radhtml = Radiobutton(firsttab,variable=radema,value="HTML",text='HTML')
  radhtml.place(x= 660, y= 360 )
  if  not sectab:
    pass
  else:
    if sectab[22] == 'PDF':
      radpdf.select()
    elif sectab[22] == 'HTML':
      radhtml.select()
    else:
      pass
  
  checkb1 = IntVar()
  check1 = Checkbutton(firsttab,variable = checkb1, 
                        text="PDF attachment with Embedded Fonts (PDF file size will be larger,but readable on   all devices) ", 
                        onvalue =1 ,
                        offvalue = 0,
                        )
  
  check1.place(x=480,y=400)
  if  not sectab:
    pass
  else:
    if sectab[23] == 1:
      check1.select()
    else:
      check1.deselect()
  
  checkb2 = IntVar()
  check2 = Checkbutton(firsttab,variable = checkb2, 
                        text="invoice numbering with leading zero and current year", 
                        onvalue =1 ,
                        offvalue = 0,
                       )
  
  check2.place(x=480,y=420)
  if  not sectab:
    pass
  else:
    if sectab[24] == 1:
      check2.select()
    else:
      check2.deselect()
  
  checkb3 = IntVar()
  check3 = Checkbutton(firsttab,variable = checkb3, 
                        text="Order numbering with leading zero and current year", 
                        onvalue =1 ,
                        offvalue = 0,
                        )
  
  check3.place(x=480,y=440)
  if  not sectab:
    pass
  else:
    if sectab[25] == 1:
      check3.select()
    else:
      check3.deselect()
  
  checkb4 = IntVar()
  check4 = Checkbutton(firsttab,variable = checkb4, 
                        text="Estimate numbering with leading zero and current year", 
                        onvalue =1 ,
                        offvalue = 0,
                       )
  
  check4.place(x=480,y=460)
  if  not sectab:
    pass
  else:
    if sectab[26] == 1:
      check4.select()
    else:
      check4.deselect()
  
  checkb5 = IntVar()
  check5 = Checkbutton(firsttab,variable = checkb5, 
                        text="Purchsae order numbering with leading zero and current year", 
                        onvalue =1 ,
                        offvalue = 0,
                        )
  check5.place(x=480,y=480)
  if  not sectab:
    pass
  else:
    if sectab[27] == 1:
      check5.select()
    else:
      check5.deselect()
  
  checkb6 = IntVar()
  check6 = Checkbutton(firsttab,variable = checkb6, 
                        text="Confirmation before closing F-billing Revolution", 
                        onvalue =1 ,
                        offvalue = 0,
                      )
  
  check6.place(x=480,y=500)
  if  not sectab:
    pass
  else:
    if sectab[28] == 1:
      check6.select()
    else:
      check6.deselect()
  
  ################### tab02 ###################################
  sql = "select * from company"
  fbcursor.execute(sql)
  sectab = fbcursor.fetchone()
  print(sectab)
  
  
  secondtab1=Frame(tab02, relief=GROOVE, bg="#f8f8f2")
  secondtab1.pack(side="top", fill=BOTH)
  
  secondtab=Frame(secondtab1, bg="#f5f3f2", height=700)
  secondtab.pack(side="top", fill=BOTH)
  
  comdata=LabelFrame(secondtab,text="Company data", height=200, width=500)
  comdata.place(x=5, y=15)
  cname = Label(secondtab,text="Company name")
  cname.place(x=20, y =35)
  comname = StringVar()
  centry = Entry(secondtab,textvariable=comname)
  if  not sectab:
    pass
  else:
    centry.insert(0, sectab[1])
  centry.place(x=160,y=35,width=280)
  
  
  cadd = Label(secondtab,text="Company Address")
  cadd.place(x=20, y =65)
  caddent = scrolledtext.ScrolledText(secondtab)
  if  not sectab:
    pass
  else:
    caddent.insert('1.0', sectab[2])
  caddent.place(x=160,y=65,height=80,width=280)
  
  cemail = Label(secondtab,text="E-mail Address")
  cemail.place(x=20, y =160)
  comemail = StringVar()
  cemailentry = Entry(secondtab,textvariable=comemail)
  if  not sectab:
    pass
  else:
    cemailentry.insert(0, sectab[3])
  cemailentry.place(x=160,y=160,width=280)
  
  stl = Label(secondtab,text="sales Tax.Reg.No.")
  stl.place(x=20, y =185)
  comsalestax = StringVar()
  ste = Entry(secondtab,textvariable=comsalestax)
  if  not sectab:
    pass
  else:
    ste.insert(0, sectab[4])
  ste.place(x=160,y=185,width=280)
  
  
  curre=LabelFrame(secondtab,text="Currency", height=125, width=500)
  curre.place(x=5, y=220)
  currl = Label(secondtab,text="Currency")
  currl.place(x=20,y= 240)
  comcur = StringVar()
  currbox = ttk.Combobox(secondtab,width=10,textvariable=comcur)
  currbox['values'] =('ALL','AFN','ARS','AWG','AUD','AZN','BSD','BBD','BYN','BZD','BMD','BOB','BAM','BWP',  'BGN','BRL','BND','KHR','CAD','KYD','CLP','CNY','COP','CRC','HRK','CUP','CZK','DKK','DOP','XCD','EGP','SVC',  'EUR','FKP','FJD','GHS','GIP','GTQ','GGP','GYD','HNL','HKD','HUF','ISK','INR','IDR','IRR','IMP','ILS','JMD',  'JPY','JEP','KZT','KPW','KRW','KGS','LAK','LBP','LRD','MKD','MYR','MUR','MXN','MNT','MNT','MZN','NAD','NPR',  'ANG','NZD','NIO','NGN','NOK','OMR','PKR','PAB','PYG','PEN','PHP','PLN','QAR','RON','RUB','SHP','SAR','RSD',  'SCR','SGD','SBD','SOS','KRW','ZAR','LKR','SEK','CHF','SRD','SYP','TWD','THB','TTD','TRY','TVD','UAH','AED',  'GBP','USD','UYU','UZS','VEF','VND','YER','ZWD',)
  if  not sectab:
    pass
  elif sectab[5]:
    currbox.insert(0, sectab[5])
  currbox.place(x=80,y=240)
  
  def signpl(event):
    amsgpl = comcursignpla.get()
    currsign = comcursign.get()
    if amsgpl == "before amount":
      exbox.delete(0, END)
      exbox.insert(0, currsign+'8347.26')
    elif amsgpl == "after amount":
      exbox.delete(0, END)
      exbox.insert(0, '8347.26'+currsign)
    elif amsgpl == "before amount with space":
      exbox.delete(0, END)
      exbox.insert(0, currsign+'  8347.26')
    elif amsgpl == "after amount with space":
      exbox.delete(0, END)
      exbox.insert(0, '8347.26  '+currsign)
  
  
  currsignl = Label(secondtab,text="Currency sign")
  currsignl.place(x=180,y=240)
  comcursign = StringVar()
  currsignbox = ttk.Combobox(secondtab,width=10,textvariable=comcursign)
  currsignbox.bind("<<ComboboxSelected>>", signpl)
  currsignbox["values"] = ('Lek','؋','$','ƒ','$','₼','$','$','Br','BZ$','$','$b','KM','P','лв','R$','$','៛',  '$','$','$','¥','$','₡','kn','₱','Kč','kr','RD$','$','£','$','€','£','$','¢','£','Q','£','$','L','$','Ft',  'kr','₹','Rp','﷼','£','₪','J$','¥','£','лв','₩','₩','₭','£','$','ден','RM','₨','$','₮',' د.إ','MT','$','₨',  'ƒ','$','C$','₦','kr','﷼','₨','B/.','Gs','S/.','₱','zł','﷼','lei','₽','£','﷼','Дин.','₨','S','₩','R','₨',  'kr','CHF','£','NT$','฿','TT$','₺','$','₴','د.إ','$U','лв','Bs','₫','﷼','Z$')
  if  not sectab:
    pass
  elif sectab[6]:
    currsignbox.insert(0, sectab[6])
  currsignbox.place(x=265,y=240)
  
  cspl = Label(secondtab,text="Currency sign placement")
  cspl.place(x=20,y=270)
  
  def amountsignspace(event):
    amsgpl = comcursignpla.get()
    currsign = comcursign.get()
    if amsgpl == "before amount":
      exbox.delete(0, END)
      exbox.insert(0, currsign+'8347.26')
    elif amsgpl == "after amount":
      exbox.delete(0, END)
      exbox.insert(0, '8347.26'+currsign)
    elif amsgpl == "before amount with space":
      exbox.delete(0, END)
      exbox.insert(0, currsign+'  8347.26')
    elif amsgpl == "after amount with space":
      exbox.delete(0, END)
      exbox.insert(0, '8347.26  '+currsign)
    
      
      
  comcursignpla = StringVar()
  cspe = ttk.Combobox(secondtab,width=24,textvariable=comcursignpla,)
  cspe.bind("<<ComboboxSelected>>", amountsignspace)
  cspe["values"] = ("before amount","after amount",'before amount with space',"after amount with space")
  if  not sectab:
    pass
  elif sectab[7]:
    cspe.insert(0, sectab[7])
  cspe.place(x=180,y=270)
  
  def decpl(event):
    dec = comdecsep.get()
    ex = comex.get()
    if dec == ",":
      var = str.replace(ex,".",",")
      exbox.delete(0, END)
      exbox.insert(0, var)
    elif dec == ".":
      var1 = str.replace(ex,",",".")
      exbox.delete(0, END)
      exbox.insert(0, var1)
  dsl = Label(secondtab,text="Decimal separator")
  dsl.place(x=20,y=300)
  comdecsep = StringVar()
  currbox = ttk.Combobox(secondtab,width=5,textvariable=comdecsep)
  currbox.bind("<<ComboboxSelected>>",decpl)
  currbox['values'] = ('.',',')
  if  not sectab:
    pass
  elif sectab[8]:
    currbox.insert(0, sectab[8])
  currbox.place(x=130,y=300)
  
  exl = Label(secondtab,text="Example")
  exl.place(x=185,y=300)
  comex = StringVar()
  exbox = Entry(secondtab,width=15,textvariable=comex)
  if  not sectab:
    exbox.insert(0, 84367.26)
  elif sectab[9]:
    exbox.insert(0, sectab[9])
  exbox.place(x=245,y=300)
  
  btred = Button(secondtab,text="Restore Default")
  btred.place(x=400,y=270)
  btsc = Button(secondtab,text="SET CURRENCY")
  btsc.place(x=400,y=300)
  
  datef=LabelFrame(secondtab,text="Date format", height=60, width=500)
  datef.place(x=5, y=355)
  
  def daffun(event):
    dafget = daf.get()
    if dafget == "mm-dd-yyyy":
      exd._set_text(exd._date.strftime('%m-%d-%Y'))
    elif dafget == "dd-mm-yyyy":
      exd._set_text(exd._date.strftime('%d-%m-%Y'))
    elif dafget == "yyyy.mm.dd":
      exd._set_text(exd._date.strftime('%Y.%m.%d'))
    elif dafget == "mm/dd/yyyy":
      exd._set_text(exd._date.strftime('%m/%d/%Y'))
    elif dafget == "dd/mm/yyyy":
      exd._set_text(exd._date.strftime('%d/%m/%Y'))
    elif dafget == "dd.mm.yyyy":
      exd._set_text(exd._date.strftime('%d.%m.%Y'))
    elif dafget == "yyyy/mm/dd":
      exd._set_text(exd._date.strftime('%Y/%m/%d'))
    
  
  comdaf = StringVar()
  daf = ttk.Combobox(secondtab,textvariable=comdaf)
  daf["values"] = ("Default",'mm-dd-yyyy','dd-mm-yyyy','yyyy.mm.dd','mm/dd/yyyy','dd/mm/yyyy','dd.mm.yyyy','yyyy/mm/dd')
  daf.bind("<<ComboboxSelected>>",daffun)
  if not sectab:
    pass
  elif sectab[10]:
    daf.insert(0, sectab[10])
  daf.place(x=60,y=380)
  
  
  exd = DateEntry(secondtab,)
  exd.place(x=280,y=380)
  if  not sectab:
    pass
  elif sectab[11]:
    exd.delete(0, END)
    exd.insert(0, sectab[11])
  
  tnr=LabelFrame(secondtab,text="Tax name and rate", height=200, width=500)
  tnr.place(x=560, y=15)
  
  stt=LabelFrame(secondtab,text="Select tax type", height=120, width=180)
  stt.place(x=580, y=30)
  def rtax1():
    ch = radtax.get()
    if ch == 1:
      tax1namel.place_forget()
      tax1namee.place_forget()
      tax1ratel.place_forget()
      tax1ratee.place_forget()
      tax1ratee.place_forget()
      ptax1.place_forget()
  
      tax2namel.place_forget()
      tax2namee.place_forget()
      tax2ratel.place_forget()
      tax2ratee.place_forget()
      ptax2.place_forget()
    elif ch == 2:
      tax1namel.place(x=800, y=40)
      tax1namee.place(x=880,y=40)
      tax1ratel.place(x=800, y=70)
      tax1ratee.place(x=880,y=70)
      ptax1.place(x=580,y=160)
      tax2namel.place_forget()
      tax2namee.place_forget()
      tax2ratel.place_forget()
      tax2ratee.place_forget()
      ptax2.place_forget()
    elif ch == 3:
      tax1namel.place(x=800, y=40)
      tax1namee.place(x=880,y=40)
      tax1ratel.place(x=800, y=70)
      tax1ratee.place(x=880,y=70)
      ptax1.place(x=580,y=160)
      tax2namel.place(x=800, y=110)
      tax2namee.place(x=880,y=110)
      tax2ratel.place(x=800, y=140)
      tax2ratee.place(x=880,y=140)
      ptax2.place(x=580,y=185)
    
  radtax = IntVar()
  rdnotax = Radiobutton(secondtab,text="Do not use TAX",value="1",variable=radtax,command=rtax1)
  rdnotax.place(x=590,y=50)
  
  
  rdtax1 = Radiobutton(secondtab,text="1 level of Tax",value="2",variable=radtax,command=rtax1)
  rdtax1.place(x=590,y=80)
  ptax01 = IntVar()
  tax1namel = Label(secondtab,text="Tax1 name")
  
  
  tax1namee = Entry(secondtab)
  if  not sectab:
    pass
  elif sectab[15]:
    tax1namee.insert(0, sectab[15])
  tax1namee.place(x=60,y=380)
  
  
  tax1ratel = Label(secondtab,text="Tax1 rate")
  
  
  tax1ratee = Entry(secondtab)
  if  not sectab:
    pass
  elif sectab[16]:
    tax1ratee.insert(0, sectab[16])
  
  comptax1 = BooleanVar()
  ptax1 = Checkbutton(secondtab,text="Print TAX1" ,onvalue =1 ,offvalue = 0,variable=comptax1)
  if  not sectab:
    pass
  elif sectab[17] == 1:
    ptax1.select()
  else:
    ptax1.deselect()
  
  rdtax2 = Radiobutton(secondtab,text="2 level of Tax",value="3",variable=radtax,command=rtax1)
  rdtax2.place(x=590,y=110)
  
  
  tax2namel = Label(secondtab,text="Tax2 name")
  
  
  tax2namee = Entry(secondtab)
  if  not sectab:
    pass
  elif sectab[18]:
    tax2namee.insert(0, sectab[18])
  
  tax2ratel = Label(secondtab,text="Tax2 rate")
  
  tax2ratee = Entry(secondtab)
  if  not sectab:
    pass
  elif sectab[19]:
    tax2ratee.insert(0, sectab[19])
  
  comptax2 = BooleanVar()
  ptax2 = Checkbutton(secondtab,text="Print TAX2" ,onvalue =1 ,offvalue = 0,variable=comptax2)
  if  not sectab:
    pass
  else:
    if sectab[20] == 1:
      ptax2.select()
    else:
      ptax2.deselect()
  
  if  not sectab:
    pass
  else:
    if sectab[12] == "1":
      rdnotax.select()
      tax1namel.place_forget()
      tax1namee.place_forget()
      tax1ratel.place_forget()
      tax1ratee.place_forget()
      tax1ratee.place_forget()
      ptax1.place_forget()
  
      tax2namel.place_forget()
      tax2namee.place_forget()
      tax2ratel.place_forget()
      tax2ratee.place_forget()
      ptax2.place_forget()
    elif sectab[12] == "2":
      tax1namel.place(x=800, y=40)
      tax1namee.place(x=880,y=40)
      tax1ratel.place(x=800, y=70)
      tax1ratee.place(x=880,y=70)
      ptax1.place(x=580,y=160)
      tax2namel.place_forget()
      tax2namee.place_forget()
      tax2ratel.place_forget()
      tax2ratee.place_forget()
      ptax2.place_forget()
      rdtax1.select()
    elif sectab[12] == "3":
      rdtax2.select()
      tax1namel.place(x=800, y=40)
      tax1namee.place(x=880,y=40)
      tax1ratel.place(x=800, y=70)
      tax1ratee.place(x=880,y=70)
      ptax1.place(x=580,y=160)
      tax2namel.place(x=800, y=110)
      tax2namee.place(x=880,y=110)
      tax2ratel.place(x=800, y=140)
      tax2ratee.place(x=880,y=140)
      ptax2.place(x=580,y=185)
    else:
      pass
  
  
  comlo=LabelFrame(secondtab,text="Comapny Logo", height=260, width=320)
  comlo.place(x=560, y=240)
  
  def upload_filelogo():
    global imglogo,filename
    f_types =[('Png files','*.png'),('Jpg Files', '*.jpg')]
    filename = filedialog.askopenfilename(filetypes=f_types)
    shutil.copyfile(filename, os.getcwd()+'/images/'+filename.split('/')[-1])
    image = Image.open(filename)
    resize_image = image.resize((280, 160))
    imglogo = ImageTk.PhotoImage(resize_image)
    # b2 = Button(secondtab,image=img)
    # b2.place(x=130, y=80)
  
    btlogo = Button(secondtab,width=280,height=160,image=imglogo)
    btlogo.place(x=580,y=280)
  
  try:
    image = Image.open("images/"+sectab[13])
    resize_image = image.resize((280, 160))
    image = ImageTk.PhotoImage(resize_image)
    btlogo = Button(secondtab,width=280,height=160,image=image)
    btlogo.place(x=580,y=280)
    btlogo.photo = image
  except:
    pass
  
    
  btloadim = Button(secondtab,text="Load logo image",command=upload_filelogo)
  btloadim.place(x=580,y=460)
  
  compimg = BooleanVar()
  primage = Checkbutton(secondtab,text="Print logo image",variable = compimg,onvalue =1 ,offvalue = 0)
  primage.place(x=740,y=460)
  
  ################### tab06 ###################################
  
  def user():
    display = displaystart.get()
    user_name = usernae.get()
    password = userpase.get()
    conformpassword = usercpase.get()
   
    create_inv = creinvbol.get()
    delete_inv = delinvbol.get()
    void_inv = voinvbol.get()
    mark_inv_as_paid = markinvbol.get()
    
    create_ord = creordbol.get()
    delete_ord = delordbol.get()
    turn_inv_ord = turninvbol.get()
    smsnofi = smsinvbol.get()
    
    create_est = creestimatebol.get()
    delete_est = delestimatebol.get()
    turn_est = turnestiinvbol.get()
  
    create_exp = creexpensebol.get()
    delete_exp = delexpensebol.get()
    rebill_exp = rebillexpebol.get()
    
    create_cus = crecusbol.get()
    delete_cus = delcusbol.get()
    imp_cus = impcusbol.get()
  
    create_pros = creprosbol.get()
    delete_pros = delprosbol.get()
    import_pros = impprosbol.get()
  
    runrep = runrepbol.get()
    gen_rec = genrecinvbol.get()
  
    create_pur = crepurbol.get()
    delete_pur = delpurbol.get()
  
    modify_inv = modifyinvbol.get()
    modify_ord = modifyordbol.get()
    modify_est = modifyestibol.get()
  
    if user_name=="" or password=="":
      messagebox.showerror('',"Please complete the form")
    else:
      sql='SELECT * FROM users WHERE username=%s'# selecting entire table from db,taking username , nd check   the existance
      val=(user_name,)
      fbcursor.execute(sql,val)
      if fbcursor.fetchone()is not None:
        sql='SELECT * FROM users WHERE username=%s'
        val=(user_name,)
        fbcursor.execute(sql,val)
        whuser = fbcursor.fetchone()
        print(whuser[0])
        if password == conformpassword:
        # messagebox.showerror('Warming','User name already exist!!')
          sqll= 'UPDATE users SET displayloginscreen=%s,username=%s,password=%s,confirm_password=%s,create_invoice=%s,delete_invoice=%s,void_invoice=%s,mark_invoice_as_paid=%s,create_order=%s,delete_order=%s,turn_order_into_invoice=%s,send_sms_nofitication=%s,create_estimate=%s,delete_estimate=%s,turn_oestimate_into_invoice=%s,create_expense=%s,delete_expense=%s,rebill_exprense=%s,create_customer=%s,delete_customer=%s,import_customer=%s,	create_product_service=%s,delete_product_service=%s,import_product_service=%s,run_reports=%s,generate_recurring_invoice=%s,create_purchase_order=%s,delete_purchase_order=%s,modify_invoice_settings=%s,modify_order_settings=%s,modify_estimate_settings=%s WHERE userID=%s'
          vall=(display,user_name,password,conformpassword,create_inv,delete_inv,void_inv,mark_inv_as_paid,  create_ord,delete_ord,turn_inv_ord,smsnofi,create_est,delete_est,turn_est,create_exp,delete_exp,  rebill_exp,create_cus,delete_cus,imp_cus,create_pros,delete_pros,import_pros,runrep,gen_rec,create_pur,  delete_pur,modify_inv,modify_ord,modify_est,whuser[0])
          fbcursor.execute(sqll,vall)
          fbilldb.commit()
        else:
          messagebox.showerror('Warming','Password not match!!')
      else:
        if password == conformpassword:
          sql="INSERT INTO users(displayloginscreen,username,password,confirm_password,create_invoice,  delete_invoice,void_invoice,mark_invoice_as_paid,create_order,delete_order,turn_order_into_invoice,  send_sms_nofitication,create_estimate,delete_estimate,turn_oestimate_into_invoice,	create_expense,	  delete_expense,rebill_exprense,create_customer,delete_customer,import_customer,	create_product_service,  delete_product_service,	import_product_service,run_reports,generate_recurring_invoice,  create_purchase_order,delete_purchase_order,modify_invoice_settings,modify_order_settings,  modify_estimate_settings) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,  %s,%s,%s,%s,%s,%s,%s,%s)" #adding values into db
          val=(display,user_name,password,conformpassword,create_inv,delete_inv,void_inv,mark_inv_as_paid,  create_ord,delete_ord,turn_inv_ord,smsnofi,create_est,delete_est,turn_est,create_exp,delete_exp,  rebill_exp,create_cus,delete_cus,imp_cus,create_pros,delete_pros,import_pros,runrep,gen_rec,create_pur,  delete_pur,modify_inv,modify_ord,modify_est)
          fbcursor.execute(sql,val)
          fbilldb.commit()
          for record in uactree.get_children():
            uactree.delete(record)
          sql = "select * from users"
          fbcursor.execute(sql)
          sixuactree = fbcursor.fetchall()
          coutset = 0
          for i in sixuactree:
           uactree.insert(parent='', index='end', iid=coutset, text='hello', values=(i[3]))
           coutset += 1
        else:
          messagebox.showerror('Warming','Password not match!!')
        

   
    
  
  
  
  
    
  
    
  sixtab1=Frame(tab06, relief=GROOVE, bg="#f8f8f2")
  sixtab1.pack(side="top", fill=BOTH)
  
  sixtab=Frame(sixtab1, bg="#f5f3f2", height=700)
  sixtab.pack(side="top", fill=BOTH)
  
  displaystart = BooleanVar()
  displaylocsc = Checkbutton(sixtab,text="Display Login screen startup",onvalue =1 ,offvalue = 0,  variable=displaystart)
  displaylocsc.place(x=20,y=30)
  
  userac=LabelFrame(sixtab,text="User Acounts", height=400, width=260)
  userac.place(x=20, y=55)
  
  
  selper = Label(sixtab,text="Select username to modify permissions")
  selper.place(x=30,y=75)
  
  def focususer(event):
    itemid = uactree.item(uactree.focus())["values"][0]
    sql = "select * from users where username = %s"
    val = (itemid,)
    fbcursor.execute(sql,val)
    sixtabdataback = fbcursor.fetchone()
    print(sixtabdataback)
    usernae.delete(0,END)
    usernae.insert(0,itemid)
    if itemid == "adminstator":
        usernae.delete(0,END)
        usernae.insert(0,itemid)
        usernae["state"] = DISABLED
        creinv["state"] = DISABLED
        delinv["state"] = DISABLED
        voinv["state"] = DISABLED
        markinv["state"] = DISABLED
        creord["state"] = DISABLED
        delord["state"] = DISABLED
        turninv["state"] = DISABLED
        smsinv["state"] = DISABLED
        creestimate["state"] = DISABLED
        delestimate["state"] = DISABLED
        turnestiinv["state"] = DISABLED
        creexpense["state"] = DISABLED
        delexpense["state"] = DISABLED
        rebillexpe["state"] = DISABLED
        crecus["state"] = DISABLED
        delcus["state"] = DISABLED
        impcus["state"] = DISABLED
        crepros["state"] = DISABLED
        delpros["state"] = DISABLED
        imppros["state"] = DISABLED
        runrep["state"] = DISABLED
        genrecinv["state"] = DISABLED
        crepur["state"] = DISABLED
        delpur["state"] = DISABLED
        modifyinv["state"] = DISABLED
        modifyord["state"] = DISABLED
        modifyesti["state"] = DISABLED
    else:
        userpase.delete(0, END)
        usercpase.delete(0, END)
        usernae.delete(0,END)
        usernae.insert(0,itemid)
        usernae["state"] = NORMAL
        creinv["state"] = NORMAL
        delinv["state"] = NORMAL
        voinv["state"] = NORMAL
        markinv["state"] = NORMAL
        creord["state"] = NORMAL
        delord["state"] = NORMAL
        turninv["state"] = NORMAL
        smsinv["state"] = NORMAL
        creestimate["state"] = NORMAL
        delestimate["state"] = NORMAL
        turnestiinv["state"] = NORMAL
        creexpense["state"] = NORMAL
        delexpense["state"] = NORMAL
        rebillexpe["state"] = NORMAL
        crecus["state"] = NORMAL
        delcus["state"] = NORMAL
        impcus["state"] = NORMAL
        crepros["state"] = NORMAL
        delpros["state"] = NORMAL
        imppros["state"] = NORMAL
        runrep["state"] = NORMAL
        genrecinv["state"] = NORMAL
        crepur["state"] = NORMAL
        delpur["state"] = NORMAL
        modifyinv["state"] = NORMAL
        modifyord["state"] = NORMAL
        modifyesti["state"] = NORMAL
    if not sixtabdataback:
      userpase.delete(0, END)
      usercpase.delete(0, END)
      creinv.deselect()
      delinv.deselect()
      voinv.deselect()
      markinv.deselect()
      creord.deselect()
      delord.deselect()
      turninv.deselect()
      smsinv.deselect()
      creestimate.deselect()
      delestimate.deselect()
      turnestiinv.deselect()
      creexpense.deselect()
      delexpense.deselect()
      rebillexpe.deselect()
      crecus.deselect()
      delcus.deselect()
      impcus.deselect()
      crepros.deselect()
      delpros.deselect()
      imppros.deselect()
      runrep.deselect()
      genrecinv.deselect()
      crepur.deselect()
      delpur.deselect()
      modifyinv.deselect()
      modifyord.deselect()
      modifyesti.deselect()
      if itemid == "adminstator":
        usernae.delete(0,END)
        usernae.insert(0,itemid)
        usernae["state"] = DISABLED
        creinv["state"] = DISABLED
        delinv["state"] = DISABLED
        voinv["state"] = DISABLED
        markinv["state"] = DISABLED
        creord["state"] = DISABLED
        delord["state"] = DISABLED
        turninv["state"] = DISABLED
        smsinv["state"] = DISABLED
        creestimate["state"] = DISABLED
        delestimate["state"] = DISABLED
        turnestiinv["state"] = DISABLED
        creexpense["state"] = DISABLED
        delexpense["state"] = DISABLED
        rebillexpe["state"] = DISABLED
        crecus["state"] = DISABLED
        delcus["state"] = DISABLED
        impcus["state"] = DISABLED
        crepros["state"] = DISABLED
        delpros["state"] = DISABLED
        imppros["state"] = DISABLED
        runrep["state"] = DISABLED
        genrecinv["state"] = DISABLED
        crepur["state"] = DISABLED
        delpur["state"] = DISABLED
        modifyinv["state"] = DISABLED
        modifyord["state"] = DISABLED
        modifyesti["state"] = DISABLED
      else:
        userpase.delete(0, END)
        usercpase.delete(0, END)
        usernae.delete(0,END)
        usernae.insert(0,itemid)
        usernae["state"] = NORMAL
        creinv["state"] = NORMAL
        delinv["state"] = NORMAL
        voinv["state"] = NORMAL
        markinv["state"] = NORMAL
        creord["state"] = NORMAL
        delord["state"] = NORMAL
        turninv["state"] = NORMAL
        smsinv["state"] = NORMAL
        creestimate["state"] = NORMAL
        delestimate["state"] = NORMAL
        turnestiinv["state"] = NORMAL
        creexpense["state"] = NORMAL
        delexpense["state"] = NORMAL
        rebillexpe["state"] = NORMAL
        crecus["state"] = NORMAL
        delcus["state"] = NORMAL
        impcus["state"] = NORMAL
        crepros["state"] = NORMAL
        delpros["state"] = NORMAL
        imppros["state"] = NORMAL
        runrep["state"] = NORMAL
        genrecinv["state"] = NORMAL
        crepur["state"] = NORMAL
        delpur["state"] = NORMAL
        modifyinv["state"] = NORMAL
        modifyord["state"] = NORMAL
        modifyesti["state"] = NORMAL
    else:
      userpase.delete(0, END)
      usercpase.delete(0, END)
      userpase.insert(0, sixtabdataback[4])
      usercpase.insert(0, sixtabdataback[5])
      if sixtabdataback[6] == 1:
        creinv.select()
      else:
        creinv.deselect()
      if sixtabdataback[7] == 1:
        delinv.select()
      else:
        delinv.deselect()
      if sixtabdataback[8] == 1:
        voinv.select()
      else:
        voinv.deselect()
      if sixtabdataback[9] == 1:
        markinv.select()
      else:
        markinv.deselect()
      if sixtabdataback[10] == 1:
        creord.select()
      else:
        creord.deselect()
      if sixtabdataback[11] == 1:
        delord.select()
      else:
        delord.deselect()
      if sixtabdataback[12] == 1:
        turninv.select()
      else:
        turninv.deselect()
      if sixtabdataback[13] == 1:
        smsinv.select()
      else:
        smsinv.deselect()
      if sixtabdataback[14] == 1:
        creestimate.select()
      else:
        creestimate.deselect()
      if sixtabdataback[15] == 1:
        delestimate.select()
      else:
        delestimate.deselect()
      if sixtabdataback[16] == 1:
        turnestiinv.select()
      else:
        turnestiinv.deselect()
      if sixtabdataback[17] == 1:
        creexpense.select()
      else:
        creexpense.deselect()
      if sixtabdataback[18] == 1:
        delexpense.select()
      else:
        delexpense.deselect()
      if sixtabdataback[19] == 1:
        rebillexpe.select()
      else:
        rebillexpe.deselect()
      if sixtabdataback[20] == 1:
        crecus.select()
      else:
        crecus.deselect()
      if sixtabdataback[21] == 1:
        delcus.select()
      else:
        delcus.deselect()
      if sixtabdataback[22] == 1:
        impcus.select()
      else:
        impcus.deselect()
      if sixtabdataback[23] == 1:
        crepros.select()
      else:
        crepros.deselect()
      if sixtabdataback[24] == 1:
        delpros.select()
      else:
        delpros.deselect()
      if sixtabdataback[25] == 1:
        imppros.select()
      else:
        imppros.deselect()
      if sixtabdataback[26] == 1:
        runrep.select()
      else:
        runrep.deselect()
      if sixtabdataback[27] == 1:
        genrecinv.select()
      else:
        genrecinv.deselect()
      if sixtabdataback[28] == 1:
        crepur.select()
      else:
        crepur.deselect()
      if sixtabdataback[29] == 1:
        delpur.select()
      else:
        delpur.deselect()
      if sixtabdataback[30] == 1:
        modifyinv.select()
      else:
        modifyinv.deselect()
      if sixtabdataback[31] == 1:
        modifyord.select()
      else:
        modifyord.deselect()
      if sixtabdataback[32] == 1:
        modifyesti.select()
      else:
        modifyesti.deselect()
         
  
  scrollbarx = Scrollbar(sixtab, orient=HORIZONTAL)
  scrollbary = Scrollbar(sixtab, orient=VERTICAL)
  uactree = ttk.Treeview(sixtab, columns=("1"),height=400,selectmode="extended", yscrollcommand=scrollbary.  set, xscrollcommand=scrollbarx.set)
  scrollbary.config(command=uactree.yview)
  scrollbary.place(x=245,y=100,height=300)
  uactree.heading('1', text="Username",)
  uactree.column('#0', stretch=NO, minwidth=0, width=0)
  uactree.column('1', stretch=NO, minwidth=0, width=218)
  uactree.place(x=30,y=100,height=300,width=220)
  uactree.bind('<Double-Button-1>' , focususer)
  sql = "select * from users"
  fbcursor.execute(sql)
  sixuactree = fbcursor.fetchall()
  coutset = 0
  if not sixuactree:
    uactree.insert('', index='end', text='hello', values=("adminstator"))
  else:
    for i in sixuactree:
      uactree.insert(parent='', index='end', iid=coutset, text='hello', values=(i[3]))
      coutset += 1
  
  def adduser():
    uactree.insert('', index='end', text='hello', values=("Rename User"))
  
  btadd = Button(sixtab,text="Add new User",command=adduser)
  btadd.place(x=30,y=415)
  
  def users():
    itemid = uactree.item(uactree.focus())["values"][0]
    if itemid == "adminstator":
      messagebox.showerror('F-Billing Revolution', 'Cannot delete adminstator user.')
    else:
      delusermess = messagebox.askyesno("Delete user", "Are you sure to delete this user?")
      if delusermess == True:
        sql = "delete from users where username = %s"
        val = (itemid, )
        fbcursor.execute(sql, val)
        fbilldb.commit()
        for record in uactree.get_children():
          uactree.delete(record)
        sql = "select * from users"
        fbcursor.execute(sql)
        sixuactree = fbcursor.fetchall()
        coutset = 0
        for i in sixuactree:
          uactree.insert(parent='', index='end', iid=coutset, text='hello', values=(i[3]))
          coutset += 1
      else:
        pass
        
  
  btdus = Button(sixtab,text="Delete User",command=users)
  btdus.place(x=180,y=415)
  
  userpro=LabelFrame(sixtab,text="User Profile", height=400, width=750)
  userpro.place(x=300, y=55)
  
  
  userna = Label(sixtab,text="Username")
  userna.place(x=340,y=90)
  usernae = Entry(sixtab,)
  usernae.place(x=460,y=90)
  
  userpas = Label(sixtab,text="Password")
  userpas.place(x=340,y=120)
  userpase = Entry(sixtab,)
  userpase.place(x=460,y=120)
  
  usercpas = Label(sixtab,text="Confirm Password")
  usercpas.place(x=340,y=150)
  usercpase = Entry(sixtab,)
  usercpase.place(x=460,y=150)
  
  saveuserprofile = Button(sixtab,text="save user profile",command=user)
  saveuserprofile.place(x=650,y=120)
  
  creinvbol = BooleanVar()
  creinv = Checkbutton(sixtab,text="Create invoice",onvalue= 1 ,offvalue= 0,variable=creinvbol)
  creinv.place(x=340,y=200)
  delinvbol = BooleanVar()
  delinv = Checkbutton(sixtab,text="Delete invoice",onvalue= 1 ,offvalue= 0,variable=delinvbol)
  delinv.place(x=340,y=225)
  voinvbol = BooleanVar()
  voinv = Checkbutton(sixtab,text="Void invoice",onvalue= 1 ,offvalue= 0,variable=voinvbol)
  voinv.place(x=340,y=250)
  markinvbol = BooleanVar()
  markinv = Checkbutton(sixtab,text="Mark invoice as Paid",onvalue= 1 ,offvalue= 0,variable=markinvbol)
  markinv.place(x=340,y=275)
  
  creordbol = BooleanVar()
  creord = Checkbutton(sixtab,text="Create Order",onvalue= 1 ,offvalue= 0,variable=creordbol)
  creord.place(x=500,y=200)
  delordbol = BooleanVar()
  delord = Checkbutton(sixtab,text="Delete Order",onvalue= 1 ,offvalue= 0,variable=delordbol)
  delord.place(x=500,y=225)
  turninvbol = BooleanVar()
  turninv = Checkbutton(sixtab,text="Turn order into invoice",onvalue= 1 ,offvalue= 0,variable=turninvbol)
  turninv.place(x=500,y=250)
  smsinvbol = BooleanVar()
  smsinv = Checkbutton(sixtab,text="Send sms nofitication",onvalue= 1 ,offvalue= 0,variable=smsinvbol)
  smsinv.place(x=500,y=275)
  
  creestimatebol = BooleanVar()
  creestimate = Checkbutton(sixtab,text="Create estimate",onvalue= 1 ,offvalue= 0,variable=creestimatebol)
  creestimate.place(x=680,y=200)
  delestimatebol = BooleanVar()
  delestimate = Checkbutton(sixtab,text="Delete estimate",onvalue= 1 ,offvalue= 0,variable=delestimatebol)
  delestimate.place(x=680,y=225)
  turnestiinvbol = BooleanVar()
  turnestiinv = Checkbutton(sixtab,text="Turn estimates into invoice",onvalue= 1 ,offvalue= 0,  variable=turnestiinvbol)
  turnestiinv.place(x=680,y=250)
  
  creexpensebol = BooleanVar()
  creexpense = Checkbutton(sixtab,text="Create expenses",onvalue= 1 ,offvalue= 0,variable=creexpensebol)
  creexpense.place(x=880,y=200)
  delexpensebol = BooleanVar()
  delexpense = Checkbutton(sixtab,text="Delete expenses",onvalue= 1 ,offvalue= 0,variable=delexpensebol)
  delexpense.place(x=880,y=225)
  rebillexpebol = BooleanVar()
  rebillexpe = Checkbutton(sixtab,text="Rebill expenses",onvalue= 1 ,offvalue= 0,variable=rebillexpebol)
  rebillexpe.place(x=880,y=250)
  
  crecusbol = BooleanVar()
  crecus = Checkbutton(sixtab,text="Create customer",onvalue= 1 ,offvalue= 0,variable=crecusbol)
  crecus.place(x=340,y=320)
  delcusbol = BooleanVar()
  delcus = Checkbutton(sixtab,text="Delete customer",onvalue= 1 ,offvalue= 0,variable=delcusbol)
  delcus.place(x=340,y=340)
  impcusbol = BooleanVar()
  impcus = Checkbutton(sixtab,text="Import customer",onvalue= 1 ,offvalue= 0,variable=impcusbol)
  impcus.place(x=340,y=360)
  
  creprosbol = BooleanVar()
  crepros = Checkbutton(sixtab,text="Create product\services",onvalue= 1 ,offvalue= 0,variable=creprosbol)
  crepros.place(x=500,y=320)
  delprosbol = BooleanVar()
  delpros = Checkbutton(sixtab,text="Delete product\services",onvalue= 1 ,offvalue= 0,variable=delprosbol)
  delpros.place(x=500,y=340)
  impprosbol = BooleanVar()
  imppros = Checkbutton(sixtab,text="Import product\services",onvalue= 1 ,offvalue= 0,variable=impprosbol)
  imppros.place(x=500,y=360)
  
  runrepbol = BooleanVar()
  runrep = Checkbutton(sixtab,text="Run reports",onvalue= 1 ,offvalue= 0,variable=runrepbol)
  runrep.place(x=680,y=320)
  genrecinvbol = BooleanVar()
  genrecinv = Checkbutton(sixtab,text="Generate recurring invoices",onvalue= 1 ,offvalue= 0,  variable=genrecinvbol)
  genrecinv.place(x=680,y=340)
  
  crepurbol = BooleanVar()
  crepur = Checkbutton(sixtab,text="Create Purchase order",onvalue =1 ,offvalue = 0,variable=crepurbol)
  crepur.place(x=880,y=320)
  delpurbol = BooleanVar()
  delpur = Checkbutton(sixtab,text="Delete Purchase order",onvalue =1 ,offvalue = 0,variable=delpurbol)
  delpur.place(x=880,y=340)
  
  undersetlab = Label(sixtab,text="Under Settings menu tab")
  undersetlab.place(x=340,y=400)
  
  modifyinvbol = BooleanVar()
  modifyinv = Checkbutton(sixtab,text="Modify invoice settings",onvalue =1 ,offvalue = 0,variable=modifyinvbol)
  modifyinv.place(x=340,y=425)
  
  modifyordbol = BooleanVar()
  modifyord = Checkbutton(sixtab,text="Modify order settings",onvalue =1 ,offvalue = 0,variable=modifyordbol)
  modifyord.place(x=500,y=425)
  
  modifyestibol = BooleanVar()
  modifyesti = Checkbutton(sixtab,text="Modify estimate settings",onvalue =1 ,offvalue = 0,  variable=modifyestibol)
  modifyesti.place(x=680,y=425)

################### tab05 ###################################
  fifthtab1=Frame(tab05, relief=GROOVE, bg="#f8f8f2")
  fifthtab1.pack(side="top", fill=BOTH)

  fifthtab=Frame(fifthtab1, bg="#f5f3f2", height=700)
  fifthtab.pack(side="top", fill=BOTH)

  sql = "select * from company"
  fbcursor.execute(sql)
  estdata = fbcursor.fetchone()
  print(estdata)



  ver = Label(fifthtab,text="Estimate# prefix")
  ver.place(x=5,y=40)

  est_str = StringVar() 
  est_entry = Entry(fifthtab, textvariable=est_str)
  est_entry.place(x=100,y=40)
  if not estdata:
    est_str.set('EST')
  else:
    est_entry.insert(0, estdata[29])

  ver = Label(fifthtab,text="Starting estimate number")
  ver.place(x=25,y=80)

  def callback(input):
      
    if input.isdigit():
        print(input)
        return True
                          
    elif input is "":
        print(input)
        return True
  
    else:
        print(input)
        return False

  spin1 = Spinbox(fifthtab,from_=0,to=1000000,width=15)
  reg = fifthtab.register(callback)
  
  spin1.config(validate ="key", 
         validatecommand =(reg, '%S'))
  if not estdata:
    pass
  else:
    spin1.delete(0, END)
    spin1.insert(0,estdata[38])
  spin1.place(x=50,y=100)

  ver = Label(fifthtab,text="Header box background color")
  ver.place(x=5,y=140)

  win_menu1 = StringVar()
  winstyle1 = ttk.Combobox(fifthtab,textvariable=win_menu1)
  #est_win1 = win_menu1.get()
  winstyle1['values'] = ('Default','Black','Maroon','Green','Olive','Navy','Purple','Teal','Gray','Silver','Red','Lime','Yellow','Blue','Fuchsia','Aqua','White','ScrollBar','Background','ActiveCaption','InactiveCaption','Menu','Window','WindowFrame','MenuText','WindowText','CaptionText','ActiveBorder','InactiveBorder','AppWorkSpace','Highlight','HighlightText','BtnFace','InactiveCaptionText','BtnHighlight','3DDkShadow','3DLight','InfoText','InfoBk','Custom')
  if not estdata:
    winstyle1.current(0)
  else:
    winstyle1.insert(0, estdata[30])
  winstyle1.place(x=6 ,y=160)
  #winstyle1.current(0)

  ver = Label(fifthtab,text="Customize Estimate text labels")
  ver.place(x=5,y=190)
  
  est_str1 = StringVar() 
  est_lbx1 = Entry(fifthtab, width=30,textvariable=est_str1)
  # est_str1.set('Estimate')
  if not estdata:
    est_str1.set('Estimate')
  else:
    est_lbx1.insert(0, estdata[31])
  est_lbx1.place(x=5,y=220)
  
  est_str2 = StringVar() 
  est_lbx2 = Entry(fifthtab, width=30,textvariable=est_str2)
  if not estdata:
    est_str2.set('Estimate#')
  else:
    est_lbx2.insert(0,estdata[33])
  est_lbx2.place(x=5,y=240)
  
  
  est_str3 = StringVar() 
  est_lbx3 = Entry(fifthtab,width=30,textvariable=est_str3)
  if not estdata:
    est_str3.set('Estimate date')
  else:
    est_lbx3.insert(0, estdata[34])
  est_lbx3.place(x=5,y=260) 

  est_str4 = StringVar() 
  est_lbx4 = Entry(fifthtab,width=30,textvariable=est_str4)
  if not estdata:
    est_str4.set('Due date')
  else:
    est_lbx4.insert(0, estdata[35])
  est_lbx4.place(x=5,y=280)

  est_str5 = StringVar() 
  est_lbx5 = Entry(fifthtab,width=30,textvariable=est_str5)
  if not estdata:
    est_str5.set('Estimate to')
  else:
    est_lbx5.insert(0, estdata[36])
  est_lbx5.place(x=5,y=300)

  est_str6 = StringVar() 
  est_lbx6 = Entry(fifthtab, width=30,textvariable=est_str6)
  if not estdata:
    est_str6.set('Estimate total')
  else:
    est_lbx6.insert(0, estdata[37])
  est_lbx6.place(x=5,y=320)


  ver = Label(fifthtab,text="Default Estimate template(example,click on preview for mouse scrolling)")
  ver.place(x=248,y=55 )

  ver = Label(fifthtab,text="Default Estimate template")
  ver.place(x=619,y=40)



  messagelbframe=LabelFrame(fifthtab,text="Predefined terms and conditions text for estimates", height=70, width=980)
  messagelbframe.place(x=248, y=396)

  
  # est_str7 = StringVar() 
  # entry1=Entry(fifthtab, width=155,textvariable=est_str7)
  # if not estdata:
  #   pass
  # else:
  #   entry1.insert(0, estdata[39])
  # entry1.place(x=260, y=415, height=36)
  
  est_str7 = scrolledtext.ScrolledText(fifthtab)
  if  not estdata:
    pass
  else:
    est_str7.insert('1.0', estdata[39])
  est_str7.place(x=260,y=415,height=38,width=950)


  def restore_defaulttt1():
        est_lbx1.delete(0, 'end')
        est_lbx1.insert(0, 'Estimate')
        est_lbx2.delete(0, 'end')
        est_lbx2.insert(0,'Estimate#')
        est_lbx3.delete(0, 'end')
        est_lbx3.insert(0, 'Estimate date')
        est_lbx4.delete(0, 'end')
        est_lbx4.insert(0, 'Due date')
        est_lbx5.delete(0, 'end')
        est_lbx5.insert(0, 'Estimate to')
        est_lbx6.delete(0, 'end')
        est_lbx6.insert(0, 'Estimate total')

  bttermadd_01 = Button(fifthtab,text="Restore defaults", command=restore_defaulttt1)
  bttermadd_01.place(x=32,y=430)


#------------Professional 1 (logo on left side)-------------
  def maindropmenu(event):
      menuvar=win_menu2.get()
      print(menuvar,"hello")
      sql = "select * from company"
      fbcursor.execute(sql)
      estdata1 = fbcursor.fetchone()

      if menuvar == 'Professional 1 (logo on left side)':
        frame = Frame(fifthtab, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=247,y=90)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
              
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
          
        canvas.config(width=953,height=300)
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(100, 8, 850, 687 , outline='yellow',fill='white')
        canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
        try:
          est_image = Image.open("images/"+estdata1[13])
          est_resize_image = est_image.resize((200,100))
          est_image = ImageTk.PhotoImage(est_resize_image)

          est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
          window_image = canvas.create_window(175, 45, anchor="nw", window=est_btlogo)
          est_btlogo.photo = est_image
        except:
          pass  
        canvas.create_text(202, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(215, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(200, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(191, 220, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(205, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(340, 220, text="NET 15", fill="black", font=('Helvetica 11'))
          
        canvas.create_text(720, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
        # canvas.create_text(700, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'), width=125)
        T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
        T_address.tag_configure('tag_name',justify='right')
        T_address.insert('1.0', estdata1[2])
        T_address.tag_add('tag_name','1.0', 'end')
        T_address_window = canvas.create_window(520, 80, anchor="nw", window=T_address)
        canvas.create_text(695, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
        canvas.create_text(700, 205, text=" "+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(706, 225, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
        canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
        canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))
      
        s = ttk.Style()
        s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

        tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')

        tree.column("# 1", anchor=E, stretch=NO, width=100)
        tree.heading("# 1", text="ID/SKU")
        tree.column("# 2", anchor=E, stretch=NO, width=350)
        tree.heading("# 2", text="Product/Service - Description")
        tree.column("# 3", anchor=E, stretch=NO, width=80)
        tree.heading("# 3", text="Quantity")
        tree.column("# 4", anchor=E, stretch=NO, width=90)
        tree.heading("# 4", text="Unit Price")
        tree.column("# 5", anchor=E, stretch=NO, width=80)
        tree.heading("# 5", text="Price")
          
        window = canvas.create_window(120, 340, anchor="nw", window=tree)

        canvas.create_line(120, 390, 820, 390 )
        canvas.create_line(120, 340, 120, 365 )
        canvas.create_line(120, 365, 120, 390 )
        canvas.create_line(820, 340, 820, 540 )
        canvas.create_line(740, 340, 740, 540 )
        canvas.create_line(570, 340, 570, 540 )
        canvas.create_line(570, 415, 820, 415 )
        canvas.create_line(570, 440, 820, 440 )
        canvas.create_line(570, 465, 820, 465 )
        canvas.create_line(570, 490, 820, 490 )
        canvas.create_line(570, 515, 820, 515 )
        canvas.create_line(650, 340, 650, 390 )
        canvas.create_line(220, 340, 220, 390 )
        canvas.create_line(570, 540, 820, 540 )

        canvas.create_text(165, 372, text="PROD-0001", fill="black", font=('Helvetica 10'))
        canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
        canvas.create_text(610, 372, text="1", fill="black", font=('Helvetica 10'))
    
        if comcursignpla.get() == "before amount":
          canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "after amount":
          canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(704, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))

        else:
          pass
        # canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))
        
        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
        else:
          pass

        # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))
        
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

        canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))
          
        canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 608, 795, 608)
        # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10')) 
        T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
        T.insert(END, estdata1[39])
        T_window = canvas.create_window(155, 612, anchor="nw", window=T)

        canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
          

#----------------Professional 2 (logo on right side)------------------
      elif menuvar == 'Professional 2 (logo on right side)':
        frame = Frame(fifthtab, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=247,y=90)
      
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
          
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=953,height=300)
          
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
        canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
        try:
          est_image = Image.open("images/"+estdata1[13])
          est_resize_image = est_image.resize((200,100))
          est_image = ImageTk.PhotoImage(est_resize_image)

          est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
          window_image = canvas.create_window(500, 45, anchor="nw", window=est_btlogo)
          est_btlogo.photo = est_image
        except:
          pass  
        canvas.create_text(250, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
        # canvas.create_text(215, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
        T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
        T_address.tag_configure('tag_name',justify='right')
        T_address.insert('1.0', estdata1[2])
        T_address.tag_add('tag_name','1.0', 'end')
        T_address_window = canvas.create_window(100, 80, anchor="nw", window=T_address)
        #T_address_window = canvas.create_window(175, 80, anchor="nw", window=T_address)

        canvas.create_text(215, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
        canvas.create_text(225, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
        canvas.create_text(232, 225, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
          
        canvas.create_text(502, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(515, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(500, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(491, 220, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(505, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
        canvas.create_text(690, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(690, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(690, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(680, 220, text="NET 15", fill="black", font=('Helvetica 11'))      
          
        canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
        canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

        s = ttk.Style()
        s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

        tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')
          
        tree.column("# 1", anchor=E, stretch=NO, width=100)
        tree.heading("# 1", text="ID/SKU")
        tree.column("# 2", anchor=E, stretch=NO, width=350)
        tree.heading("# 2", text="Product/Service - Description")
        tree.column("# 3", anchor=E, stretch=NO, width=80)
        tree.heading("# 3", text="Quantity")
        tree.column("# 4", anchor=E, stretch=NO, width=90)
        tree.heading("# 4", text="Unit Price")
        tree.column("# 5", anchor=E, stretch=NO, width=80)
        tree.heading("# 5", text="Price")
          
        window = canvas.create_window(120, 340, anchor="nw", window=tree)

        canvas.create_line(120, 390, 820, 390 )
        canvas.create_line(120, 340, 120, 365 )
        canvas.create_line(120, 365, 120, 390 )
        canvas.create_line(820, 340, 820, 540 )
        canvas.create_line(740, 340, 740, 540 )
        canvas.create_line(570, 340, 570, 540 )
        canvas.create_line(570, 415, 820, 415 )
        canvas.create_line(570, 440, 820, 440 )
        canvas.create_line(570, 465, 820, 465 )
        canvas.create_line(570, 490, 820, 490 )
        canvas.create_line(570, 515, 820, 515 )
        canvas.create_line(650, 340, 650, 390 )
        canvas.create_line(220, 340, 220, 390 )
        canvas.create_line(570, 540, 820, 540 )

        canvas.create_text(165, 372, text="PROD-0001", fill="black", font=('Helvetica 10'))
        canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
        canvas.create_text(610, 372, text="1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(704, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
        else:
          pass

        # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))
        
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

        canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

        canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 608, 795, 608)
        # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
        T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
        T.insert(END, estdata1[39])
        T_window = canvas.create_window(155, 612, anchor="nw", window=T)
        canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
#----------------Simplified 1 (logo on left side)------------------ 
      elif menuvar == 'Simplified 1 (logo on left side)':
        print('hello')
        frame = Frame(fifthtab, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=247,y=90)
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))

        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=953,height=300)

        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
        canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
        try:
          est_image = Image.open("images/"+estdata1[13])
          est_resize_image = est_image.resize((200,100))
          est_image = ImageTk.PhotoImage(est_resize_image)

          est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
          window_image = canvas.create_window(175, 45, anchor="nw", window=est_btlogo)
          est_btlogo.photo = est_image
        except:
          pass  
        canvas.create_text(202, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(215, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(200, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(191, 220, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(205, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(350, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(340, 220, text="NET 15", fill="black", font=('Helvetica 11'))      

        canvas.create_text(720, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
        #canvas.create_text(710, 200, text=caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
        T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
        T_address.tag_configure('tag_name',justify='right')
        T_address.insert('1.0', estdata1[2])
        T_address.tag_add('tag_name','1.0', 'end')
        T_address_window = canvas.create_window(520, 80, anchor="nw", window=T_address)

        canvas.create_text(708, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
        canvas.create_text(710, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
          
        canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
        canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

        s = ttk.Style()
        s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

        tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_1.Treeview')
          
        tree.column("# 1", anchor=E, stretch=NO, width=530)
        tree.heading("# 1", text="Product/Service - Description")
        tree.column("# 2", anchor=E, stretch=NO, width=90)
        tree.heading("# 2", text="Quantity")
        tree.column("# 3", anchor=E, stretch=NO, width=80)
        tree.heading("# 3", text="Price")
          
        window = canvas.create_window(120, 340, anchor="nw", window=tree)

        canvas.create_line(120, 390, 820, 390 )
        canvas.create_line(120, 340, 120, 365 )
        canvas.create_line(120, 365, 120, 390 )
        canvas.create_line(820, 340, 820, 540 )
        canvas.create_line(740, 340, 740, 540 )
        canvas.create_line(570, 390, 570, 540 )
        canvas.create_line(570, 415, 820, 415 )
        canvas.create_line(570, 440, 820, 440 )
        canvas.create_line(570, 465, 820, 465 )
        canvas.create_line(570, 490, 820, 490 )
        canvas.create_line(570, 515, 820, 515 )
        canvas.create_line(650, 340, 650, 390 )
        canvas.create_line(570, 540, 820, 540 )

      
        canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
        canvas.create_text(710, 372, text="1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

        canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

        canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 608, 795, 608)
        # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
        T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
        T.insert(END, estdata1[39])
        T_window = canvas.create_window(155, 612, anchor="nw", window=T)
        canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))

#----------------Simplified 2 (logo on right side)------------------ 
      elif menuvar == 'Simplified 2 (logo on right side)':
        frame = Frame(fifthtab, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=247,y=90)

        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))

        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=953,height=300)

        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
        canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
        try:
          est_image = Image.open("images/"+estdata1[13])
          est_resize_image = est_image.resize((200,100))
          est_image = ImageTk.PhotoImage(est_resize_image)

          est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
          window_image = canvas.create_window(500, 45, anchor="nw", window=est_btlogo)
          est_btlogo.photo = est_image
        except:
          pass  
        canvas.create_text(250, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
        # canvas.create_text(224, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
        T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
        T_address.tag_configure('tag_name',justify='right')
        T_address.insert('1.0', estdata1[2])
        T_address.tag_add('tag_name','1.0', 'end')
        T_address_window = canvas.create_window(100, 80, anchor="nw", window=T_address)

        canvas.create_text(224, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
        canvas.create_text(225, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))

        canvas.create_text(502, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(515, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(500, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(491, 220, text="Terms", fill="black", font=('Helvetica 11'))
        canvas.create_text(505, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
        canvas.create_text(680, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(680, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(680, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(670, 220, text="NET 15", fill="black", font=('Helvetica 11'))      

        canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
        canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
        canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

        s = ttk.Style()
        s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

        tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_1.Treeview')
          
        tree.column("# 1", anchor=E, stretch=NO, width=530)
        tree.heading("# 1", text="Product/Service - Description")
        tree.column("# 2", anchor=E, stretch=NO, width=90)
        tree.heading("# 2", text="Quantity")
        tree.column("# 3", anchor=E, stretch=NO, width=80)
        tree.heading("# 3", text="Price")
          
        window = canvas.create_window(120, 340, anchor="nw", window=tree)

        canvas.create_line(120, 390, 820, 390 )
        canvas.create_line(120, 340, 120, 365 )
        canvas.create_line(120, 365, 120, 390 )
        canvas.create_line(820, 340, 820, 540 )
        canvas.create_line(740, 340, 740, 540 )
        canvas.create_line(570, 390, 570, 540 )
        canvas.create_line(570, 415, 820, 415 )
        canvas.create_line(570, 440, 820, 440 )
        canvas.create_line(570, 465, 820, 465 )
        canvas.create_line(570, 490, 820, 490 )
        canvas.create_line(570, 515, 820, 515 )
        canvas.create_line(650, 340, 650, 390 )
        canvas.create_line(570, 540, 820, 540 )

          
        canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
        canvas.create_text(710, 372, text="1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass

        # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

        canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

        canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 608, 795, 608)
        # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
        T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
        T.insert(END, estdata1[39])
        T_window = canvas.create_window(155, 612, anchor="nw", window=T)
        canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))

#----------------Business Classic------------------ 
      elif menuvar == 'Business Classic':
        frame = Frame(fifthtab, width=953, height=300)
        frame.pack(expand=True, fill=BOTH)
        frame.place(x=247,y=90)
          
        canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
          
        vertibar=Scrollbar(frame, orient=VERTICAL)
        vertibar.pack(side=RIGHT,fill=Y)
        vertibar.config(command=canvas.yview)
        canvas.config(width=953,height=300)
          
        canvas.config(yscrollcommand=vertibar.set)
        canvas.pack(expand=True,side=LEFT,fill=BOTH)
        canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
        canvas.create_text(500, 50, text="Title text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 70, 800, 70, fill='orange')
        
        try:
          est_image = Image.open("images/"+estdata1[13])
          est_resize_image = est_image.resize((200,100))
          est_image = ImageTk.PhotoImage(est_resize_image)

          est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
          window_image = canvas.create_window(140, 120, anchor="nw", window=est_btlogo)
          est_btlogo.photo = est_image
        except:
          pass  

        canvas.create_text(500, 90, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
        # canvas.create_text(485, 220, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
        T_address = Text(canvas, height=5, width=35, font=('Helvetica 10'),borderwidth=0)
        T_address.tag_configure('tag_name',justify='right')
        T_address.insert('1.0', estdata1[2])
        T_address.tag_add('tag_name','1.0', 'end')
        T_address_window = canvas.create_window(350, 100, anchor="nw", window=T_address)
        
        canvas.create_text(480, 210, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))

        canvas.create_text(655, 100, text="John Doe", fill="black", font=('Helvetica 10 '))
        canvas.create_text(696, 120, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
        canvas.create_text(706, 135, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
        canvas.create_text(665, 150, text="United States", fill="black", font=('Helvetica 10'))

        canvas.create_text(659, 180, text=""+est_str1.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(675, 210, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
        canvas.create_text(659, 240, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))

        canvas.create_text(776, 180, text="EST1/2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(776, 210, text="05 May 2022", fill="black", font=('Helvetica 11'))
        canvas.create_text(776, 240, text="20-05-2022", fill="black", font=('Helvetica 11'))

        s = ttk.Style()
        s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

        tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')
          
        tree.column("# 1", anchor=E, stretch=NO, width=200)
        tree.heading("# 1", text="Product/Service")
        tree.column("# 2", anchor=E, stretch=NO, width=250)
        tree.heading("# 2", text="Description")
        tree.column("# 3", anchor=E, stretch=NO, width=90)
        tree.heading("# 3", text="Unit Price")
        tree.column("# 4", anchor=E, stretch=NO, width=80)
        tree.heading("# 4", text="Quantity")
        tree.column("# 5", anchor=E, stretch=NO, width=80)
        tree.heading("# 5", text="Price")
      
        window = canvas.create_window(120, 255, anchor="nw", window=tree)

        canvas.create_line(120, 295, 820, 295 )
        canvas.create_line(120, 255, 120, 295 )
        canvas.create_line(320, 255, 320, 295 )
        canvas.create_line(570, 255, 570, 295 )
        canvas.create_line(660, 255, 660, 295 )
        canvas.create_line(740, 255, 740, 295 )
        canvas.create_line(820, 255, 820, 445 )
        canvas.create_line(570, 320, 820, 320 )
        canvas.create_line(570, 345, 820, 345 )
        canvas.create_line(570, 370, 820, 370 )
        canvas.create_line(570, 395, 820, 395 )
        canvas.create_line(570, 420, 820, 420 )
        canvas.create_line(570, 445, 820, 445 )
      
        canvas.create_text(160, 285, text="PROD-0001", fill="black", font=('Helvetica 10'))
        canvas.create_text(450, 285, text="Example product - Description text...", fill="black", font=('Helvetica 10'))

        if comcursignpla.get() == "before amount":
          canvas.create_text(624, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(624, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(624, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(624, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(624, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        canvas.create_text(700, 285, text="1", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 310, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 310, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 310, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 310, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 310, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(789, 335, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(789, 335, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(789, 335, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(789, 335, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(789, 335, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(789, 360, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(789, 360, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(789, 360, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(789, 360, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(789, 360, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 385, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 385, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 385, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 385, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 385, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 410, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 410, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 410, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 410, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 410, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        if comcursignpla.get() == "before amount":
          canvas.create_text(784, 435, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount":
          canvas.create_text(784, 435, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "before amount with space":
          canvas.create_text(784, 435, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
        elif comcursignpla.get() == "after amount with space":
          canvas.create_text(784, 435, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
        else:
          pass
        # canvas.create_text(784, 435, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

        canvas.create_text(595, 310, text="Subtotal", fill="black", font=('Helvetica 10'))
        canvas.create_text(585, 335, text="TAX1", fill="black", font=('Helvetica 10'))
        canvas.create_text(635, 360, text="Shipping and handling", fill="black", font=('Helvetica 10'))
        canvas.create_text(615, 385, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))
        canvas.create_text(600, 410, text="Total Paid", fill="black", font=('Helvetica 10'))
        canvas.create_text(595, 435, text="Balance", fill="black", font=('Helvetica 10'))

        canvas.create_line(150, 470, 800, 470, fill='orange')
        canvas.create_text(275, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 510, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 520, text="...", fill="black", font=('Helvetica 10'))
        canvas.create_text(182, 530, text="...", fill="black", font=('Helvetica 10'))
          
        canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
        canvas.create_line(150, 608, 795, 608, fill='orange')
        # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
        T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
        T.insert(END, estdata1[39])
        T_window = canvas.create_window(155, 612, anchor="nw", window=T)
        canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
        canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
      else:
        pass

  win_menu2 = StringVar()
  winstyle2 = ttk.Combobox(fifthtab,textvariable=win_menu2)
  winstyle2.bind("<<ComboboxSelected>>", maindropmenu)
  winstyle2["values"] = ("Professional 1 (logo on left side)","Professional 2 (logo on right side)","Simplified 1 (logo on left side)","Simplified 2 (logo on right side)","Business Classic")
  if not estdata:
    winstyle2.current(0)
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)
    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
          
    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
      
    canvas.config(width=953,height=300)
    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 8, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 50, text="Title text goes here...", fill="black", font=('Helvetica 10'))
  
    #canvas.create_image(120,0, anchor=NW, image=est_logo)  
    canvas.create_text(285, 110, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))
      
    canvas.create_text(202, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(215, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(200, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(191, 220, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(205, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 220, text="NET 15", fill="black", font=('Helvetica 11'))
      
    canvas.create_text(720, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(700, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'), width=125)
    # T_address = Text(canvas, height=5, width=20 , font=('Helvetica 10'))
    # T_address.insert(END, estdata[2])
    # T_address_window = canvas.create_window(645, 80, anchor="nw", window=T_address)
    canvas.create_text(700, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
    canvas.create_text(700, 205, text=" "+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
    canvas.create_text(706, 225, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))
      
    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')

    tree.column("# 1", anchor=E, stretch=NO, width=100)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=350)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=80)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=90)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=80)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 340, anchor="nw", window=tree)

    canvas.create_line(120, 390, 820, 390 )
    canvas.create_line(120, 340, 120, 365 )
    canvas.create_line(120, 365, 120, 390 )
    canvas.create_line(820, 340, 820, 540 )
    canvas.create_line(740, 340, 740, 540 )
    canvas.create_line(570, 340, 570, 540 )
    canvas.create_line(570, 415, 820, 415 )
    canvas.create_line(570, 440, 820, 440 )
    canvas.create_line(570, 465, 820, 465 )
    canvas.create_line(570, 490, 820, 490 )
    canvas.create_line(570, 515, 820, 515 )
    canvas.create_line(650, 340, 650, 390 )
    canvas.create_line(220, 340, 220, 390 )
    canvas.create_line(570, 540, 820, 540 )

    canvas.create_text(165, 372, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(610, 372, text="1", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(704, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    else:
      pass
    # canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    else:
      pass

    # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608)
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10')) 
    # T = Text(canvas, height=3, width=105, font=('Helvetica 10'))
    # T.insert(END, estdata[39])
    # T_window = canvas.create_window(105, 612, anchor="nw", window=T)


    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10')) 
  elif estdata[32] == 'Professional 1 (logo on left side)':
    winstyle2.insert(0, estdata[32])
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)
    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
          
    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
      
    canvas.config(width=953,height=300)
    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 8, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      est_image = Image.open("images/"+estdata[13])
      est_resize_image = est_image.resize((200,100))
      est_image = ImageTk.PhotoImage(est_resize_image)

      est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
      window_image = canvas.create_window(175, 45, anchor="nw", window=est_btlogo)
      est_btlogo.photo = est_image
    except:
      pass  
    canvas.create_text(202, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(215, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(200, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(191, 220, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(205, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 220, text="NET 15", fill="black", font=('Helvetica 11'))
      
    canvas.create_text(720, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(700, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'), width=125)
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', estdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(520, 80, anchor="nw", window=T_address)
    canvas.create_text(695, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
    canvas.create_text(700, 205, text=" "+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
    canvas.create_text(706, 225, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))
      
    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')

    tree.column("# 1", anchor=E, stretch=NO, width=100)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=350)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=80)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=90)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=80)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 340, anchor="nw", window=tree)

    canvas.create_line(120, 390, 820, 390 )
    canvas.create_line(120, 340, 120, 365 )
    canvas.create_line(120, 365, 120, 390 )
    canvas.create_line(820, 340, 820, 540 )
    canvas.create_line(740, 340, 740, 540 )
    canvas.create_line(570, 340, 570, 540 )
    canvas.create_line(570, 415, 820, 415 )
    canvas.create_line(570, 440, 820, 440 )
    canvas.create_line(570, 465, 820, 465 )
    canvas.create_line(570, 490, 820, 490 )
    canvas.create_line(570, 515, 820, 515 )
    canvas.create_line(650, 340, 650, 390 )
    canvas.create_line(220, 340, 220, 390 )
    canvas.create_line(570, 540, 820, 540 )

    canvas.create_text(165, 372, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(610, 372, text="1", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(704, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    else:
      pass
    # canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))

    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    else:
      pass

    # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608)
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10')) 
    T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
    T.insert(END, estdata[39])
    T_window = canvas.create_window(155, 612, anchor="nw", window=T)

    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif estdata[32] == 'Professional 2 (logo on right side)':
    winstyle2.insert(0, estdata[32])
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)
      
    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
      
    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=953,height=300)
      
    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      est_image = Image.open("images/"+estdata[13])
      est_resize_image = est_image.resize((200,100))
      est_image = ImageTk.PhotoImage(est_resize_image)

      est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
      window_image = canvas.create_window(500, 45, anchor="nw", window=est_btlogo)
      est_btlogo.photo = est_image
    except:
      pass  
    canvas.create_text(250, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(225, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', estdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(100, 80, anchor="nw", window=T_address)
    canvas.create_text(225, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
    canvas.create_text(225, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
    canvas.create_text(232, 225, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(502, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(515, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(500, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(491, 220, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(505, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(690, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(690, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(690, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(680, 220, text="NET 15", fill="black", font=('Helvetica 11'))      
      
    canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=100)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=350)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=80)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=90)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=80)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 340, anchor="nw", window=tree)

    canvas.create_line(120, 390, 820, 390 )
    canvas.create_line(120, 340, 120, 365 )
    canvas.create_line(120, 365, 120, 390 )
    canvas.create_line(820, 340, 820, 540 )
    canvas.create_line(740, 340, 740, 540 )
    canvas.create_line(570, 340, 570, 540 )
    canvas.create_line(570, 415, 820, 415 )
    canvas.create_line(570, 440, 820, 440 )
    canvas.create_line(570, 465, 820, 465 )
    canvas.create_line(570, 490, 820, 490 )
    canvas.create_line(570, 515, 820, 515 )
    canvas.create_line(650, 340, 650, 390 )
    canvas.create_line(220, 340, 220, 390 )
    canvas.create_line(570, 540, 820, 540 )

    canvas.create_text(165, 372, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(610, 372, text="1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(704, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(704, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(704, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10 bold'))
    else:
      pass

    # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))
    
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608)
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
    T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
    T.insert(END, estdata[39])
    T_window = canvas.create_window(155, 612, anchor="nw", window=T)
    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif estdata[32] == 'Simplified 1 (logo on left side)':
    winstyle2.insert(0, estdata[32])
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)
    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=953,height=300)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      est_image = Image.open("images/"+estdata[13])
      est_resize_image = est_image.resize((200,100))
      est_image = ImageTk.PhotoImage(est_resize_image)

      est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
      window_image = canvas.create_window(175, 45, anchor="nw", window=est_btlogo)
      est_btlogo.photo = est_image
    except:
      pass  
    canvas.create_text(202, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(215, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(200, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(191, 220, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(205, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 220, text="NET 15", fill="black", font=('Helvetica 11'))      

    canvas.create_text(720, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(710, 200, text=caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', estdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(520, 80, anchor="nw", window=T_address)

    canvas.create_text(708, 170, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
    canvas.create_text(710, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))
      
    canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_1.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=530)
    tree.heading("# 1", text="Product/Service - Description")
    tree.column("# 2", anchor=E, stretch=NO, width=90)
    tree.heading("# 2", text="Quantity")
    tree.column("# 3", anchor=E, stretch=NO, width=80)
    tree.heading("# 3", text="Price")
      
    window = canvas.create_window(120, 340, anchor="nw", window=tree)

    canvas.create_line(120, 390, 820, 390 )
    canvas.create_line(120, 340, 120, 365 )
    canvas.create_line(120, 365, 120, 390 )
    canvas.create_line(820, 340, 820, 540 )
    canvas.create_line(740, 340, 740, 540 )
    canvas.create_line(570, 390, 570, 540 )
    canvas.create_line(570, 415, 820, 415 )
    canvas.create_line(570, 440, 820, 440 )
    canvas.create_line(570, 465, 820, 465 )
    canvas.create_line(570, 490, 820, 490 )
    canvas.create_line(570, 515, 820, 515 )
    canvas.create_line(650, 340, 650, 390 )
    canvas.create_line(570, 540, 820, 540 )

      
    canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(710, 372, text="1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608)
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
    T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
    T.insert(END, estdata[39])
    T_window = canvas.create_window(155, 612, anchor="nw", window=T)
    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif estdata[32] == 'Simplified 2 (logo on right side)':
    winstyle2.insert(0, estdata[32])
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)

    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=953,height=300)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      est_image = Image.open("images/"+estdata[13])
      est_resize_image = est_image.resize((200,100))
      est_image = ImageTk.PhotoImage(est_resize_image)

      est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
      window_image = canvas.create_window(500, 45, anchor="nw", window=est_btlogo)
      est_btlogo.photo = est_image
    except:
      pass  
    canvas.create_text(250, 60, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(224, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', estdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(100, 80, anchor="nw", window=T_address)
    canvas.create_text(224, 180, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))
    canvas.create_text(225, 205, text=""+est_str1.get(), fill="black", font=('Helvetica 14 bold'))

    canvas.create_text(502, 160, text=""+est_str2.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(515, 180, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(500, 200, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(491, 220, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(505, 240, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(680, 160, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(680, 180, text="05-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(680, 200, text="20-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(670, 220, text="NET 15", fill="black", font=('Helvetica 11'))      

    canvas.create_text(210, 260, text=""+est_str5.get(), fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(203, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(246, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(255, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(215, 325, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 260, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 280, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 295, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 310, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 325, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_1.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=530)
    tree.heading("# 1", text="Product/Service - Description")
    tree.column("# 2", anchor=E, stretch=NO, width=90)
    tree.heading("# 2", text="Quantity")
    tree.column("# 3", anchor=E, stretch=NO, width=80)
    tree.heading("# 3", text="Price")
      
    window = canvas.create_window(120, 340, anchor="nw", window=tree)

    canvas.create_line(120, 390, 820, 390 )
    canvas.create_line(120, 340, 120, 365 )
    canvas.create_line(120, 365, 120, 390 )
    canvas.create_line(820, 340, 820, 540 )
    canvas.create_line(740, 340, 740, 540 )
    canvas.create_line(570, 390, 570, 540 )
    canvas.create_line(570, 415, 820, 415 )
    canvas.create_line(570, 440, 820, 440 )
    canvas.create_line(570, 465, 820, 465 )
    canvas.create_line(570, 490, 820, 490 )
    canvas.create_line(570, 515, 820, 515 )
    canvas.create_line(650, 340, 650, 390 )
    canvas.create_line(570, 540, 820, 540 )

      
    canvas.create_text(370, 372, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(710, 372, text="1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 372, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 372, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 372, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 404, text="Subtotal", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 404, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 404, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 404, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 428, text="TAX1", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 428, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(786, 428, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 428, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(650, 454, text="Shipping and handling", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(786, 454, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(786, 454, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(786, 454, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 479, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 479, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 479, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(650, 479, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 502, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 502, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 502, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 502, text="Total Paid", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 526, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 526, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass

    # canvas.create_text(784, 526, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(650, 526, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(275, 550, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 560, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 570, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 580, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608)
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
    T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
    T.insert(END, estdata[39])
    T_window = canvas.create_window(155, 612, anchor="nw", window=T)
    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif estdata[32] == 'Business Classic':
    winstyle2.insert(0, estdata[32])
    frame = Frame(fifthtab, width=953, height=300)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=247,y=90)
      
    canvas=Canvas(frame, bg='grey', width=953, height=300, scrollregion=(0,0,700,700))
      
    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=953,height=300)
      
    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(100, 10, 850, 687 , outline='yellow',fill='white')
    canvas.create_text(500, 50, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 70, 800, 70, fill='orange')
    
    try:
      est_image = Image.open("images/"+estdata[13])
      est_resize_image = est_image.resize((200,100))
      est_image = ImageTk.PhotoImage(est_resize_image)

      est_btlogo = Label(canvas,width=200,height=100,image = est_image) 
      window_image = canvas.create_window(140, 120, anchor="nw", window=est_btlogo)
      est_btlogo.photo = est_image
    except:
      pass  

    canvas.create_text(500, 90, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(480, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=35, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', estdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(350, 100, anchor="nw", window=T_address)
        
        
    canvas.create_text(480, 210, text=" "+comsalestax.get(), fill="black", font=('Helvetica 10'))

    canvas.create_text(655, 100, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(696, 120, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(706, 135, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(665, 150, text="United States", fill="black", font=('Helvetica 10'))

    canvas.create_text(659, 180, text=""+est_str1.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(675, 210, text=""+est_str3.get(), fill="black", font=('Helvetica 11'))
    canvas.create_text(659, 240, text=""+est_str4.get(), fill="black", font=('Helvetica 11'))

    canvas.create_text(776, 180, text="EST1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(776, 210, text="05 May 2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(776, 240, text="20-05-2022", fill="black", font=('Helvetica 11'))

    s = ttk.Style()
    s.configure('mystyle_1.Treeview.Heading', background=''+win_menu1.get(),State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_1.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=200)
    tree.heading("# 1", text="Product/Service")
    tree.column("# 2", anchor=E, stretch=NO, width=250)
    tree.heading("# 2", text="Description")
    tree.column("# 3", anchor=E, stretch=NO, width=90)
    tree.heading("# 3", text="Unit Price")
    tree.column("# 4", anchor=E, stretch=NO, width=80)
    tree.heading("# 4", text="Quantity")
    tree.column("# 5", anchor=E, stretch=NO, width=80)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 255, anchor="nw", window=tree)

    canvas.create_line(120, 295, 820, 295 )
    canvas.create_line(120, 255, 120, 295 )
    canvas.create_line(320, 255, 320, 295 )
    canvas.create_line(570, 255, 570, 295 )
    canvas.create_line(660, 255, 660, 295 )
    canvas.create_line(740, 255, 740, 295 )
    canvas.create_line(820, 255, 820, 445 )
    canvas.create_line(570, 320, 820, 320 )
    canvas.create_line(570, 345, 820, 345 )
    canvas.create_line(570, 370, 820, 370 )
    canvas.create_line(570, 395, 820, 395 )
    canvas.create_line(570, 420, 820, 420 )
    canvas.create_line(570, 445, 820, 445 )
      
    canvas.create_text(160, 285, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(450, 285, text="Example product - Description text...", fill="black", font=('Helvetica 10'))

    if comcursignpla.get() == "before amount":
      canvas.create_text(624, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(624, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(624, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(624, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(624, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(700, 285, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 310, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 310, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 310, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 310, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 310, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(789, 335, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(789, 335, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(789, 335, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(789, 335, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(789, 335, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(789, 360, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(789, 360, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(789, 360, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(789, 360, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(789, 360, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 385, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 385, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 385, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 385, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 385, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 410, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 410, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 410, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 410, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 410, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(784, 435, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(784, 435, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(784, 435, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(784, 435, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(784, 435, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(595, 310, text="Subtotal", fill="black", font=('Helvetica 10'))
    canvas.create_text(585, 335, text="TAX1", fill="black", font=('Helvetica 10'))
    canvas.create_text(635, 360, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    canvas.create_text(615, 385, text=""+est_str6.get(), fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(600, 410, text="Total Paid", fill="black", font=('Helvetica 10'))
    canvas.create_text(595, 435, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_line(150, 470, 800, 470, fill='orange')
    canvas.create_text(275, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(182, 530, text="...", fill="black", font=('Helvetica 10'))
      
    canvas.create_text(500, 600, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(150, 608, 795, 608, fill='orange')
    # canvas.create_text(280, 640, text= ""+est_str7.get(), fill="black", font=('Helvetica 10'))
    T = Text(canvas, height=3, width=90, font=('Helvetica 10'),borderwidth=0)
    T.insert(END, estdata[39])
    T_window = canvas.create_window(155, 612, anchor="nw", window=T)
    canvas.create_text(280, 670, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(720, 670, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  else:
    pass
  winstyle2.place(x=770 ,y=40, width=220)
  #winstyle2.current(0)



################### tab07 ###################################
  seventhtab1=Frame(tab07, relief=GROOVE, bg="#f8f8f2")
  seventhtab1.pack(side="top", fill=BOTH)

  sql = "select * from company"
  fbcursor.execute(sql)
  advdata = fbcursor.fetchone()
  #print(estdata)


  seventhtab=Frame(seventhtab1, bg="#f5f3f2", height=700)
  seventhtab.pack(side="top", fill=BOTH)

  adv_messagelbframe=LabelFrame(seventhtab,text="Template advanced settings", height=250, width=1150)
  adv_messagelbframe.place(x=2, y=10)

  adv_fbill = Label(seventhtab,text="Template",font="arial 10 bold").place(x=20,y=30)

  adv_ver = Label(seventhtab,text="Professional 1 (logo on left side)")
  adv_ver.place(x=20,y=60)

  adv_ver = Label(seventhtab,text="Professional 2 (logo on right side)")
  adv_ver.place(x=20,y=90)

  adv_ver = Label(seventhtab,text="Simplified 1 (logo on left side)")
  adv_ver.place(x=20,y=120)

  adv_ver = Label(seventhtab,text="Simplified 2 (logo on right side)")
  adv_ver.place(x=20,y=150)

  adv_ver = Label(seventhtab,text="Business Classic")
  adv_ver.place(x=20,y=180)

  adv_fbill = Label(seventhtab,text="Page size",font="arial 10 bold").place(x=255,y=30)

  adv_win_menu3 = StringVar()
  adv_winstyle3 = ttk.Combobox(seventhtab,textvariable=adv_win_menu3)
  adv_winstyle3['values'] = ('Letter','A4')
  adv_win_menu3.set('Letter')
  #adv_winstyle3.current(0)
  adv_winstyle3.place(x=225 ,y=60)
    
  
  adv_win_menu4 = StringVar()
  adv_winstyle4 = ttk.Combobox(seventhtab,textvariable=adv_win_menu4)
  adv_winstyle4.place(x=225,y=90)
  adv_winstyle4['values'] = ("Letter","A4")
  adv_winstyle4.set("Letter")
  adv_winstyle4.current(0)

  adv_win_menu5 = StringVar()
  adv_winstyle5 = ttk.Combobox(seventhtab,textvariable=adv_win_menu5)
  adv_winstyle5.place(x=225,y=120)
  adv_winstyle5['values'] = ("Letter","A4")
  adv_winstyle5.set("Letter")
  adv_winstyle5.current(0)

  adv_win_menu6 = StringVar()
  adv_winstyle6 = ttk.Combobox(seventhtab,textvariable=adv_win_menu6)
  adv_winstyle6.place(x=225,y=150)
  adv_winstyle6['values'] = ("Letter","A4")
  adv_winstyle6.set("Letter")
  adv_winstyle6.current(0)

  adv_win_menu7 = StringVar()
  adv_winstyle7 = ttk.Combobox(seventhtab,textvariable=adv_win_menu7)
  adv_winstyle7.place(x=225,y=180)
  adv_winstyle7['values'] = ("Letter","A4")
  adv_winstyle7.set("Letter")
  adv_winstyle7.current(0)

  adv_fbill = Label(seventhtab,text="Right Margin(mm)",font="arial 10 bold").place(x=450,y=30)

  adv_spin00 = Spinbox(seventhtab,from_=5,to=20,width=10)
  adv_spin00.place(x=465,y=60)

  adv_spin01 = Spinbox(seventhtab,from_=5,to=20,width=10)
  adv_spin01.place(x=465,y=90)

  adv_spin02 = Spinbox(seventhtab,from_=5,to=20,width=10)
  adv_spin02.place(x=465,y=120)

  adv_spin03 = Spinbox(seventhtab,from_=5,to=20,width=10)
  adv_spin03.place(x=465,y=150)

  adv_spin04 = Spinbox(seventhtab,from_=5,to=20,width=10)
  adv_spin04.place(x=465,y=180)


  adv_fbill = Label(seventhtab,text="'Invoice to'block position shift(mm)",font="arial 10 bold").place(x=650,y=30)

  adv_lbl1 = Label(seventhtab, text="Left : ").place(x=651,y=60)
  adv_lbl1 = Label(seventhtab, text="Left : ").place(x=651,y=90)
  adv_lbl1 = Label(seventhtab, text="Left : ").place(x=651,y=120)
  adv_lbl1 = Label(seventhtab, text="Left : ").place(x=651,y=150)

  adv_spin10 = Spinbox(seventhtab,from_=-10,to=100,width=10)
  adv_spin10.place(x=685,y=60)

  adv_spin11 = Spinbox(seventhtab,from_=-10,to=100,width=10)
  adv_spin11.place(x=685,y=90)

  adv_spin12 = Spinbox(seventhtab,from_=-10,to=100,width=10)
  adv_spin12.place(x=685,y=120)

  adv_spin13 = Spinbox(seventhtab,from_=-10,to=100,width=10)
  adv_spin13.place(x=685,y=150)

  adv_lbl1 = Label(seventhtab, text="Top : ").place(x=785,y=60)
  adv_lbl1 = Label(seventhtab, text="Top : ").place(x=785,y=90)
  adv_lbl1 = Label(seventhtab, text="Top : ").place(x=785,y=120)
  adv_lbl1 = Label(seventhtab, text="Top : ").place(x=785,y=150)

  adv_spin20 = Spinbox(seventhtab,from_=0,to=100,width=10)
  adv_spin20.place(x=820,y=60)

  adv_spin21 = Spinbox(seventhtab,from_=0,to=100,width=10)
  adv_spin21.place(x=820,y=90)

  adv_spin22 = Spinbox(seventhtab,from_=0,to=100,width=10)
  adv_spin22.place(x=820,y=120)

  adv_spin23 = Spinbox(seventhtab,from_=0,to=100,width=10)
  adv_spin23.place(x=820,y=150)

  adv_bttermadd = Button(seventhtab,image=photo8,compound = LEFT,text="Refresh preview",width=115)
  adv_bttermadd.place(x=1000,y=50)

  adv_bttermadd = Button(seventhtab,image=saves,compound = LEFT,text="Save Settings",width=115)
  adv_bttermadd.place(x=1000,y=140)

  def adv_restore():
    adv_spin10.delete(0,'end')
    adv_spin10.insert(0,"0")
    adv_spin11.delete(0,'end')
    adv_spin11.insert(0,"0")
    adv_spin12.delete(0,'end')
    adv_spin12.insert(0,"0")
    adv_spin13.delete(0,'end')
    adv_spin13.insert(0,"0")
    adv_spin20.delete(0,'end')
    adv_spin20.insert(0,"0")
    adv_spin21.delete(0,'end')
    adv_spin21.insert(0,"0")
    adv_spin22.delete(0,'end')
    adv_spin22.insert(0,"0")
    adv_spin23.delete(0,'end')
    adv_spin23.insert(0,"0")
    adv_spin00.delete(0,'end')
    adv_spin00.insert(0,"10")
    adv_spin01.delete(0,'end')
    adv_spin01.insert(0,"10")
    adv_spin02.delete(0,'end')
    adv_spin02.insert(0,"10")
    adv_spin03.delete(0,'end')
    adv_spin03.insert(0,"10")
    adv_spin04.delete(0,'end')
    adv_spin04.insert(0,"10")
    adv_winstyle3.delete(0,'end')
    adv_winstyle3.insert(0,"Letter")
    adv_winstyle4.delete(0,'end')
    adv_winstyle4.insert(0,"Letter")
    adv_winstyle5.delete(0,'end')
    adv_winstyle5.insert(0,"Letter")
    adv_winstyle6.delete(0,'end')
    adv_winstyle6.insert(0,"Letter")
    adv_winstyle7.delete(0,'end')
    adv_winstyle7.insert(0,"Letter")

  adv_bttermadd = Button(seventhtab,text="Restore defaults",width=16, command=adv_restore)
  adv_bttermadd.place(x=1000,y=180)

  adv_ver = Label(seventhtab,text="By positioning 'Invoice to'block,the customer name/address can be displayed in right place in the windowed envelope. If you networking, you need to setup this on all computer.\nExample:(Left:20 and Top:10 means that shift 'Invoice to'block to right 20mm and shift down 10mm) Original position Left:0 Top:0")
  adv_ver.place(x=50,y=210)

  adv_ver = Label(seventhtab,text="Selected template preview (example, click on preview for mouse scrolling)")
  adv_ver.place(x=230,y=270)

#------------Professional 1 (logo on left side)------------- 
  def adv_maindropmenu(event):
      menuvar=adv_win_menu8.get()
      print(menuvar)
      sql = "select * from company"
      fbcursor.execute(sql)
      advdata1 = fbcursor.fetchone()

      if menuvar == 'Professional 1 (logo on left side)':
          frame = Frame(seventhtab, width=1200, height=155)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=2,y=309)
          canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          canvas.config(width=1200,height=155)

          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')

          canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))

          try:
            adv_image = Image.open("images/"+advdata1[13])
            adv_resize_image = adv_image.resize((200,75))
            adv_image = ImageTk.PhotoImage(adv_resize_image)

            adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
            adv_window_image = canvas.create_window(150, 30, anchor="nw", window=adv_btlogo)
            adv_btlogo.photo = adv_image
          except:
            pass  

          canvas.create_text(130, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(141, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
          canvas.create_text(130, 160, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(120, 180, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(134, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
          canvas.create_text(347, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(350, 140, text="03-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(350, 160, text="18-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(340, 180, text="NET 15", fill="black", font=('Helvetica 11'))

          canvas.create_text(1050, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
          # canvas.create_text(1080, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
          T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
          T_address.tag_configure('tag_name',justify='right')
          T_address.insert('1.0', advdata[2])
          T_address.tag_add('tag_name','1.0', 'end')
          T_address_window = canvas.create_window(850, 80, anchor="nw", window=T_address)
          canvas.create_text(1050, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
          # canvas.create_text(1085, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1085, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1080, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1080, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
          canvas.create_text(1050, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))
          canvas.create_text(1050, 210, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))

          canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
          canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

          s = ttk.Style()
          s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')
              
          tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
            
          tree.column("# 1", anchor=E, stretch=NO, width=150)
          tree.heading("# 1", text="ID/SKU")
          tree.column("# 2", anchor=E, stretch=NO, width=400)
          tree.heading("# 2", text="Product/Service - Description")
          tree.column("# 3", anchor=E, stretch=NO, width=150)
          tree.heading("# 3", text="Quantity")
          tree.column("# 4", anchor=E, stretch=NO, width=150)
          tree.heading("# 4", text="Unit Price")
          tree.column("# 5", anchor=E, stretch=NO, width=150)
          tree.heading("# 5", text="Price")
            
          window = canvas.create_window(120, 290, anchor="nw", window=tree)

          canvas.create_line(120, 330, 1120, 330 )
          canvas.create_line(120, 290, 120, 330 )
          canvas.create_line(270, 290, 270, 330 )
          canvas.create_line(670, 290, 670, 330 )
          canvas.create_line(820, 290, 820, 330 )
          canvas.create_line(970, 290, 970, 330 )
          canvas.create_line(1120, 290, 1120, 330 )
          canvas.create_line(670, 330, 670, 480)
          canvas.create_line(970, 330, 970, 480)
          canvas.create_line(1120, 330, 1120, 480)
          canvas.create_line(670, 355, 1120, 355)
          canvas.create_line(670, 380, 1120, 380)
          canvas.create_line(670, 405, 1120, 405)
          canvas.create_line(670, 430, 1120, 430)
          canvas.create_line(670, 455, 1120, 455)
          canvas.create_line(670, 480, 1120, 480)

          canvas.create_text(165, 320, text="PROD-0001", fill="black", font=('Helvetica 10'))
          canvas.create_text(400, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
          canvas.create_text(740, 320, text="1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(884, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(884, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(884, 320, text="$200.00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 320, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 345, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1085, 370, text="$18.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1085, 395, text="$20.00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 420, text="$238.00", fill="black", font=('Helvetica 10 bold'))
          canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 445, text="$100.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 465, text="$138.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))


          canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

          canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(110, 600, 1120, 600)
          canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
          canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))

#------------Professional 2 (logo on right side)------------- 

      elif menuvar == 'Professional 2 (logo on right side)':
          frame = Frame(seventhtab, width=1200, height=155)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=2,y=309)
          canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          canvas.config(width=1200,height=155)

          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
          canvas.create_text(600, 45, text="Title text goes here...", fill="black", font=('Helvetica 10'))

          try:
            adv_image = Image.open("images/"+advdata1[13])
            adv_resize_image = adv_image.resize((200,75))
            adv_image = ImageTk.PhotoImage(adv_resize_image)

            adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
            adv_window_image = canvas.create_window(850, 25, anchor="nw", window=adv_btlogo)
            adv_btlogo.photo = adv_image
          except:
            pass  

          # canvas.create_text(1000, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

          canvas.create_text(829, 110, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(841, 130, text="Invoice date", fill="black", font=('Helvetica 11'))
          canvas.create_text(830, 150, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(820, 170, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(834, 190, text="Order ref.#", fill="black", font=('Helvetica 11'))
          canvas.create_text(1047, 110, text="INV1/2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1050, 130, text="06-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1050, 150, text="21-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1040, 170, text="NET 15", fill="black", font=('Helvetica 11'))

          canvas.create_text(170, 65, text=""+comname.get(), fill="black", font=('Helvetica 12 '))
          # canvas.create_text(130, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
          T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
          T_address.tag_configure('tag_name',justify='right')
          T_address.insert('1.0', advdata[2])
          T_address.tag_add('tag_name','1.0', 'end')
          T_address_window = canvas.create_window(10, 80, anchor="nw", window=T_address)
          #T_address_window = canvas.create_window(95, 80, anchor="nw", window=T_address)
          canvas.create_text(130, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
          # canvas.create_text(130, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
          # canvas.create_text(130, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
          # canvas.create_text(136, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
          # canvas.create_text(136, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
          canvas.create_text(124, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

          canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
          canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

          tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
      
          tree.column("# 1", anchor=E, stretch=NO, width=150)
          tree.heading("# 1", text="ID/SKU")
          tree.column("# 2", anchor=E, stretch=NO, width=400)
          tree.heading("# 2", text="Product/Service - Description")
          tree.column("# 3", anchor=E, stretch=NO, width=150)
          tree.heading("# 3", text="Quantity")
          tree.column("# 4", anchor=E, stretch=NO, width=150)
          tree.heading("# 4", text="Unit Price")
          tree.column("# 5", anchor=E, stretch=NO, width=150)
          tree.heading("# 5", text="Price")
      
          window = canvas.create_window(120, 290, anchor="nw", window=tree)

          canvas.create_line(120, 330, 1120, 330 )
          canvas.create_line(120, 290, 120, 330 )
          canvas.create_line(270, 290, 270, 330 )
          canvas.create_line(670, 290, 670, 330 )
          canvas.create_line(820, 290, 820, 330 )
          canvas.create_line(970, 290, 970, 330 )
          canvas.create_line(1120, 290, 1120, 330 )
          canvas.create_line(670, 330, 670, 480)
          canvas.create_line(970, 330, 970, 480)
          canvas.create_line(1120, 330, 1120, 480)
          canvas.create_line(670, 355, 1120, 355)
          canvas.create_line(670, 380, 1120, 380)
          canvas.create_line(670, 405, 1120, 405)
          canvas.create_line(670, 430, 1120, 430)
          canvas.create_line(670, 455, 1120, 455)
          canvas.create_line(670, 480, 1120, 480)

          canvas.create_text(165, 320, text="PROD-0001", fill="black", font=('Helvetica 10'))
          canvas.create_text(400, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
          canvas.create_text(740, 320, text="1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(884, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(884, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 320, text="$200.00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 320, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 345, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 370, text="$18.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 395, text="$20.00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 420, text="$238.00", fill="black", font=('Helvetica 10 bold'))
          canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 445, text="$100.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 465, text="$138.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

          canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

          canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(110, 600, 1120, 600)
          canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
          canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))

#------------Simplified 1 (logo on left side)------------- 

      elif menuvar == 'Simplified 1 (logo on left side)':
          frame = Frame(seventhtab, width=1200, height=155)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=2,y=309)
          canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          canvas.config(width=1200,height=155)

          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
          canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
          try:
            adv_image = Image.open("images/"+advdata1[13])
            adv_resize_image = adv_image.resize((200,75))
            adv_image = ImageTk.PhotoImage(adv_resize_image)

            adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
            adv_window_image = canvas.create_window(150, 25, anchor="nw", window=adv_btlogo)
            adv_btlogo.photo = adv_image
          except:
            pass  
          #canvas.create_text(250, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

          canvas.create_text(130, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(141, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
          canvas.create_text(130, 160, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(120, 180, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(134, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
          canvas.create_text(347, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(350, 140, text="06-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(350, 160, text="21-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(340, 180, text="NET 15", fill="black", font=('Helvetica 11'))

          canvas.create_text(1050, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
          # canvas.create_text(1080, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
          T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
          T_address.tag_configure('tag_name',justify='right')
          T_address.insert('1.0', advdata[2])
          T_address.tag_add('tag_name','1.0', 'end')
          T_address_window = canvas.create_window(850, 80, anchor="nw", window=T_address)
          canvas.create_text(1050, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
          # canvas.create_text(1085, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1085, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1080, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
          # canvas.create_text(1080, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
          canvas.create_text(1050, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

          canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
          canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

          s = ttk.Style()
          s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

          tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_2.Treeview')
      
          tree.column("# 1", anchor=E, stretch=NO, width=700)
          tree.heading("# 1", text="Product/Service - Description")
          tree.column("# 2", anchor=E, stretch=NO, width=150)
          tree.heading("# 2", text="Quantity")
          tree.column("# 3", anchor=E, stretch=NO, width=150)
          tree.heading("# 3", text="Price")
            
          window = canvas.create_window(120, 290, anchor="nw", window=tree)

          canvas.create_line(120, 330, 1120, 330 )
          canvas.create_line(120, 290, 120, 330 )
          canvas.create_line(820, 290, 820, 330 )
          canvas.create_line(970, 290, 970, 330 )
          canvas.create_line(1120, 290, 1120, 330 )
          canvas.create_line(670, 330, 670, 480)
          canvas.create_line(970, 330, 970, 480)
          canvas.create_line(1120, 330, 1120, 480)
          canvas.create_line(670, 355, 1120, 355)
          canvas.create_line(670, 380, 1120, 380)
          canvas.create_line(670, 405, 1120, 405)
          canvas.create_line(670, 430, 1120, 430)
          canvas.create_line(670, 455, 1120, 455)
          canvas.create_line(670, 480, 1120, 480)

          canvas.create_text(250, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
          canvas.create_text(900, 320, text="1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
          canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

          canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

          canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(110, 600, 1120, 600)
          canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
          canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))


#------------Simplified 2 (logo on right side)-------------

      elif menuvar == 'Simplified 2 (logo on right side)':
          frame = Frame(seventhtab, width=1200, height=155)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=2,y=309)
          canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          canvas.config(width=1200,height=155)

          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
          canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
          try:
            adv_image = Image.open("images/"+advdata1[13])
            adv_resize_image = adv_image.resize((200,75))
            adv_image = ImageTk.PhotoImage(adv_resize_image)

            adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
            adv_window_image = canvas.create_window(850, 25, anchor="nw", window=adv_btlogo)
            adv_btlogo.photo = adv_image
          except:
            pass  

          # canvas.create_text(1000, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

          canvas.create_text(829, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
          canvas.create_text(841, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
          canvas.create_text(830, 160, text="Due date", fill="black", font=('Helvetica 11'))
          canvas.create_text(820, 180, text="Terms", fill="black", font=('Helvetica 11'))
          canvas.create_text(834, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
          canvas.create_text(1047, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1050, 140, text="06-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1050, 160, text="21-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(1040, 180, text="NET 15", fill="black", font=('Helvetica 11'))

          canvas.create_text(170, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
          # canvas.create_text(130, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
          T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
          T_address.tag_configure('tag_name',justify='right')
          T_address.insert('1.0', advdata[2])
          T_address.tag_add('tag_name','1.0', 'end')
          T_address_window = canvas.create_window(10, 80, anchor="nw", window=T_address)
          canvas.create_text(130, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
          # canvas.create_text(130, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
          # canvas.create_text(130, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
          # canvas.create_text(136, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
          # canvas.create_text(136, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
          canvas.create_text(124, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

          canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
          canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
          canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

          s = ttk.Style()
          s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

          tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_2.Treeview')
              
          tree.column("# 1", anchor=E, stretch=NO, width=700)
          tree.heading("# 1", text="Product/Service - Description")
          tree.column("# 2", anchor=E, stretch=NO, width=150)
          tree.heading("# 2", text="Quantity")
          tree.column("# 3", anchor=E, stretch=NO, width=150)
          tree.heading("# 3", text="Price")
        
          window = canvas.create_window(120, 290, anchor="nw", window=tree)

          canvas.create_line(120, 330, 1120, 330 )
          canvas.create_line(120, 290, 120, 330 )
          canvas.create_line(820, 290, 820, 330 )
          canvas.create_line(970, 290, 970, 330 )
          canvas.create_line(1120, 290, 1120, 330 )
          canvas.create_line(670, 330, 670, 480)
          canvas.create_line(970, 330, 970, 480)
          canvas.create_line(1120, 330, 1120, 480)
          canvas.create_line(670, 355, 1120, 355)
          canvas.create_line(670, 380, 1120, 380)
          canvas.create_line(670, 405, 1120, 405)
          canvas.create_line(670, 430, 1120, 430)
          canvas.create_line(670, 455, 1120, 455)
          canvas.create_line(670, 480, 1120, 480)

          canvas.create_text(250, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
          canvas.create_text(900, 320, text="1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

          canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1089, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
          canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1084, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

          canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

          canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(110, 600, 1120, 600)
          canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
          canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))

  #------------Business Classic------------- 

      elif menuvar == 'Business Classic':
          frame = Frame(seventhtab, width=1200, height=155)
          frame.pack(expand=True, fill=BOTH)
          frame.place(x=2,y=309)
          canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

          vertibar=Scrollbar(frame, orient=VERTICAL)
          vertibar.pack(side=RIGHT,fill=Y)
          vertibar.config(command=canvas.yview)
          canvas.config(width=1200,height=155)

          canvas.config(yscrollcommand=vertibar.set)
          canvas.pack(expand=True,side=LEFT,fill=BOTH)
          canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
          canvas.create_text(600, 45, text="Title text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_line(100, 60, 1120, 60, fill="orange")
          #canvas.create_line(1000, 60, 600, 60, fill="grey")

          try:
            adv_image = Image.open("images/"+advdata1[13])
            adv_resize_image = adv_image.resize((200,100))
            adv_image = ImageTk.PhotoImage(adv_resize_image)

            adv_btlogo = Label(canvas,width=200,height=100,image = adv_image) 
            adv_window_image = canvas.create_window(140, 100, anchor="nw", window=adv_btlogo)
            adv_btlogo.photo = adv_image
          except:
            pass  


          # canvas.create_text(250, 155, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

          canvas.create_text(560, 85, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
          # canvas.create_text(535, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
          T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
          T_address.tag_configure('tag_name',justify='right')
          T_address.insert('1.0', advdata[2])
          T_address.tag_add('tag_name','1.0', 'end')
          T_address_window = canvas.create_window(350, 100, anchor="nw", window=T_address)
          # adv_btlabel = Label(canvas,width=20,height=10,text=""+caddent.get('1.0', 'end-1c')) 
          # adv_window_label = canvas.create_window(530, 110, anchor="nw", window=adv_btlabel)
          canvas.create_text(530, 190, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
          # canvas.create_text(530, 140, text="Address line 3", fill="black", font=('Helvetica 10'))
          # canvas.create_text(530, 155, text="Address line 4", fill="black", font=('Helvetica 10'))
          # canvas.create_text(536, 170, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
          # canvas.create_text(536, 190, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
          canvas.create_text(524, 210, text="Invoice", fill="black", font=('Helvetica 14 bold'))

          canvas.create_text(749, 95, text="John Doe", fill="black", font=('Helvetica 10 '))
          canvas.create_text(791, 110, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
          canvas.create_text(800, 125, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
          canvas.create_text(760, 140, text="United States", fill="black", font=('Helvetica 10'))

          canvas.create_text(745, 160, text="Invoice", fill="black", font=('Helvetica 11'))
          canvas.create_text(760, 180, text="Invoice date", fill="black", font=('Helvetica 11'))
          canvas.create_text(750, 200, text="Due date", fill="black", font=('Helvetica 11'))

          canvas.create_text(947, 160, text="INV1/2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(950, 180, text="06-05-2022", fill="black", font=('Helvetica 11'))
          canvas.create_text(950, 200, text="21-05-2022", fill="black", font=('Helvetica 11'))
          s = ttk.Style()
          s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

          tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
        
          tree.column("# 1", anchor=E, stretch=NO, width=150)
          tree.heading("# 1", text="Product/Service")
          tree.column("# 2", anchor=E, stretch=NO, width=400)
          tree.heading("# 2", text="Description")
          tree.column("# 3", anchor=E, stretch=NO, width=150)
          tree.heading("# 3", text="Unit Price")
          tree.column("# 4", anchor=E, stretch=NO, width=150)
          tree.heading("# 4", text="Quantity")
          tree.column("# 5", anchor=E, stretch=NO, width=150)
          tree.heading("# 5", text="Price")
              
          window = canvas.create_window(120, 230, anchor="nw", window=tree)

          canvas.create_line(120, 270, 1120, 270 )
          canvas.create_line(120, 230, 120, 270 )
          canvas.create_line(270, 230, 270, 270 )
          canvas.create_line(670, 230, 670, 270 )
          canvas.create_line(820, 230, 820, 270 )
          canvas.create_line(970, 230, 970, 270 )
          canvas.create_line(1120, 230, 1120, 270)
          canvas.create_line(1120, 270, 1120, 420)
          canvas.create_line(670, 295, 1120, 295)
          canvas.create_line(670, 320, 1120, 320)
          canvas.create_line(670, 345, 1120, 345)
          canvas.create_line(670, 370, 1120, 370)
          canvas.create_line(670, 395, 1120, 395)
          canvas.create_line(670, 420, 1120, 420)

          canvas.create_text(165, 260, text="PROD-0001", fill="black", font=('Helvetica 10'))
          canvas.create_text(400, 260, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(734, 260, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(734, 260, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(734, 260, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(734, 260, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(734, 260, text="$200.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(890, 260, text="1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 260, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 260, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 260, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 260, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          # canvas.create_text(1080, 260, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(697, 285, text="Subtotal", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 285, text="$200.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(692, 310, text="TAX1", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 310, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 310, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 310, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 310, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1085, 310, text="$18.00", fill="black", font=('Helvetica 10'))

          canvas.create_text(737, 335, text="Shipping and handling", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1085, 335, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1085, 335, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1085, 335, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1085, 335, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1085, 335, text="$20.00", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 360, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 360, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 360, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 360, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 360, text="$238.00", fill="black", font=('Helvetica 10 bold'))
          canvas.create_text(715, 360, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 385, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 385, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 385, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 385, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 385, text="100.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(705, 385, text="Total Paid", fill="black", font=('Helvetica 10'))
          if comcursignpla.get() == "before amount":
            canvas.create_text(1080, 410, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount":
            canvas.create_text(1080, 410, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "before amount with space":
            canvas.create_text(1080, 410, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
          elif comcursignpla.get() == "after amount with space":
            canvas.create_text(1080, 410, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
          else:
            pass
          #canvas.create_text(1080, 410, text="$138.00", fill="black", font=('Helvetica 10'))
          canvas.create_text(700, 410, text="Balance", fill="black", font=('Helvetica 10'))

          canvas.create_line(100, 480, 1120, 480, fill="orange")
          canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
          canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

          canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
          canvas.create_line(100, 600, 1120, 600, fill="orange")
          canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
          canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
          canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
      else:
          pass

  adv_win_menu8 = StringVar()
  adv_winstyle8 = ttk.Combobox(seventhtab,textvariable=adv_win_menu8)
  adv_winstyle8.bind("<<ComboboxSelected>>", adv_maindropmenu)
  adv_winstyle8["values"] = ("Professional 1 (logo on left side)","Professional 2 (logo on right side)","Simplified 1 (logo on left side)","Simplified 2 (logo on right side)","Business Classic")
  if not advdata:
    adv_winstyle8.current(0)
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')

    canvas.create_text(600, 45, text="Title text goes here...", fill="black", font=('Helvetica 10'))

    canvas.create_text(250, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

    canvas.create_text(130, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
    canvas.create_text(141, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(130, 160, text="Due date", fill="black", font=('Helvetica 11'))
    canvas.create_text(120, 180, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(134, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(347, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 140, text="03-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="18-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 180, text="NET 15", fill="black", font=('Helvetica 11'))

    canvas.create_text(1050, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(1080, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
    # T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    # T_address.tag_configure('tag_name',justify='right')
    # T_address.insert('1.0', advdata[2])
    # T_address.tag_add('tag_name','1.0', 'end')
    # T_address_window = canvas.create_window(850, 80, anchor="nw", window=T_address)
    canvas.create_text(1050, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(1050, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))
    canvas.create_text(1050, 210, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))

    canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')
        
    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=150)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=400)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=150)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=150)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 290, anchor="nw", window=tree)

    canvas.create_line(120, 330, 1120, 330 )
    canvas.create_line(120, 290, 120, 330 )
    canvas.create_line(270, 290, 270, 330 )
    canvas.create_line(670, 290, 670, 330 )
    canvas.create_line(820, 290, 820, 330 )
    canvas.create_line(970, 290, 970, 330 )
    canvas.create_line(1120, 290, 1120, 330 )
    canvas.create_line(670, 330, 670, 480)
    canvas.create_line(970, 330, 970, 480)
    canvas.create_line(1120, 330, 1120, 480)
    canvas.create_line(670, 355, 1120, 355)
    canvas.create_line(670, 380, 1120, 380)
    canvas.create_line(670, 405, 1120, 405)
    canvas.create_line(670, 430, 1120, 430)
    canvas.create_line(670, 455, 1120, 455)
    canvas.create_line(670, 480, 1120, 480)

    canvas.create_text(165, 320, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(400, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(740, 320, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(884, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(884, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(884, 320, text="$200.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 320, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 345, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 370, text="$18.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 395, text="$20.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 420, text="$238.00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 445, text="$100.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 465, text="$138.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))


    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(110, 600, 1120, 600)
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif advdata[32] == 'Professional 1 (logo on left side)':
    adv_winstyle8.insert(0, advdata[40])
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')

    canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))

    try:
      adv_image = Image.open("images/"+advdata[13])
      adv_resize_image = adv_image.resize((200,75))
      adv_image = ImageTk.PhotoImage(adv_resize_image)

      adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
      adv_window_image = canvas.create_window(150, 30, anchor="nw", window=adv_btlogo)
      adv_btlogo.photo = adv_image
    except:
      pass  

    canvas.create_text(130, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
    canvas.create_text(141, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(130, 160, text="Due date", fill="black", font=('Helvetica 11'))
    canvas.create_text(120, 180, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(134, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(347, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 140, text="03-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="18-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 180, text="NET 15", fill="black", font=('Helvetica 11'))

    canvas.create_text(1050, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(1080, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', advdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(850, 80, anchor="nw", window=T_address)
        
    canvas.create_text(1050, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(1050, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))
    canvas.create_text(1050, 210, text="TAX EXEMPTED", fill="black", font=('Helvetica 10'))

    canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')
        
    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=150)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=400)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=150)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=150)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 290, anchor="nw", window=tree)

    canvas.create_line(120, 330, 1120, 330 )
    canvas.create_line(120, 290, 120, 330 )
    canvas.create_line(270, 290, 270, 330 )
    canvas.create_line(670, 290, 670, 330 )
    canvas.create_line(820, 290, 820, 330 )
    canvas.create_line(970, 290, 970, 330 )
    canvas.create_line(1120, 290, 1120, 330 )
    canvas.create_line(670, 330, 670, 480)
    canvas.create_line(970, 330, 970, 480)
    canvas.create_line(1120, 330, 1120, 480)
    canvas.create_line(670, 355, 1120, 355)
    canvas.create_line(670, 380, 1120, 380)
    canvas.create_line(670, 405, 1120, 405)
    canvas.create_line(670, 430, 1120, 430)
    canvas.create_line(670, 455, 1120, 455)
    canvas.create_line(670, 480, 1120, 480)

    canvas.create_text(165, 320, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(400, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(740, 320, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(884, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(884, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(884, 320, text="$200.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 320, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 345, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 370, text="$18.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 395, text="$20.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 420, text="$238.00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 445, text="$100.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 465, text="$138.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))


    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(110, 600, 1120, 600)
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif advdata[32] == 'Professional 2 (logo on right side)':
    adv_winstyle8.insert(0, advdata[40])
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
    canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      adv_image = Image.open("images/"+advdata[13])
      adv_resize_image = adv_image.resize((200,75))
      adv_image = ImageTk.PhotoImage(adv_resize_image)

      adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
      adv_window_image = canvas.create_window(850, 25, anchor="nw", window=adv_btlogo)
      adv_btlogo.photo = adv_image
    except:
      pass  
    #canvas.create_text(1000, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

    canvas.create_text(829, 110, text="Invoice#", fill="black", font=('Helvetica 11'))
    canvas.create_text(841, 130, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(830, 150, text="Due date", fill="black", font=('Helvetica 11'))
    canvas.create_text(820, 170, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(834, 190, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(1047, 110, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1050, 130, text="06-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1050, 150, text="21-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1040, 170, text="NET 15", fill="black", font=('Helvetica 11'))

    canvas.create_text(170, 65, text=""+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(130, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', advdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(10, 80, anchor="nw", window=T_address)
    canvas.create_text(125, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(130, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(130, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(136, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(136, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(124, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

    canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))
    
    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=150)
    tree.heading("# 1", text="ID/SKU")
    tree.column("# 2", anchor=E, stretch=NO, width=400)
    tree.heading("# 2", text="Product/Service - Description")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Quantity")
    tree.column("# 4", anchor=E, stretch=NO, width=150)
    tree.heading("# 4", text="Unit Price")
    tree.column("# 5", anchor=E, stretch=NO, width=150)
    tree.heading("# 5", text="Price")
      
    window = canvas.create_window(120, 290, anchor="nw", window=tree)

    canvas.create_line(120, 330, 1120, 330 )
    canvas.create_line(120, 290, 120, 330 )
    canvas.create_line(270, 290, 270, 330 )
    canvas.create_line(670, 290, 670, 330 )
    canvas.create_line(820, 290, 820, 330 )
    canvas.create_line(970, 290, 970, 330 )
    canvas.create_line(1120, 290, 1120, 330 )
    canvas.create_line(670, 330, 670, 480)
    canvas.create_line(970, 330, 970, 480)
    canvas.create_line(1120, 330, 1120, 480)
    canvas.create_line(670, 355, 1120, 355)
    canvas.create_line(670, 380, 1120, 380)
    canvas.create_line(670, 405, 1120, 405)
    canvas.create_line(670, 430, 1120, 430)
    canvas.create_line(670, 455, 1120, 455)
    canvas.create_line(670, 480, 1120, 480)

    canvas.create_text(165, 320, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(400, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(740, 320, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(884, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(884, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(884, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 320, text="$200.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 320, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 345, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 370, text="$18.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 395, text="$20.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 420, text="$238.00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 445, text="$100.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 465, text="$138.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(110, 600, 1120, 600)
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))


  elif advdata[32] == 'Simplified 1 (logo on left side)':
    adv_winstyle8.insert(0, advdata[40])
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
    canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      adv_image = Image.open("images/"+advdata[13])
      adv_resize_image = adv_image.resize((200,75))
      adv_image = ImageTk.PhotoImage(adv_resize_image)

      adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
      adv_window_image = canvas.create_window(150, 25, anchor="nw", window=adv_btlogo)
      adv_btlogo.photo = adv_image
    except:
      pass  
    #canvas.create_text(250, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

    canvas.create_text(130, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
    canvas.create_text(141, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(130, 160, text="Due date", fill="black", font=('Helvetica 11'))
    canvas.create_text(120, 180, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(134, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(347, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 140, text="06-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(350, 160, text="21-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(340, 180, text="NET 15", fill="black", font=('Helvetica 11'))

    canvas.create_text(1050, 65, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(1080, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', advdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(850, 80, anchor="nw", window=T_address)
    canvas.create_text(1050, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1085, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(1080, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(1050, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

    canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_2.Treeview')
      
    tree.column("# 1", anchor=E, stretch=NO, width=700)
    tree.heading("# 1", text="Product/Service - Description")
    tree.column("# 2", anchor=E, stretch=NO, width=150)
    tree.heading("# 2", text="Quantity")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Price")
      
    window = canvas.create_window(120, 290, anchor="nw", window=tree)

    canvas.create_line(120, 330, 1120, 330 )
    canvas.create_line(120, 290, 120, 330 )
    canvas.create_line(820, 290, 820, 330 )
    canvas.create_line(970, 290, 970, 330 )
    canvas.create_line(1120, 290, 1120, 330 )
    canvas.create_line(670, 330, 670, 480)
    canvas.create_line(970, 330, 970, 480)
    canvas.create_line(1120, 330, 1120, 480)
    canvas.create_line(670, 355, 1120, 355)
    canvas.create_line(670, 380, 1120, 380)
    canvas.create_line(670, 405, 1120, 405)
    canvas.create_line(670, 430, 1120, 430)
    canvas.create_line(670, 455, 1120, 455)
    canvas.create_line(670, 480, 1120, 480)

    canvas.create_text(250, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(900, 320, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(110, 600, 1120, 600)
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif advdata[32] == 'Simplified 2 (logo on right side)':
    adv_winstyle8.insert(0, advdata[40])
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
    canvas.create_text(600, 25, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    try:
      adv_image = Image.open("images/"+advdata[13])
      adv_resize_image = adv_image.resize((200,75))
      adv_image = ImageTk.PhotoImage(adv_resize_image)

      adv_btlogo = Label(canvas,width=200,height=75,image = adv_image) 
      adv_window_image = canvas.create_window(850, 25, anchor="nw", window=adv_btlogo)
      adv_btlogo.photo = adv_image
    except:
      pass  

    # canvas.create_text(1000, 70, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

    canvas.create_text(829, 120, text="Invoice#", fill="black", font=('Helvetica 11'))
    canvas.create_text(841, 140, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(830, 160, text="Due date", fill="black", font=('Helvetica 11'))
    canvas.create_text(820, 180, text="Terms", fill="black", font=('Helvetica 11'))
    canvas.create_text(834, 200, text="Order ref.#", fill="black", font=('Helvetica 11'))
    canvas.create_text(1047, 120, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1050, 140, text="06-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1050, 160, text="21-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(1040, 180, text="NET 15", fill="black", font=('Helvetica 11'))

    canvas.create_text(170, 55, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(135, 200, text=""+caddent.get('1.0','end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', advdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(10, 80, anchor="nw", window=T_address)
    canvas.create_text(130, 170, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(130, 125, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(130, 140, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(136, 155, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(136, 170, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(124, 190, text="Invoice", fill="black", font=('Helvetica 14 bold'))

    canvas.create_text(140, 215, text="Bill to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(149, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(191, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(200, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(160, 275, text="United States", fill="black", font=('Helvetica 10'))
    canvas.create_text(550, 215, text="Ship to", fill="black", font=('Helvetica 10 underline'))
    canvas.create_text(556, 230, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(598, 245, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(608, 260, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(568, 275, text="United States", fill="black", font=('Helvetica 10'))

    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3"), show='headings',height= 0, style='mystyle_2.Treeview')
        
    tree.column("# 1", anchor=E, stretch=NO, width=700)
    tree.heading("# 1", text="Product/Service - Description")
    tree.column("# 2", anchor=E, stretch=NO, width=150)
    tree.heading("# 2", text="Quantity")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Price")
        
    window = canvas.create_window(120, 290, anchor="nw", window=tree)

    canvas.create_line(120, 330, 1120, 330 )
    canvas.create_line(120, 290, 120, 330 )
    canvas.create_line(820, 290, 820, 330 )
    canvas.create_line(970, 290, 970, 330 )
    canvas.create_line(1120, 290, 1120, 330 )
    canvas.create_line(670, 330, 670, 480)
    canvas.create_line(970, 330, 970, 480)
    canvas.create_line(1120, 330, 1120, 480)
    canvas.create_line(670, 355, 1120, 355)
    canvas.create_line(670, 380, 1120, 380)
    canvas.create_line(670, 405, 1120, 405)
    canvas.create_line(670, 430, 1120, 430)
    canvas.create_line(670, 455, 1120, 455)
    canvas.create_line(670, 480, 1120, 480)

    canvas.create_text(250, 320, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    canvas.create_text(900, 320, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 320, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 320, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 320, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 345, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 345, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 345, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 345, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 370, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 370, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 370, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 370, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))

    canvas.create_text(820, 395, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 395, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 395, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1089, 395, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 420, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 420, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 420, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(820, 420, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 445, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 445, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 445, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 445, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 465, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 465, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1084, 465, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    canvas.create_text(820, 465, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(110, 600, 1120, 600)
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  elif advdata[32] == 'Business Classic':
    adv_winstyle8.insert(0, advdata[40])
    frame = Frame(seventhtab, width=1200, height=155)
    frame.pack(expand=True, fill=BOTH)
    frame.place(x=2,y=309)
    canvas=Canvas(frame, bg='grey', width=1200, height=155, scrollregion=(0,0,700,700))

    vertibar=Scrollbar(frame, orient=VERTICAL)
    vertibar.pack(side=RIGHT,fill=Y)
    vertibar.config(command=canvas.yview)
    canvas.config(width=1200,height=155)

    canvas.config(yscrollcommand=vertibar.set)
    canvas.pack(expand=True,side=LEFT,fill=BOTH)
    canvas.create_rectangle(10, 10, 1190, 690 , outline='yellow',fill='white')
    canvas.create_text(600, 45, text="Title text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_line(100, 60, 1120, 60, fill="orange")
    #canvas.create_line(1000, 60, 600, 60, fill="grey")

    try:
      adv_image = Image.open("images/"+advdata[13])
      adv_resize_image = adv_image.resize((200,100))
      adv_image = ImageTk.PhotoImage(adv_resize_image)

      adv_btlogo = Label(canvas,width=200,height=100,image = adv_image) 
      adv_window_image = canvas.create_window(140, 100, anchor="nw", window=adv_btlogo)
      adv_btlogo.photo = adv_image
    except:
      pass  


    # canvas.create_text(250, 155, text="Your Company Logo", fill="black", font=('Helvetica 18 bold'))

    canvas.create_text(560, 85, text=" "+comname.get(), fill="black", font=('Helvetica 12 '))
    # canvas.create_text(535, 200, text=""+caddent.get('1.0', 'end-1c'), fill="black", font=('Helvetica 10'))
    T_address = Text(canvas, height=5, width=40, font=('Helvetica 10'),borderwidth=0)
    T_address.tag_configure('tag_name',justify='right')
    T_address.insert('1.0', advdata[2])
    T_address.tag_add('tag_name','1.0', 'end')
    T_address_window = canvas.create_window(350, 100, anchor="nw", window=T_address)
    # adv_btlabel = Label(canvas,width=20,height=10,text=""+caddent.get('1.0', 'end-1c')) 
    # adv_window_label = canvas.create_window(530, 110, anchor="nw", window=adv_btlabel)
    canvas.create_text(530, 190, text=""+comsalestax.get(), fill="black", font=('Helvetica 10'))
    # canvas.create_text(530, 140, text="Address line 3", fill="black", font=('Helvetica 10'))
    # canvas.create_text(530, 155, text="Address line 4", fill="black", font=('Helvetica 10'))
    # canvas.create_text(536, 170, text="Phone: 555-5555", fill="black", font=('Helvetica 10'))
    # canvas.create_text(536, 190, text="Sales tax reg No.", fill="black", font=('Helvetica 10'))
    canvas.create_text(524, 210, text="Invoice", fill="black", font=('Helvetica 14 bold'))

    canvas.create_text(749, 95, text="John Doe", fill="black", font=('Helvetica 10 '))
    canvas.create_text(791, 110, text="381 South Bedford Road", fill="black", font=('Helvetica 10'))
    canvas.create_text(800, 125, text="Bedford Corners, NY 10549", fill="black", font=('Helvetica 10'))
    canvas.create_text(760, 140, text="United States", fill="black", font=('Helvetica 10'))

    canvas.create_text(745, 160, text="Invoice", fill="black", font=('Helvetica 11'))
    canvas.create_text(760, 180, text="Invoice date", fill="black", font=('Helvetica 11'))
    canvas.create_text(750, 200, text="Due date", fill="black", font=('Helvetica 11'))

    canvas.create_text(947, 160, text="INV1/2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(950, 180, text="06-05-2022", fill="black", font=('Helvetica 11'))
    canvas.create_text(950, 200, text="21-05-2022", fill="black", font=('Helvetica 11'))
    s = ttk.Style()
    s.configure('mystyle_2.Treeview.Heading', background='orange',State='DISABLE')

    tree=ttk.Treeview(canvas, column=("c1", "c2","c3", "c4", "c5"), show='headings',height= 0, style='mystyle_2.Treeview')
        
    tree.column("# 1", anchor=E, stretch=NO, width=150)
    tree.heading("# 1", text="Product/Service")
    tree.column("# 2", anchor=E, stretch=NO, width=400)
    tree.heading("# 2", text="Description")
    tree.column("# 3", anchor=E, stretch=NO, width=150)
    tree.heading("# 3", text="Unit Price")
    tree.column("# 4", anchor=E, stretch=NO, width=150)
    tree.heading("# 4", text="Quantity")
    tree.column("# 5", anchor=E, stretch=NO, width=150)
    tree.heading("# 5", text="Price")
        
    window = canvas.create_window(120, 230, anchor="nw", window=tree)

    canvas.create_line(120, 270, 1120, 270 )
    canvas.create_line(120, 230, 120, 270 )
    canvas.create_line(270, 230, 270, 270 )
    canvas.create_line(670, 230, 670, 270 )
    canvas.create_line(820, 230, 820, 270 )
    canvas.create_line(970, 230, 970, 270 )
    canvas.create_line(1120, 230, 1120, 270)
    canvas.create_line(1120, 270, 1120, 420)
    canvas.create_line(670, 295, 1120, 295)
    canvas.create_line(670, 320, 1120, 320)
    canvas.create_line(670, 345, 1120, 345)
    canvas.create_line(670, 370, 1120, 370)
    canvas.create_line(670, 395, 1120, 395)
    canvas.create_line(670, 420, 1120, 420)

    canvas.create_text(165, 260, text="PROD-0001", fill="black", font=('Helvetica 10'))
    canvas.create_text(400, 260, text="Example product - Description text...", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(734, 260, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(734, 260, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(734, 260, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(734, 260, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(734, 260, text="$200.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(890, 260, text="1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 260, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 260, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 260, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 260, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    # canvas.create_text(1080, 260, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(697, 285, text="Subtotal", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 285, text=""+comcursign.get()+"200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 285, text="200"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 285, text=""+comcursign.get()+" 200"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 285, text="200"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 285, text="$200.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(692, 310, text="TAX1", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 310, text=""+comcursign.get()+"18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 310, text="18"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 310, text=""+comcursign.get()+" 18"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 310, text="18"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 310, text="$18.00", fill="black", font=('Helvetica 10'))

    canvas.create_text(737, 335, text="Shipping and handling", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1085, 335, text=""+comcursign.get()+"20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1085, 335, text="20"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1085, 335, text=""+comcursign.get()+" 20"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1085, 335, text="20"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1085, 335, text="$20.00", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 360, text=""+comcursign.get()+"238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 360, text="238"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 360, text=""+comcursign.get()+" 238"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 360, text="238"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 360, text="$238.00", fill="black", font=('Helvetica 10 bold'))
    canvas.create_text(715, 360, text="Invoice total", fill="black", font=('Helvetica 10 bold'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 385, text=""+comcursign.get()+"100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 385, text="100"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 385, text=""+comcursign.get()+" 100"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 385, text="100"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 385, text="100.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(705, 385, text="Total Paid", fill="black", font=('Helvetica 10'))
    if comcursignpla.get() == "before amount":
      canvas.create_text(1080, 410, text=""+comcursign.get()+"138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount":
      canvas.create_text(1080, 410, text="138"+""+comdecsep.get()+"00"+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "before amount with space":
      canvas.create_text(1080, 410, text=""+comcursign.get()+" 138"+""+comdecsep.get()+"00", fill="black", font=('Helvetica 10'))
    elif comcursignpla.get() == "after amount with space":
     canvas.create_text(1080, 410, text="138"+""+comdecsep.get()+"00 "+""+comcursign.get(), fill="black", font=('Helvetica 10'))
    else:
      pass
    #canvas.create_text(1080, 410, text="$138.00", fill="black", font=('Helvetica 10'))
    canvas.create_text(700, 410, text="Balance", fill="black", font=('Helvetica 10'))

    canvas.create_line(100, 480, 1120, 480, fill="orange")
    canvas.create_text(200, 500, text="Multiline comment text goes here..", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 510, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 520, text="...", fill="black", font=('Helvetica 10'))
    canvas.create_text(106, 530, text="...", fill="black", font=('Helvetica 10'))

    canvas.create_text(600, 580, text="Terms and Conditions", fill="black", font=('Helvetica 10'))
    canvas.create_line(100, 600, 1120, 600, fill="orange")
    canvas.create_text(620, 620, text="Invoices are payable on receipt unless other terms, negotiated and noted on the invoice. By accepting delivery of goods, Buyer agrees to pay the invoiced cost for those goods,\nand agrees to be bound to thses contract terms. No acceptance may vary these terms unless specifically agreed in writing by Seller ", fill="black", font=('Helvetica 10'))
    canvas.create_text(196, 650, text="Page footer text goes here...", fill="black", font=('Helvetica 10'))
    canvas.create_text(1090, 650, text="Page 1 of 1", fill="black", font=('Helvetica 10'))
  else:
    pass
  adv_winstyle8.place(x=2 ,y=270, width=220)
  #adv_winstyle8.current(0)


root.mainloop()

